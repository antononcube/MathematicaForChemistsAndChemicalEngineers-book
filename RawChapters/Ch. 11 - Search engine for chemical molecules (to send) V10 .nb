(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[   1083622,      21083]
NotebookOptionsPosition[   1066219,      20574]
NotebookOutlinePosition[   1067139,      20604]
CellTagsIndexPosition[   1067096,      20601]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Modeling and Computing Molecule Ranks", "Title",
 CellChangeTimes->{{3.441484301148834*^9, 3.441484328702744*^9}, {
  3.441484387080965*^9, 3.4414843950954037`*^9}, {3.460916213295959*^9, 
  3.460916216250139*^9}}],

Cell[CellGroupData[{

Cell["Anton Antonov", "Author",
 CellChangeTimes->{{3.4449300945702057`*^9, 3.444930101932673*^9}}],

Cell["book for Wiley 2009-2010", "Institution",
 CellChangeTimes->{{3.44493010505249*^9, 3.444930142250931*^9}, {
  3.460320667598672*^9, 3.460320702010445*^9}, {3.62517809922092*^9, 
  3.6251781033740177`*^9}}],

Cell["last reviewed 2014.11.16", "Institution",
 CellChangeTimes->{{3.625178109117313*^9, 3.625178129525014*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.441484351738695*^9, 3.441484355973689*^9}}],

Cell["\<\
In this chapter we are going to consider the mathematical modeling for \
ranking or prioritization of molecules suitable for queries in a search \
engine.  \
\>", "Text",
 CellChangeTimes->{{3.4415003905771713`*^9, 3.441500392366102*^9}, {
   3.4415004578380537`*^9, 3.4415004739900017`*^9}, {3.441500886794716*^9, 
   3.441500899366473*^9}, {3.441501054950355*^9, 3.441501060934025*^9}, {
   3.441501280198286*^9, 3.441501387446207*^9}, {3.441543389166103*^9, 
   3.441543389471573*^9}, 3.441545350707363*^9, {3.445015117492118*^9, 
   3.445015120225433*^9}, {3.4599723825759373`*^9, 3.459972446276781*^9}, {
   3.459972735822832*^9, 3.45997276676509*^9}, {3.466545696440112*^9, 
   3.4665457014690447`*^9}}],

Cell[TextData[{
 StyleBox["Problem formulation:",
  FontWeight->"Bold"],
 " Given a large number of molecules each characterized with a molecule name \
(e.g. \"PropargylAlcohol\"), and a formula (e.g. \"C3H4O\"), give the most \
relevant search results to be retrieved using very few letters typed in."
}], "Text",
 CellChangeTimes->{{3.441498414710165*^9, 3.441498424157659*^9}, {
   3.4414986680094347`*^9, 3.441498825926745*^9}, 3.441499422618422*^9, {
   3.441499614745515*^9, 3.441499730078024*^9}, {3.4414999427681503`*^9, 
   3.441499994134137*^9}, {3.4415000891422462`*^9, 3.441500105622294*^9}, {
   3.4415002981625443`*^9, 3.441500306438678*^9}, {3.4415010723946943`*^9, 
   3.4415010768468437`*^9}, {3.441501109534238*^9, 3.441501124864366*^9}, {
   3.44150120932644*^9, 3.441501248366588*^9}, {3.441503066539649*^9, 
   3.4415030865826817`*^9}, {3.441543437264089*^9, 3.441543450524304*^9}, {
   3.444595613520853*^9, 3.444595614308887*^9}, {3.444595650146884*^9, 
   3.444595738802161*^9}, {3.4446021323949633`*^9, 3.44460213320144*^9}, {
   3.444681893571008*^9, 3.444681894192148*^9}, 3.44501259776918*^9, {
   3.4599727810589533`*^9, 3.459972863837428*^9}, {3.459973052197321*^9, 
   3.459973077118698*^9}, {3.4630852827060013`*^9, 3.463085286308899*^9}, {
   3.466545718737768*^9, 3.466545728900901*^9}, {3.625178579069956*^9, 
   3.625178584088002*^9}, {3.6251786294946737`*^9, 3.62517863987606*^9}}],

Cell[TextData[{
 "The approach we take is very similar to the algorithm ",
 StyleBox["PageRank",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " used by ",
 StyleBox["Google.com",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". We are going also to consider an approach analogous to ",
 StyleBox["ExpertRank",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " used by ",
 StyleBox["Ask.com",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.441545379779163*^9, 3.441545382210776*^9}, {
   3.441562560466882*^9, 3.44156257762093*^9}, 3.444595553471575*^9, {
   3.444595883557943*^9, 3.444595944405507*^9}, {3.444596183467113*^9, 
   3.444596225577744*^9}, {3.444597050072074*^9, 3.44459712455217*^9}, {
   3.444597156105394*^9, 3.444597160552703*^9}, {3.6251786512075453`*^9, 
   3.6251786668315*^9}, {3.625178707107581*^9, 3.625178711363658*^9}}],

Cell["\<\
The basic idea of our modeling approach is to link the molecules into a \
graph, the links being made between molecules that have common chemical \
structures. The assumption is that simpler molecules would be better known or \
large parts of them would be sub-parts in other molecules. We further assume \
that in this way closely related molecules would densely link in sub-graphs. \
The search ranks are provided by the eigenvector with the largest eigenvalue \
of the adjacency matrix of the molecule links graph.\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQzVF2/jDfqpeOFienvgDRJ0LD34DospnXv4DoF9Pf
/AXRSsHbGPiB9JuJ01hAtK++lSiIdkm6YAai7wlcNwfR27zi3UG0QO5vbxAt
8yIvGUQXhvsWguiQE65NIFrk/MwuEM0k2N4Hon+4hU4E0X+qNP+LA+nTEwzB
tKxBIv91IP0kPEgARC/i1fK9AaQvmG4A08bd14JA9IHJdhEguvJmDGvC8ZeO
YfPmsYHoRfV/uEA0m66ZIIiOOtUvBqL7bFqUQXTLszmGIPrAJDZTEL1J6IcD
iH7Z88wFRAspe4aD6DmL5kWD6Ok7i5aC6NK1oqtA9AbrFbtBdNsVl70gmkV9
6yEQrZCYeRJE/9iWf4nzBNA9z5NugOiJczaGv7z80vGXEWssiPYx+ZgKojdY
m6SDaAAw98+I
  "]],

Cell["\<\
The search ranks can be calculated with different initial conditions that \
would allow top search results to be biased toward certain molecules or types \
of molecules.\
\>", "Text",
 CellChangeTimes->{{3.445015265319279*^9, 3.445015439414597*^9}, {
  3.445015497643601*^9, 3.445015510999851*^9}, {3.4599922142450657`*^9, 
  3.459992257887278*^9}, {3.459992288847617*^9, 3.459992316095291*^9}, {
  3.460320984901123*^9, 3.460320999443922*^9}, {3.4603210307394657`*^9, 
  3.4603210477633247`*^9}}],

Cell[CellGroupData[{

Cell["Mathematical concepts pre-required", "Subsubsection",
 CellChangeTimes->{{3.465487922983892*^9, 3.465487932606822*^9}, {
  3.46548801238964*^9, 3.4654880669010267`*^9}}],

Cell["Matrix", "Text",
 CellChangeTimes->{{3.4654880970575533`*^9, 3.465488097725505*^9}}],

Cell["Graph", "Text",
 CellChangeTimes->{{3.465488025070113*^9, 3.4654880269409523`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mathematical concepts explained", "Subsubsection",
 CellChangeTimes->{{3.4654880837970247`*^9, 3.465488094773204*^9}}],

Cell["Matrix Eigenvector", "Text",
 CellChangeTimes->{{3.465488103176894*^9, 3.46548813232559*^9}}],

Cell["Matrix Eigenvalues", "Text",
 CellChangeTimes->{{3.465488118823844*^9, 3.465488135788969*^9}, {
  3.467228123349221*^9, 3.467228123355473*^9}}],

Cell["Random walk", "Text",
 CellChangeTimes->{{3.467228124336912*^9, 3.467228126760869*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " programming"
}], "Subsubsection",
 CellChangeTimes->{{3.465488145359106*^9, 3.46548815019711*^9}}],

Cell[BoxData[
 RowBox[{"Function", ",", "Rule", ",", "Table", ",", "Map", ",", 
  "Fold"}]], "Input",
 CellChangeTimes->{{3.4654881681000023`*^9, 3.4654881827035227`*^9}, 
   3.465488215928433*^9},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData["ChemicalData"], "Input",
 CellChangeTimes->{{3.465488190489851*^9, 3.46548822220746*^9}, {
  3.46548831742585*^9, 3.465488319455105*^9}}],

Cell[BoxData["ChemicalData"], "Output",
 CellChangeTimes->{3.689691313675049*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["GraphPlot"], "Input",
 CellChangeTimes->{{3.465488323902596*^9, 3.46548833280725*^9}}],

Cell[BoxData["GraphPlot"], "Output",
 CellChangeTimes->{3.689691313702093*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Dynamic", ",", "Manipulate", ",", "Panel", ",", "Pane"}]], "Input",
 CellChangeTimes->{{3.465488224463237*^9, 3.465488231927409*^9}, {
  3.465488300623501*^9, 3.4654883118154907`*^9}},
 EmphasizeSyntaxErrors->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chemical Molecule Search Examples", "Section",
 CellChangeTimes->{{3.4624731933519487`*^9, 3.4624732107024612`*^9}, {
  3.4636283812261953`*^9, 3.463628387056304*^9}, {3.465489104534865*^9, 
  3.465489117147196*^9}}],

Cell["\<\
Let us start with an example of the search engine we want to build. More \
detailed clarifications and explanations would follow later.\
\>", "Text",
 CellChangeTimes->{{3.4624742569327106`*^9, 3.4624742702641697`*^9}, 
   3.4628174466635447`*^9, {3.462817613656376*^9, 3.4628176188805637`*^9}}],

Cell[TextData[{
 "Our search engine would have very simple, linear character input interface. \
Possible suggestions of molecule formulas or names would be displayed while \
we enter the characters. In other words, the search is progressive. Also \
certain properties of the top search result are going to be displayed. (We \
can select other molecules from the search suggestions.) The search results \
are ordered by a number called ",
 StyleBox["search rank",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " that indicates their relevancy for our search entry. We might want to use \
certain search result to find similar molecules, in other words to have a \
\"more like this\" functionality."
}], "Text",
 CellChangeTimes->{{3.466101446552164*^9, 3.4661014603292103`*^9}, {
   3.466101588421413*^9, 3.4661015946892643`*^9}, {3.466101633406932*^9, 
   3.4661016668819838`*^9}, {3.4661018078243513`*^9, 3.466101928708085*^9}, {
   3.466102668004877*^9, 3.4661029368070602`*^9}, {3.46610310065961*^9, 
   3.46610314335005*^9}, {3.466103224624009*^9, 3.466103331679714*^9}, {
   3.466103658700047*^9, 3.4661037611139793`*^9}, {3.4661038347177362`*^9, 
   3.466103845788138*^9}, {3.4661041074411783`*^9, 3.4661041684541407`*^9}, {
   3.466285806608142*^9, 3.4662858417479753`*^9}, 3.625178921920113*^9, 
   3.625180114859684*^9}],

Cell["\<\
The most important question is how to produce and calculate the search ranks \
that are measures of the results relevance. Another important, related \
question is should these search ranks be dynamic i.e. depending on the \
search, or static i.e. pre-calculated for all possible searches. We are going \
to describe algorithms for these two types of search ranks, and we will start \
with the static search ranks since they are easier to explain.\
\>", "Text",
 CellChangeTimes->{{3.466103798704723*^9, 3.466103818387499*^9}, {
   3.466103850758194*^9, 3.466103856795747*^9}, {3.466103898441883*^9, 
   3.466103976590596*^9}, {3.466104212789351*^9, 3.466104223161031*^9}, {
   3.4661044595167303`*^9, 3.466104688357273*^9}, {3.466285930847683*^9, 
   3.466285974361959*^9}, 3.6251801246701612`*^9}],

Cell[CellGroupData[{

Cell["Search result for molecule formula entry", "Subsubsubsection",
 CellChangeTimes->{{3.466103004154264*^9, 3.466103033206933*^9}, 
   3.6251801339945602`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
TU0VGuYnK5vaRiKgtMxmi4E5NHDgQOau4Cw3Wg3uArNPuIACW7duRfghQ4Yw
ARUYGCgxUZAkGDZ84WVtgmbSoUMHPrt+5MgRPqfNgcxH8njvMX78eOSOudEq
UVFTU1PF4cPCwtCuuf2GWoemh55kjwi0iJUrV6ruh8mLvYLhu3fv3qj23q8m
TEA5X8k/naQ4daf4WFzx14FFyy+XbosWDj0UfLOF4ELBP6eWPqRbqZ0n0Yfj
Rrdq1QqyGlUO0oZts6ClbWIUwLjQt29fhLexsWGyBePF8OHDIY5Q1RUqAioj
IwP9IfoHtFYMK3wTCXSw0D76+vomJibsvVpJPMHBwe3bt2/Tps3SpUsxAKkV
UArla1Do+RE/ZJp4CR+qN/sU1ODBg93c3PjsCu+T4QMFh2bYs2dPBEAMrDPx
9/e3sLCAnoI4QkNmW2FIrhsTE4OMtGvXDilHp4Sx7+7duySgCILQLY1ZQKH/
3L17d2JiYm5uLswqZLC0tBR5LykpYd9pwiACS0a8M3MVQPFCgjF1s3btWgxA
iv99B4ojtufVzu9hSGWiCWPZe++9hxFEofw8BwIgszlK2HKgkJAQjCDiOX9o
ky5dusBHJwIqIiICI/Wvv/7K3ZJ9paogoJDHTz75BPUQuUPeYQOwVWdIAC4K
TxzCwd4QUTs/WdnUNhIBpdA8m40Kw9pIXl4e7C6uQ7ULKP68xsPDA7eJTUqL
BRTihFWG6sRsHlR+mEm4R2xxGu7jP/7xjz59+tTVd67XrVvH3ttCAoYNGwbz
TKEsCkdHR7aEFQnu3bv3iRMnFMptk1u3bs2m4tPT09u2bQs7M+c1rF2jQGAc
MomKOgmLV/UVRZiLfEmepmLXFJ5bhkgeSlU1ckIT5QIq/MXpu4qApGKf2yV2
QfKV4S+d44TDacLJbCFEJgQ8rSUBVQXQY0ODiB93auf58+eoNqoJQ7+qJbVi
ySM5S7LfhTgeDE98AbZ2spVUJKQE/sAuKytLkn6oJLQF3AW1J6Jh8kxJPu1B
EAShExqzgEKWjx49evHiRWQc0gk5/fvvv/GLXCO/GBouX76MANXsfv39/SFw
TExM3n//fcgipnreKKDUzu9B08FOMzU17dmzJzdWbW1tm4hgL7bDWN20aZM4
cggNPT298+fP60RAKZR7A8Kw7NatG3737t3LLzRx4kRkFlHB5IaD7UpREQH1
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
v37y5MnkX1lZKV9vRSgEFOThqFGj+OnMMEyjhgUUwzAMY5Q0UgElqdZA7du3
j9ybN2/u1KmTGLKJj4+HJElPT6fDXbt27d+/Xz0GX1/fsWPHlr6FdsbD0xMC
6vDhw5JKpnl4eCxYsEBSbVURHh6ekpIijwFqaO7cub179xaHYibhypUrzczM
6KtPMTExFhYWNOqEokbaLl++LI9HIaDOnTvHa6AYhmnssIBiGIZhjJJGLaBo
EwlJpXSioqIgUgYOHOjo6NitW7crV66IkEOHDoVQUo+hTZs278nYsWMH+e/Z
s6dnz56DBw92cXGZNWvW48eP4ZmXl4cwYuc9d3f3ESNGdO/eHSpMKDWop5Yt
W77//vvwR4DTp0+TP0r1448/7tKlC06B2oqMjBRpGD9+vK2tLWLu0KEDHCS4
eBMJhmGMABZQDMMwjFHSeAVURESEYou8ly9fZmZm4vGnCAkxtWTJkurGj/Qr
dtiTU1JSkpGRQXpHTkVFBcqzsLBQ/RSUhnxbCR2cOnUqKCioWqllGIZpaLCA
qqysLCsrO3HixKpVq+bPn//pp5+Gh4fjEJ4aP9FeG5CkOg+Dh+BzNeg+KoCn
+CTitWvX5s6dO2HCBDwl16xZo9gjt87BYzc9PV3+vH716hUlVf6VxnoHrWDO
nDn67G3VGEFzgAGWkpIi39GrvLw8NTX10aNHipCKKoR7J+4U7qaoaeKe4hR5
DRRNT2P8BC6BWnH//n1UhjrMpp7A2Hvw4IGOAMhmWloaekWF/+PHj9U3akZf
gY4UxaseD2xRZFNRzzWWlUjYw4cP1ROjaEGMPjReAYU0Q0CpVz91oqKi1Ctk
g+XZs2dxcXG8gwTDMI2dJi6gYPbAiAoNDY2JiUHe/6cCjoMHDy5duhR/1YmG
gr3q5+dnY2PTuXPnOg/Tr1+/DipatmzZqlUrco8ePVr99Pfff/+bb76RVOLF
1tYWebx16xYKU/gbiODgYFxuzJgxnTp1WrZsGXniAfree+9ZWFg0a9YM/tu2
bTNcAvQHdQapojktxgSs902bNpmZmQ0YMMDDw8PKysrBwUFSvbu2tLT09vZ2
cnLCX2VlZRR+7dq1Q4cOlceASiV2PEYlFPOCOnbsKE5p3rx5h7eEh4friB/N
asOGDebm5rhK7969UZ/Pnj37bopCUmk61EY3NzckCXmhtSEKoFbs7e2R8i5d
uogFJkh/3759XVxchg0b5uzsnJiYKMIjC4jQ3d0djnPnzgn/rVu3Ih5crnv3
7pCKwl8+t2rRokXkeerUKVxu5MiRjo6Onp6e6JPJX2MLYvSh8Qoool7eLRgU
48sRwzBNk6YsoNCTFxcXr1y58sCBA4jwz//+SeBc/HvkyBH8hQC17/Bhd128
eDE+Pl6HOKp9GF9f308++URHMnJycmidL4xD2LpCGxpaQOFyVK8gSCGXUN+k
twKqoKAAqhC2dJs2bRQfOqkXjFVAQd3A9hZrGVClyS0fAezRo0dsbKwIr1tA
ocL8R4U4Xf0UHfHjjtvZ2d29e5cOf/jhBxMTk+Tk5LrLsS5WrFgxbdo0SaXj
Ro0apS7e4Q/FR5+/QaWF8KSxKhoyozBRUVHQX+IUMWq5evVqxEnulJQUaFXS
QTExMfLyQTVD30JlKFoirkJDdbhBCLxx40by19iCGH1o7AKKYRiGaZgYsYCC
XtD9gIN1l5CQ8PXXXyPv/2/mvZJev37z5s1r2DMoh/z8/J07dx4+fFh9HnjN
OH78uA5xVPswCgGFTAUEBNy7d2/BggWkj2DiXr58OS8vb9y4cbBX8e/u3bsl
mYCCeQZPEUNgYCDtUgvOnDkzc+ZMHx+fyMhIMbmLItyyZYu/v7+OYHLEDrdC
QEmqjaHgPn36tHqaUTMXLlw4ZswY+IgJVxQMhyEhIbiWUH/Z2dnr16+fNGkS
/MWcFkT75ZdfwgRFdubNmyeMz4qKCviPHz9+xowZYjW0UQooKFPoU7E8XCOo
8y4uLrQ3l6SHgFKPTaOA0hh/aWlp27ZtoWLkAfr374+7rG+WagG0Sfv27VFR
6RC1EcpOEebChQsWFhZC+qFGQRYpwvz888/QMuqzPT///POpU6eSG/VNLJZH
79qiRYuMjAw6VP80qoLg4GCN+0ur7xHN6KAOH3DoDFlAMQzDMERjFFCwuutk
BKqwsHDjxo1Xr16FpoAh9OLFi3+rgGL6/ffS3H/lXrt2bfPmzRoXzNaAdyyg
SAt4enpu374dd1l6K5TKysq2bt0KW+6nn34ilSEEVHJyMk4RMcA+vHnzJhzH
jh2D/Yx4IDRgJAv7ECf26tVr8eLFNP9KWzABirpVq1YobenvAioqKgrpyc3N
VaS5uLjYyspq/vz5MFYhoBB5UVGRyBrs7ejo6DVr1kAd0KSpkydPfvXVV8gF
5JX4SApUkoODw4gRI/bu3Tt58mQYw+QPFeDq6pqYmIhIrK2tybY3SgGVlJSE
TGlb74NihzKaM2cOhKpYYgM11KdPnxsyICjkAmrChAkoc/mSHJwyZMiQMhVy
WaEeP6VHsewuNDQUl6jbjGvk4cOHuLpY7Y6smZiYKDoKVD/56BL0uHplXrRo
ESqqOESW0Qqgs7y8vCDkyRO1TowigS5dugiJijSgxISeUoDYHB0dxbZpAnkL
YvSBR6AYhmEYQ9DABRQMbMNN4bt79y4sJdpTCJZ5SUkJSqC0tBQOHMLQQoDY
2Fgx0aiW1IuAgvQQPkIowRNmmLq/NgGFALB+yROiEmGoTOAfHBwsj0djMJEe
Ozs7JJ4OSUBB6fTr18/U1JRGNBRpjoyMFEtsJNUyEzJHKZgYS5o2bZo8GeCX
X35p3bo1uSGgunbtStOozpw5Y25uLqlmMyIGsRUwLGQymI1SQEHYIlPa9h+A
SQ8hgHKOiIgQn8uEbQ854yUDClcIKIgOCNUpU6a0b9+e5rnRKQjTWYV8TEc9
/u+//159/IU838H2Hbdv38aFxFsROlTscQFVPnLkSPmhh4eHPMB3333n7Ows
3w/t/v37H3zwgY2NzcyZM4U6QzlAnoswPXv2jImJITeKJSwsDBJeEY+k6kvR
lgMDAxWThxUtiNEHwz3gqpzhwDAMwxgxhpvhUCcCyqBroNLT0+Pj43Nzc2Ew
I+8w3p49ewYbDw4cwjMvLy8hIUGseqgl9SKg5FqgxgLKzMzswIED5IkaAn+a
86ZYPKUtGEAdc3Bw+PHHH0VgElBQNydPnhTmqyLNH330kRgwAjBQaYahItiG
DRvc3Nwk1VTATZs2zZgxA+YujHn6F5f4xz/+QW4oprZt20qqLzkiBtxu8sdd
hojTWGhGAI34iNmYGoG8wg2CSU+HuqfwCaCXbW1ttZ2iLf5ff/0V6Tl//rw8
wLfffmtpaalnjmoDpJNc2kPpo6IqtsiD6pGPQC1evHj69OnicPfu3b1790a/
oTF+aHkXFxdyQ4XJR6A6dep09OhReWA0E7RlufyvqKhAnf/www8VSVJvQYw+
8AgUwzAMYwga+AiUoQUUDP779+8j4zDwYLrAaKmsrKRdmsvKyhADFFZTE1D0
3hsq0sTEhASUo6Pj+vXrKTAsT4SBDSypCShtwfLz8+3t7X/44Qd5auVT+LSl
ecWKFf369RP/wqalLcgUwQIDA0NCQuAYMmRIUFAQbt+NGzd0C6iUlBTEIKZa
wcpFCjUWmhFAa6A2b96sO9jKlSsHDRpEbj0FVGJiIoqLxpV0Cyh5/GhZ5ubm
oaGh8n+nTp0qZl0aFFRva2trIe337NkDNaQIc/nyZaRQ9B7e3t7IHbmPHDmC
eo4qrS3+tLQ0IVcXLFggFhWWlJRAqalvN+3v7z9hwgRxCPn/z3/+UzH2pLEF
MfrAAophGIYxBE1ZQN27d2/r1q2ZmZmwAGGxIIN//PEH8v7mzRv6ShFUwLZt
2/T8OGCVqAufXbt2iR2SaxOGqL2AevToEWw8WIBwwKjD6SSgli5dOnjwYNQQ
aBOYwTAgaT6YQkBpC4aEjR07tvQttGu0PgIqKSlJiDhyX7t2TQSjt/G5ubkO
Dg4XLlygzQFo0w8IIjHApFFAIQ3Ozs5IJGoIMgvlRRLMKAWUpFI3ZmZmJ0+e
pENUbLpxuB3URlBWffv2nT17tghfpYCqrKycO3euUB8aBZS2+KHmOnXqJL4F
Ex8fD8FbV28qqiQsLGzKlCmSqtdyd3ffvn07JTU8PBzKWlKJrB49ehw6dEhS
7UzSrl07Gm9CVbG0tIyNjRWVmZQOikLMSESlQlHTzjPIkZWVFU0XRJZHjBih
SAnOgpoT6gzl0Lp1a1RCilzMqNTYghh9YAHFMAzDGIKmLKCQ5X379p0/fx4Z
h3RCTv/66y/8ItfI79OnTy9duoQA4mssNSY/P9/W1hamFyQAHDA7yR8GJ+yi
2ochai+gJNXSeFNTUxsbm9OnT4spfGVlZX5+fpAeMHp79uxJRqakJqC0BWvT
po38qze0NF4fAQVgrMJ87datG37FchIK5u/vD+sdkQcGBtKNhhxGMJQMBBQM
YBrR0CigJNVIARLZpUsX5BfJhl2qMQHGwcuXLyMiIpB33FkIW3t7e9odDtUb
1r6npyck+fTp08Xt0C2gIDqgBbp3744qJ1SPRgGlLX7ojqioKAsLi4EDByI9
uL9iPdo7AOpm4sSJAwYMQCUJCAigyXJ5eXm49WJ3wTt37iBhHh4eqMxinReN
uMmhXU2gg1q2bInmgDJB4YjhLYDabmdnN3z4cNRVsY8HBCyiRbFAxQcFBYl9
PlGl5ZGLTSo0tiBGH1hAMQzDMIagKQso2C0w/8LDw2/cuIEsQz1R/HAgv8nJ
yfgLAepqG3N1YDQuWbKk9mHqFliDGj8fDEWpj5bUM5j+wL6FcpQnScgc2vRD
Hhgijoa98Kv4SyOFhYXiPb/RgzLMyclRLN5BKd2+fVvbFhMaKSkpycjI0LNd
6IgfdzYzM1OxhcI7A+Wgu6KiuLKysvQsmYqKCtqORv0v1EnFRjTQj7g68l6t
BDM1gAUUwzAMYwiasoCCGQPr7urVq+vWrYuMjExNTX2tAqIJh/DEX2KWjiGI
iopSXxNRgzBNDWMdJ2IYpm5pvAIKyv358+f6XIImnJM7MTExIiKC3MisYiuS
al1a44f8dFyaYRimSdGUBZSkeskMiQTFFBcXFx4eHqICDhzCE39pHIth6hdU
1NjY2GoNmjAM0wSpdwH1Uju6T+zdu7epqWnLli1dXV11T9qUv1CSz1hWTLHW
H7p0q1atzMzMfH19dUgkfpfFMEyTpYkLKEn1Dg2meFFREcJnqoADh/A03NgT
wzAMY2jqV0BVVlYeO3bsgCZOnDih+1yomK+++qq0tHTTpk2QUTq+nlxRUXHn
zh1SZHIBlZOTU1JSovsqOi6N3CUlJUFGiY9T6L60NmbNmiU+f8YwDGM0sIAi
oJXwsKMXg3CwdGIYhmns1PsI1IMHDzQKqIcPH+o+kVSMpNotVmyMD8ECiTR+
/PgZM2aIvUqQtYCAAPoItVxArV279vLlyyJAYWHhqlWrpkyZItduR44cmTx5
8pw5c86ePSu23BeXBsOHDyf/Ki8NTwRIT08PDAycN28efeg8Li7OxsZm8ODB
CIa7UGVxMQzDNBZYQDEMwzBGSb0LKHDhwgWFeqLPMegGKmbTpk1XrlyZOHHi
4sWLydPPz8/V1TUxMTE6Otra2vrw4cOSHlP4KACk0BdffLFly5ZWrVrRrvvn
zp2ztLTcsWMH0jNu3DjxFXUhoHBis2bNvv76az0v7eDgMGLEiL1790KU0TfQ
s7Ky+vfvDz31008/ofz1KS6GYZhGAQsohmEYxihpCAIK1z148KBQTwkJCfSJ
Ot1AxTg5OVlYWECA0PATfqFWxIb/ISEhAwYMkPQWUDTw9OrVq3bt2kE6SapP
kAcFBVHgW7duyQWUp6ent7c3pNbUqVORTT0v3bVrV9rZ8syZM+bm5hQYUUG1
6VNQDMMwjQgWUAzDMIxR0hAEFMjIyBACKjs7W59TxEKk7777DkImNTUVqkd8
HxxAiJmamkp6Cyix1UPHjh0hcOCwtbUVH3dTCKjp06cjfpQe+VT30vIv7rGA
YhjGKGEBxTAMwxglDURAIeSPP/4I9XT69Gk9F9jKFyLB/dlnn6WkpECtCP21
ceNGe3t7qRYCysvLa+3ateR56dIl9Sl8gupemgUUwzBGDwsohmEYxihpIAIK
FBQUQEAVFxfrGV6oGIgdiJTDhw9XVFQ4OzuvXLkS13306NGQIUNCQkKkWgio
7du3d+3adf/+/bt370ZsJiYmiksLqntpuYAKCAgIDAzUv6AYhmEaBSygGIZh
GKOk4QgooGMrcnWgYlq0aNG8efMBAwYsX76crpWWltazZ88uXbqYmpr6+fmV
lpZKtRBQKA3EDDU0b96848ePm5mZiUsrBFR1Ly0XUNevX7ezs+vbt++DBw+q
VVwMwzANGSMWUDk5OSygGIZhmix1+IDDA6WBvKArLCwsLy+v2zg///xzKCkD
XbqysrLKbdsZhmEaF41RQBUUFPAIFMMwDKObBjUC1dA4c+bMrFmzoqOjP/74
YwsLi+PHj9d3ihiGYRoNDVxAQSvxFD6GYRimBhjuAWcEMxzweI2Pjw8PD4+K
irp9+3Z9J4dhGKYxYbgZDnUioN7BGqjKysqysrITJ06sWrVq/vz5n376KR4o
OIQn/qqrcq6oqEhPT3/x4oXcE4fPnz9vCE/hNWvWXLp0SVJ9WX7OnDn0ZXl1
NP6LLCgKSsSmP7qvq05iYmJERES1LsGgpmVmZqakpNBnNIny8vLU1NRHjx4p
QlJXIEBdffnyJblRmZ+/RVRpnCI/1E1JScmvv/6q/4J6Q3Dv3j3dizKQzbS0
NPWvfz5+/PjOnTsKTzQBdKQoXvV4kFm0fVF6hMZiJ/Ly8hBeY7eAPk1Hghl1
eASKYRiGMQQNfATK0AIKZg+MqNDQ0JiYGOT9fyrgOHjw4NKlS/FXnWio4OBg
W1vbMWPGdOrUadmyZcK/d+/epqamLVu2dHV13bFjR+0vVGO0LTdWoP4vLEz4
iL1wFbHpj+7rqiNfsMxUCaz3TZs2mZmZDRgwwMPDw8rKysHBQVKt9ba0tPT2
9nZycsJfZWVlFB43dOjQofIYOnToID4Z4+fn995bOnbsKE5p3rx569atHR0d
AwMDIaY0pqSwsNDHx8fa2trT0xONYvTo0dVaWV8nQLygMbq5uSHLyAuEknoY
SBh7e3uUTJcuXfbv30+eKJ++ffu6uLgMGzbM2dkZKl6E79y5MyJ0d3eHg75S
SmzduhXx4HLdu3e/f/8+eWor9levXs2bNw9FCk/0FWhc5A/Bi3Ta2NggckMU
iBHDAophGIYxBE1ZQMFcKS4uXrly5YEDBxDhn//9k8C5+PfIkSP4CwH0/GyH
DmCMUcFCkTVr1gwFTv602VFpaSmMW8iod29JCmosoBYsWNCuXTuYiHKlyQKq
oQF1A4Mc9ZAOUaXJDZkjRkZ69OgRGxsrwusWULi//1EhTscpw4cPh8/Nmzfb
tGkTExOjngxUkoEDB06dOpUGqhDY398f19UoYQzHihUrpk2bRukZNWrUtm3b
1NMJaYMeQFK1WQhPGqtCKxZlGBUVBZkjThGDp6tXr0ac5E5JSYFWRdcKNwpE
FKm2YodSgy4j7blu3Tr0D9T5QGFdvHgxPj6eBVR1YQHFMAzDGIKmLKBgqCQk
JHz99dfI+//bM6+k16/fvHnzGuYTyiE/P3/nzp2HDx/W9i69Ztja2sbFxZFb
7BZ77949yIecnBxJZYhevnx5y5YtsC0l1TwiiIXx48fPmDHj9OnTdCISHBAQ
UFBQEBoa6uvre/bs2fLycsg9uE+ePCmudebMmZkzZ/r4+ERGRooZWYgkJCQE
ESJa8epbXUCdO3cOdqaIKjExcceOHQqZg4uam5sfPXoUnvK37nIBhWJcvHix
l5cXzOZr165pyxHFnJubu2rVqilTppw4cULEhsq5cOHCMWPGQKyJOVcsoPTn
yZMnUDS7du3SEQZ13sXFBbWdDqsUUOqxkYAiN5QFqpz0tqKieuPeoUogftxl
yApxFjof+OhOW90CSdK+fXvaxhmgMULCKMJcuHDBwsJCaJxJkyZBFinC/Pzz
z82aNVOfdPr555+jqpN73rx54gs46F1btGiRkZEhD6wo9jlz5ixatIjcqOoo
GahREfj48eMsoKoLCyiGYRjGEDRlAVVYWLhx48arV6/m5eXBEHrx4sW/VUAx
/f57ae6/cmHwb968GcHqqrRxrVatWomRJgioTZs2XblyZeLEiVAZ5An10atX
LxxCFkkqY9XV1RX6JTo62trammwtkhuenp6xsbFQHGZmZhMmTNi6dWtERATc
pPiOHTsGo3f79u0QKTCGhVGHLEM2Xr9+vXv37vv27RMXVQio+/fvwyHWdAwa
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
Dw+XMMYcSFGcUQ6nTp36zDPPWHlxjRpAiC00XgFlMMqfrKws0zfBwgK7GkIF
TFuym8KpWSKEECI0ZQGVk5OzevVqzERlZWXwWFDA27dvo+y3bt3CITQU3Pj4
+Hj732ikZjoRPqIjDEY3Fb7TDz/8IIc4nfiZNQoozJUBAQHweFHAK1euDBo0
aOHChQYTbZKSktKsWbPffvtNhY8cOaLNWB0EVFRU1MCBA9FakAdkAE6j7A1D
tJkzZ8KIQwTgIhqMjqI8PPLLL7/AI924caNpJpWAspIyBZSdWGppxcXF0kfK
y8uDgoKmTZum4lsRUPgVWo5OkWVkZLi5uaEdytollBE0hbz/RF1BdCuIrLFj
x8riKa7v008/3adPn3r+w+tly5bJAhDOO2TIkDVr1hj+utkJ+ezVq9fXX3+N
8JkzZ9q2bSvrSuhrnp6eiYmJxXcQpWPJrkBtQLUpFYYu2bJly+zsbIRxUby8
vOS1AJs3b27VqhU6iCSidlRaGkBIjTRqAUUIIaTB0pQFFIq8fv36ffv2oeCQ
Tijpn3/+iU+UGuUtLS09cOAAIqh/Y6kzERERvr6+gwcP7tGjR3R0tLJXVlbG
xcVBH3l7e0MvIM6sWbMMNggog/FJ4QceeKBLly7u7u5TpkwRB0ynTQCcOrh/
OC8+ta+YHj16tI+PDyLDMUZANszbIqBKSkpwOmSpU6dOyIDaXY9o48ePh9sJ
O1xx2TCGTKJQHTp0GDNmzOzZs5FbuKOWBJSVlCmg7MRSS0PzhrAaNmxY586d
J0+efPHiRYlvXUDBgZctmrqzoK0GBgaiQfbu3Vv+Xko9RqeuIK472gm+DQ0N
lYZR//fM0dpx3v79+6O5QuzLZjndZqdTp06hosLCwtAa5X3mBuM/Wd/zV+St
LJbsEKr4Oao3ICBg7ty52vd5oi+3aNFi4MCBEFY//fSTGGfMmKFNRL2MwtIA
QmqEAooQQogzaMoCCv5Menp6TEzM0aNHUWSoJ0kfAZQ3NTUVXyGC/a8xr66u
hmtq6c8Nq6qqIDfMPjpRI3A+1W1qS8A/zM/Pd8g/AiugLnW6UpxknOvSpUta
O8qutJItUtQ0ZeIozLY0SO/MzExLr5ioA9AOp0+fNvsIjwJiGSc1fQd4faL+
psoSqK7s7Gx7agaNH2cRFWkKKgEyTb2u33o6VgYQYgUKKEIIIc6gKQsouCXw
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
UjxMKylTQNmDlZZmMK4TQRk9++yzENrqERu0hD59+hzVAEGhE1DQF8HBwWii
cti1a1dcTbOnUFcQzQMNUnerH039xRdftLOMtnPp0iXURk5OjhyiaM2aNdMN
FGiE2lWkhQsXqtaomDdvHjqaafo6O86FyszIyNDGQadGmitWrHj88cdRaabP
guk6psGoVT/44ANI1C1bttSitE2e9PT006dPnzt3DoO8PAZVVlaGQR6NEKIJ
84hST7pH+XRQQBFCCNHSlAXU2bNn4Smh+PDzoSzg3qMGiouLEcAhHC1ESExM
xKdDqlonoKAX4FyZfSocQqlbt26y/WnPnj0eHh7KLgIqNzcXv4UwETucMfH3
RJvIgycAHtr999+vksXZ1aYgg/GSjR8/ftasWcqhhaeHONOnT8ev/P39s7Ky
DEbvd/78+epXOISnLWEITJxO6gf2d955R+zffvttp06ddH6yj4/Prl27VCZl
4Qlx2rZt++OPP1pPmQLKHqy0NINxVQgOP654XFwcfEsxoiVAMY3QAP2rE1Dx
8fGhoaFylfEJGQKZbPYU6gpC9ZuuUk2dOjUiIsLOMtpOZmYmakPdFZFD3Ts0
oqOj5e6BOgwLC9NG2LBhQ0BAgOlWOlM7qnfZsmUhISFaOyrE09MzISEBwmra
tGm6xT7TjgkWLFgASRsUFCSdiNjIyZMncYkxkpw/fx5DOrQqBvny8vIbN25A
NFUbqaysRO8wXUzUQgFFCCFES1MWUOnp6Zs3b75w4UJRURHKjgkUEyt8SARw
CGNeXt6WLVvU0w12YnYFClLINKZ2pQkqSbbSae1QHPgtcit2ZNLd3d1wR5sg
52J//vnn1eoVmDhx4syZMyUM/wFfPffcc9o3gMFt7tGjx/r165OTk9VjKTr9
0q5dO+Uno7W4ubnJBkJtNNmXhYqFc7Ju3TqcZcKECa1atUINmGYSrrvsp7Il
ZVIHrLQ0BRxIPz8/uPpyWOMWPgwXuF7Hjx9Xlq5du0Kwm01cXcGoqKgOHTro
9kqhSc+ePbt2RbIDSCelzQ1GqY6WpnsPHqSNdgUK4mXy5MnqcO3atb1790bz
1qVsyW4wtmf0fXUjYvjw4egR2vycOXNGDs12TMXhw4cRWbeeRayA0RvVlZ2d
nZOTg0uD2sbIU1xcLOtQsusAA/41I1bSoYAihBCipYkLKHjs586dQ8Exk8J1
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
8v8DolrKcw==
    "], {{0, 628}, {1131, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{Automatic, 388.66666666666663`},
  ImageSizeRaw->{1131, 628},
  PlotRange->{{0, 1131}, {0, 628}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
cBgzZswrr7yCALINZRQTEyP2Rx99dNmyZRKurKy8ceOGhJXCeuONNxDHeRkj
hBBicOYOB4cIqHp4BqqqqqqkpGTnzp1Lly6NjIx86aWXMFXhEEZ85ah6vnz5
cmpqakVFhdmqy8rKSktLu3btmliSkpLi4uJMY1qy15mCggJcdG1Orhuprq52
4FnsJDo6+sCBA3c7F66AaUsDZWVlJ06cuHLlii6mDAUKNF14axK+/ld0MfPz
81NSUvLy8lQrMr2CV69ePXbsWGFhoQNLV1tycnLOnz9vJQJc05MnT2o7iFBU
VHTq1CnT+Gbt2orSDUc4TE9Pz87OVhWrMnbp0iVdOlYGEGKFRroChamndevW
hw4dksP333+/W7duCGRkZNx7773oPlZ++/rrr0+aNMlJGSOEECI08BUoZwso
zFNwohYtWvTRRx+h7P82gsBXX30VFRWFrxyioebOndu9e/dRo0Z5e3vLTUUB
jtO7777brl27/v37h4WFeXl5+fn5wf7ee+899thjpulYsteB2NjYoKCge+65
59dff1XGN998E7Ozh4dHixYtkCW4uA45l508+OCDn3766d3ORePGUks7ePCg
p6fnyJEj/f398ZV6pAIt4aGHHtKmcN9996FTSLh58+b3aOjXr5/YoZJ69OiB
lIcPHx4YGAgP8PDhw4a/XkEIgYiIiI4dOw4bNszHxwcxIbXqpxIU0Izh4eGh
oaEo8pQpU9Q9fC2QNr6+vqiZLl26fPnll2JE/aDX9OzZc/DgwQEBAUlJSdbt
QFtR8+bNU/a9e/ciZVTFgAEDevXqJcZdu3bBOHToUAwXqB+MyWK3NICQGmmk
Agr07t17w4YNEv7ss8/QfpD5TZs2de3add++fePHj58zZw5aqYpfWlqKRvXG
G2+MGDHizJkzzssYIYQQQ9MWUNXV1YWFhUuWLMGshAT/+NcfAn6Lb7du3Yqv
EMH+5Ri1uSIjIwPOJ/Ivh3BTO3XqpCZBnEjC9SCg4DkjG8iMTkA9/PDDBuP2
e/hv48aNc8i57IQCyn4stbTr16+r5Q+48YmJiSq+FQEFEXTpDtOmTRNdkJmZ
6ebmlpCQoH5y4cIFkQDqClZVVQUHB0+aNElWUtA9Z8yYgfOalTDOY/HixU8+
+aTk59FHH42Pj9dFgB2KEiOAwdgXIDxlrQrDo6rDVatWQX9J2JLdYBRQGEP+
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
21MzaPw4i6hIU1AJkGnqdf3W07EygBArUEARQghxBk1ZQMEtgfd46NCh5cuX
r1ix4sSJEzeNQDThEEZ8Zbobh5iF60SEkIYGBRQhhBBn0JQFlMF4kxkSCYpp
48aNMTExC40ggEMY8ZVjF25cmO3bt58+ffpu54IQQv4vFFCEEEKcQRMXUAbj
OlRFRUVBQQHiZxlBAIcwcu2JEEIaLxRQhBBCnAEFlACtVFVVVWkEAUonQghp
7FBAEUIIcQYuLKByc3M5wRFCSJPFgRMcJhQKKEIIIUJjFFAXL150+AoUIYQQ
F4MrUIQQQpxBAxdQ0Er1s4WPEEKIi+G8CY47HAghpCnjvB0ODhFQ9fYMFCGE
EBeDK1CEEEKcQQNfgaKAIoQQUjcooAghhDgDCihCCCEuCQUUIYQQZ0ABRQgh
xCWhgCKEEOIMKKAIIYS4JBRQhBBCnAEFFCGEEJeEAooQQogzoICqqqoqKSnZ
uXPn0qVLIyMjX3rppZiYGBzCiK8cVtFGkCWzVZeVlZWWlnbt2jWxJCUlxcXF
mca0ZK8bOTk5ly5d0uXkupHq6mpHncV+oqOjDxw4cLdz4QqYtjRQVlZ24sSJ
K1eu6GLKUKCoqKiorKyU8PW/oouZn5+fkpKSl5enWpHpFbx69eqxY8cKCwsd
WLragvZ//vx5KxFu3Lhx8uRJjIo6e1FR0alTp0zjm7VrK0o3HOEwPT09Oztb
VazKmK5jgsuXL6empuIqWC8U0SETHC40WjiaPSoQozrmMkwQmNf+j5E//vjj
9u3bt27dspIOBRQhhBAtTVxAYTLF3Lpo0aKPPvoIZf+3EQS++uqrqKgofOUQ
DYWJe8qUKd7e3p07d9ba4Ti9++677dq169+/f1hYmJeXl5+fH+zvvffeY489
ZpqOJXtt2bVrV5cuXYYOHdq9e/dhw4bh0ov9zTffvPfeez08PFq0aIEswcW1
/1z28+CDD3766ad3OxeNG0st7eDBg56eniNHjvT398dXJSUlEh8t4aGHHtKm
cN9996FTSLh58+b3aOjXr5/YoZJ69OiBlIcPHx4YGNi6devDhw8b/noFIQQi
IiI6duyIhufj44OYkFr1UwkKaMbw8PDQ0FAUGR0TQsk0DqSNr68vagY95csv
vxQj6icoKKhnz56DBw8OCAhISkqybgfaipo3b56y7927FymjKgYMGNCrVy8x
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

    "], {{0, 628}, {1131, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{Automatic, 388.66666666666663`},
  ImageSizeRaw->{1131, 628},
  PlotRange->{{0, 1131}, {0, 628}}]], "Output",
 CellChangeTimes->{3.689691313753183*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Search result for molecule name entry", "Subsubsubsection",
 CellChangeTimes->{{3.46610301858219*^9, 3.466103043798271*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
ZsyYPn36NMa0QRuhpdBeaDW0HVoQ7ZjpL+Hc3LkUbu4cJHvGZ7KHPuopMDAQ
qjYhISHRcCQo4Qw5w7ydIQYOhs8HGOAMk2f49ddfX758CX8gNjb2wYMHt27d
unHjxnXGtEEboaXQXmg1tB1aUMcPf3Fz50a4uXOQbBufyQb6qCeGYRiG+cDQ
3zGBb6BgcgP0h1Cz7chxc+cuuLlzED2Nz+gOqyeGYRiGYRiGYRhdUKueoqKi
WD0xDMMwDMMwDMNIgUqCVuJnTwzDMAzDMAzDMNrhnXsMwzAMwzAMwzC6oKd6
iouLu3Tp0mmGYRiGyRZYRLCUGHuxYxiGYRiDoI96io+PP3/+fHBw8J07d+4x
DMMwTBbB8oFFBEsJFpQPsOQxDMMwjJ7oo55u3Lhx//79uLi4p0+fPmMYhmGY
LILlA4sIlhIsKLIlhvc2MAzDMPpgpL0N+qin4ODg+Pj4n376KT09PYNhGIZh
sgiWDywiWEqwoEjXF97bwDAMw+iD8fY26KOeUKq0tDQsfzn998EYhmGY3AoW
ESwlWFCk6wvvbWAYhmH0QcvehhxUTz/88MNPP/2U0wsvwzAMk7vBUoIFRbq+
8N4GhmEYRh807W1g9cQwDMPkdlTVE+9tYBiGYfQkQ93eBlZPDMMwTG5HVT3x
+sIwDMPoj+r6wuqJYRiGye2wemIYhmGMAasnhmEYJu/B6olhGIYxBqyeGIZh
mLwHqyeGYRjGGLB6YhiGYfIerJ4YhmEYY5Bn1FNGRkZqaqqms0+ePHF3d09K
StLDVAzDGJEXL16sWbOmffv2ffv2Nfa9cvWEkKsLrwvff//9nTt3Hj58iJo+
ffr0xx9/ROTPP//822+//fnnn3/99dfff//9xx9//Prrr69fv9aSD6snhmEY
xhjkGfWEC83MzOLi4rJxlmGYHOfMmTO2trZXrlzx9/c39r1y9YSQqwuvC6ye
GIZhGFPG1NRTWFhY9la358+f37x588WLF2rP5nl/g2FyO5MnT+7Zs+eHuVeu
nhBydeF1wYDqCQtKVtUTlqqAgIBjDMMwjM5g2sTkaciVwDgY79c5I6mnqKgo
Qz17mjZt2qlTp5YsWdKhQ4fRo0cnJCQolLtZ+vfvL3aznDhxwt3d/fPPP+/X
r19KSorU3zh9+vS4ceN0vMumTZtcXFy8vb2RCSLx//Lly/v27dujR489e/ZQ
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
FbgTJ04UVhIbG0sxuqgn1dzEVahpiRIlpH9YhD5PQUUSggLiBclonx66CunN
atWqTZo0CZk/fvy4YcOG5IBpEizjxo1zdHTEtbgQV0EQ0S+K0m/uQVQiDW3h
QLZnz56lT5ypvRbp69Wr5+7uTkstei99LRAqb8CAAarGkRZGofxRHQaRfuRQ
lARqCC4ffRcCd6FHWppsqzYxk4No8QMFRYoU0eWrEZhtMDzphT5MC05OTsOG
DVMoX4YqWLCg2LyHW1SpUkX2KYYPxpQpU1xdXRXKIdO0aVMfHx+EExMTPT09
r1y5QiW3t7enp2bQgxAs4eHh0hw0qScMqL59+wo5Bt8YChFjKlGJkFQCVfW0
ceNGLa+h7du3D+YNDg7OXsUzJW+rJ8w23t7emIjKlCmDKRGzkJj3MpUtaBHI
f1qD9MkNXWvBggVWVlaYinEVRoHYy61LMbTXHaLpiy++QMMhT2Su/SqGYZgP
yUernlDf9evXHz9+HLWGbkI1//nnH/yPKqOySUlJ/v7+SKD/j8mq6kmh3AUE
HwZrDf5funQpRcq+WO7h4YGzsr9uCX8G65qLi4uI0UU9qeYmrvL19RXflBA0
b96cnjQJQQG1Mnjw4Pz582Npw/IaERGhUP6JqBo1apQvXx6+aI8ePeBQKTQL
FsgKpEGRkAOuIr9O8f6X7qKjo1E1c3Pz6tWrw4PFKfpdWtO1YWFhzZo1g5as
WbOm2LkH/61ChQqoFDwELerp6tWrOCXdaCdKAo02atQouMe4V7ly5fbs2aPF
tmoTMzmIFj9QoKN6Uiif5qBlId7RJ3v37i360oULF6pVq4ZeB78R3uPMmTON
91dftZOamtqpUycHBwdIJAxb2lOHEYruLfQdKgtTQP1hBEn7/MqVK21sbKCJ
YBAEaI8igArDJGBnZ4fxKB4l9OvXT/p3mqR/QKFDhw64HJEwHQLiU6WwmNhj
LEDr1K5du1GjRg0bNly3bp1xrPIveVs9Eeh1mAZlclg7mBjRW06cOGGQ3BTK
ERcSEqLpc6lZRaqeaLs7CkzbwhmGYUyEj1Y9YX2HV+Dp6QkvCPWFdKL8EUBl
g4KCcAoJjPdHz7HiREZGavG4Ro8eLb4XoT8GyS05OVlVTj569Ej1V2hNQJZm
KkhTUlLQLWWyUcu1CUqkMbAqhJj2u0BkQUxp+SEUp8RXwjIlS4mZD0D2/EBN
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
kyAIgpD/EPX0OImOji5SpMizzz67fPnyDz/8kOOSJUvmdKQEQRCyhQKunlJT
U2/durVhw4bx48eHh4e/9957kZGRnOLIpSzJ4ZSUlLt376qM9Wbz5s1RUVHe
fq5evRoXF0eAWRK3zJCQkBATExMfH//gwYP03ktl69ev3+3btzmeOHHi7t27
ffl05gnlYku+NTT/8Se3M/kIIQeh+Z86dero0aM3b960XUpMTKSvc95icycE
W7OlLd+/f9+foIBa6mwa9EvHjx/PjvZ77ty5ixcveni4d+8ej3bG1pe7YaaX
Zq5PVdOzovvY5OTkY8eOXbt2zRaCL3cdII9IM2kZRtTTY4MMKVSoUPPmza0u
pUqVysEoCYIgZB8FWT0xdmNvjBkzJjo6moT/rwkH33333ejRo7mUJQLqmWee
CQgIKF68eGBgYGhoqIfhNGPGjFdeecXXVW7s1KlTjRo1GjduXLRoUczCzMct
YyB2atWqRUzat29ft27dkiVL7t+/P10hqKH2jz/+4Pj555//6quvfPl05snH
H3/Mvb///rtraP7jndseERZyOQicadOm0dxoKW3atClfvjx1VV2aOnVqo0aN
KMpff/3Veour+6effvriiy9avT311FN0Dt5BKVatWsWlkydPape9e/dWr149
ODi4ZcuWpUuXnjBhQlaZ3yiUjh07tmjRgvT27t0bNeT0Exsby9NDQkKqVKmy
bNmyNN337NnTrl07mvbIkSO14/r16wv9m88++0wlrWzZsgRSu3Zt4nDr1i2d
ZFd3TY8ePegesyQTXBH19NigfKkPtjcVS5cuzan4CIIgZCsFVj09ePDg+vXr
48aNW7FiBQH+53/+o+Bern7//fdcwkMGJlZsYB588cUXRCYmJgYNxeN8+fS2
57/++mvsLhWfxMREZYqsXLny1VdfzWQM08WJEyeKFCkyb9487XLp0iUqT7oC
ybB6IhsrVapUqlSpUaNGuYbmP6Ke8iuonqCgIHSBOqXJ6GPseTqQJ554wiZ5
XN291ZOvoODChQtVq1ZFImn1hNgvWrTo8uXL1enFixcRFBEREVmSXsJ54403
DPN1EJJnzpw5Ng+48zj6NPVodKWapfLlriIcFxfXt29fq3pKSUm58gjSSEvc
t2+fYb7Y0VNy9evXX7BggTr25a6YP39+tWrVRD3lD6jthQsXzulYCIIgPCby
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
PW68f/++M5737t3DPWP54IwJuWoLx5pXmQnZA9dHJCQkxMTExMfH28rdhq+K
wQG/5Ey6ou0aEx6R577L9qhRiYmJ9HWud1kzkxBszZa6Z83Pc+fOXblyxVcE
nOUC9EvHjx+3VTBV5TQZy2oic/HiRQ8PNBMe7Ux4et0xWWNjY13rlWvGuvq/
evXqkSNHXPsc+l5GJae7M4HEUGeaa1CinvIZsnJPEIRcQkFWT1gpDMdjxoyJ
jo4m4f9rwsF33303evRoLmWJxfjMM88EBAQUL148MDAwNDTUw8KfMWPGK6+8
4noJ2yMoKGjZsmVWx4iICOQeKWVASe+/rlvv+vTTT4sWLVqiRImaNWuGhYVl
QIOkF2tKSdq0adPInMaNG7dp06Z8+fI1atTwdeO+ffvISewxq2OtWrX27NmT
sXxw5vnHH39MOL///rt2yaqQPbA9Yvfu3SSKfGjfvn3dunVLliy5f/9+1xs9
KgYHzz///FdffZWuaDsTiwmNC5UkXeHkIB41aurUqY0aNSI5v/76q/PGVatW
cenkyZPqlCS/+OKLVg9PPfUUnQMHmzZtqlKlyssvv0yTadu2LZ2nd1Cwd+/e
6tWrBwcHt2zZsnTp0hMmTNAd1Nq1awtZoJKnK73JyckdO3Zs0aIF6e3duzea
wukH/cLTQ0JCiLa1tqTXffbs2bjzOKrl+fPntbuvjHX1//7775Nvr776asWK
FUeNGmX1P3jw4CZNmpCxFNmJEye8E8ixzrSnn37amWpRT/mMpKQkypqmpE4Z
oIsUKbJu3bqcjZUgCAWQAqueHjx4cP369XHjxq1YsYIA//M//1FwL1e///57
LuHB+7W/P6CevvjiCyITExOD5c/jfPn0trcxibHT9CkDR9WqVbFVsCUw0tI7
xWBTT61atSKGhw4dwlBHS3rcuHLlSsyedD3LiTWlPB37H2tNnZLh+tgJV5EV
8+fP1y4HDhyoVq0auZGxfLDlOZlQqVKlUqVKWY26x6yeMBoxCebNm6evXrp0
yWmfa3xVDI4vXLhgU5rpioli6NChZAg2cAZeJvhTW958803vKpdePGoUdhcd
yBNPPOFUT+QV+Yau8Uc9Xbx48dq1aypw/KAdvINCjBctWnT58uXqlNtr165N
walT1FOHDh3+n0ekt88hnDfeeMMwi75du3Zz5syxecCdx9GnqUejK9UkTnrd
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
XNbvvBbv5V7TAMMwsmNm83z80drznn23z2f3dO+ZkbdkBv1+Olb+G+DOnTsO
fkNn3rx52vdFPDnX1lbdjxzJvy3a6a1xzeXl5dp6qqtROQ/y3yeVf7ajxrNU
W3VyVouLiys/c1Wr/czNza3yhoUtCdjr169X/iEbZ5Z1nsSL1Ir29ey1IidB
+xyWIuuR/4VWnk37t0W7NZafn68NynnTnsBUZCWu7ZKmun+j6pccV2Zmpt2f
qfyfjAxqP3vkGsc/CmatOCE3btyo/H0atR0vKiqq1XfpVJ5f/g9BnYcq55d/
Mar8ptPKByhzpqenO/i/aO49AQD04Ob1JBdZ/X4tt7Cw8Oeff/7000+/+OKL
q1ev/u8VpJjkpQzKWzLDk/9armsKCgp8fX3Vgzfutra/Zs168Ky9/WtERkaq
74sADEa/q1uNzzYAAAxMv2cb6qSe9Pvck7XiL1eljySXdu7cuXTp0nkVZEJe
yqC8VYe3PGpL9r9WHx7/K9f216xZD561t3+B8vLyzZs3V75bBBgA954AAHpw
83tPutaTteK/HktLS+/duyfz/15BJuSlDNbXXScAwJOjngAAemjg9aRIKFks
lrIKMkE3AYCno54AAHqgngAAxkM9AQD0QD0BAIyHegIA6IF6AgAYD/UEANAD
9QQAMB7qCQCgB+oJAGA8nltPpaWlJTbKy8vlEKKjox8+fKjfRh2Qg5XdsPsJ
D7PZXPnHlGtLDs32SJ98hZqysrIn/MVtAKgO9QQAMB7PraewsDAfH59nHrt6
9aps0cvL68GDB/pt1IG4uDjZ+hdffGE72L17dz8/vydc8/Xr12XN/v7+6kjD
w8OfcIWalStXDh06tK7WBgC2qCcAgPHUez2VVc/xglJPa9assR35i+spPz8/
KCgoJydHvZR6atq0ac+ePbUZfvvtN29v77qqp9u3bz/heqyV9vnevXvZ2dlP
vloAqIx6AgAYT/3Wk8ViOXDgwPdVOXLkiONla6yngwcPjh07NioqKi0tTY0k
JyevXLny8uXL0dHRsbGxEhHp6enTpk2bMWPGzZs31TylpaVLly4dPnz4/Pnz
i4qKZETOTExMTG5u7ieffDJu3Dhtx2Qp2VxkZOSCBQusFfX0xhtvNGrUSNap
ZpgzZ05ERIRWT7L1efPmjR49WvZBrVnIyf/www+HDRs2a9YsNVJSUvLVV1/J
bG+++abaqyrrSR3LyZMnZTZZSWZm5meffTZmzBjZREZGhjbbiRMn5GCHDh0q
h/no0SO7fVYrUXOazWaZlu1OnDhRxtVgdccOADWingAAxlPv956ys7OrrKe7
d+86XlDq6YMPPrhW4c6dO9Y/11NCQkJISEhKSooUVnBwsFpE6qBTp04jRoyQ
ZHv11VdfeeUVyYq9e/eOGjVqypQpap7x48dLcJ0/f17C5/3339dWO2DAgGXL
lq1atapZs2YFBQUynpiYKOOyq+fOnbNW1NM//vEPWaHUkLyUMxkYGCi7odXT
8uXLZVsXLlwIDQ3dtm2bGnzttdc+/fRT6TtZmxr55ptvBg8eLCPHjh2TS7n1
cT3duHGjqIK6KyfHIsc1cuTI3bt3yyH/8MMPa9eulTCU2JHDUavav3+/t7f3
3Llzf/31V9m0hKHdPts+uSdH3bdv36SkpPj4+DZt2uzbt8/BsQNAjagnAIDx
1Hs9WSvuj9ilk8RLjUtJPUkK9a+gbqDY1tOLL764YsWK0goBAQGZmZnWiljo
2rWr+lqJDRs2tG/fPj8/X6YlQDp37iwTWVlZsgY5IbLUqVOn1GN4arXqtkt5
eXnLli0lyqwVj73JuJw6tT+qnrZv3x4UFGSxWA4fPjx27NjTp09XfnJPcmba
tGlqWkrqo48+MpvN2ruLFi2SilHdpKh6kqNoX+HMmTPqWLp06VL5KzIki556
6ik1LSfh9ddft33Xbp+1elIHrtYs5s2bpz5dVd2xA0CNqCcAgPG4Qz3Jdnft
2qWl0969ex89elTjUo6f3PP19ZXc6PRYQkKC9c+3WjZv3qx9/cL+/ftlHpmQ
NGjUqFEnG0VFRXYPBLZt2/bYsWPWauqpsLBQ4kWiKSIi4tChQ7b1JEn4/vvv
R0ZGPvvss9qtLhmUl8HBwdq9p/v378uyzZo1++STT0pKSqzVPLln94UPctH/
/PPPJ06cOGjQIG9vbzUoJ2H16tW2S1VXT3LgMq6ddvkj8PHxsVZ6GFI7dgCo
EfUEADAed6gnkZ6ertWTuk9UI8f11LVr12XLltktUmM9paWlqWfkqluttaZ6
slY8Aif5ExgYKCdTq6ebN29KEP34448yPX/+fK2erBUfONq4caPtB6bEhQsX
unTpsnjxYqtz9dSnT585c+bIqn755RetnkJDQ2NiYmyXqq6erly5IuPamV++
fLl63JF6AuAyo9ZTVlYW9QQADVYdXt3kguJyPcmchw8flnRKTk4uLy93ZhHH
9STpJP/9L4dmrfhaP/UtDTXWk8zZq1ev6Oho9ekeOSEWi6W6gpBUkTI6fvy4
Gtfq6ciRIzL/7NmzZVqrp5MnT/r6+spqc3JyZB/GjBmjNqeKSVYlq1WfRZJW
UrecZsyY8d5771mdqCc5Y08//fS+fftkQQkf7S7SZ5995u/vr57Hkz/f0tJS
u33WViLjISEhCxculD+IvLw8abF58+ZZqScAT8Dj6slkMnHvCQDgmJvcexJy
2ZJ6un//vpPzSz15e3v7PLZq1Srb/9SXHJg7d27Tpk27d+/evn37Q4cOWZ2o
J2vFJ4AGDBjQvHnz5557zvGTe9aKRpM8mTRpktWmnmTTW7ZskaWsNvUkFTZs
2LBWrVqFhoauW7dO1i87ILEjmwgKCpJBtax45513ZJHnn39edkPdJHLm3pOE
ZMuWLQMDA6WeunXrpr44QnJp+vTpjRs3bteuXUBAgPqictt9tl1JamqqnKsO
HTrIyYyKiiosLLRSTwCegJvXk1x0eHIPAFBb+l3dXHi2QfsdoroihyPXRxcW
LKjgzJz/quDkarU2zM/P106ObEgyx3Y22W0XfrVKQk+tR/6p2kcpLi6WP1wn
9zk3N1fmr+2mAaAy/Z5tqJN64nNPAAAXuM+9JwCAkbj5vSfqCQDgAuoJAKAH
6gkAYDzUEwBAD9QTAMB4qCcAgB6oJwCA8VBPAAA9UE8AAOOhngAAeqCeAADG
Qz0BAPRAPQEAjId6AgDogXoCABgP9QQA0AP1BAAwHuoJAKAH6gkAYDzUEwBA
D9QTAMB4qCcAgB6oJwCA8RipnmRzv//++5UrVwoKCmqc2WKxlNiQl3YzmM3m
6vZf3tIWLC0ttX3rwYMHGRkZlRfJyclJS0vjggug4aCeAADG49H1dPLkyby8
PJkoKyv7/PPPfX19w8PDBw0a1Lp1606dOjle9uDBg142fv75Z9t35Rrapk2b
uLi4KpeNiorSFmzbtq0aLCoq6tGjR9euXV955ZWQkJCkpCQ1Xl5ePmPGDJlN
9q1du3apqakyKH13/PhxeesJzwAAuC3qCQBgPJ5bT4cOHdLqRiYkTNLS0tRL
qRJtujpST8OGDfuPx2xDxmKxvPbaax07dnRQT5s2bVILSripQTl12kZXr14t
raSmd+zYITFVUlIi059++mlYWJja1pYtW77++mvXjh0A3J9R6ykrK4t6AoAG
qw6vbnJB+SvracmSJVu3brVW3Mdp3ry5xEitFpd6Gj58eJVvLV++fPz48e+/
/76DenK8ubNnzzZu3Pjhw4cyHR0d/e6776rx7OxsLy+vX3/9VaaPHz8eGxtb
q30GAA/icfVkMpm49wQAcMxz7z1p9XTx4kVJEgmTWi0u9RQcHLx9+3b17J/m
l19+CQ0NlSJzXE9/+9vfUlJS7D70pJFcGjx4sJqWlYwePVpNy0lu0qTJnj17
rNQTAKNz83qSVuLJPQBAbel3ddP72YYFCxZIAcnEgQMHpJ6qC5nq3L59W9Jp
5syZHTt2nDZtmhqUaJJ0UveGHNSTFNbatWvHjRv39NNPJyQk2L0rqw0JCZGr
sHopWdeiRQsZvHHjhmyocePG27Ztk/ELFy689dZbtdpnAPAg+j3bUCf1xOee
AAAu8NB7T9I+UVFRhYWF1sf3nuTa6tqqzpw5I4ufO3dOpmfNmtW9e/cPK/Tp
06d///7q9lZ1Zs+eHRgYaDvy7bffhoWFye7ZDv7www9Dhw4dNWqUpJZs69Sp
U9aKL+6bMmXK9evXXdttAHBzbn7viXoCALjAQ+upvLx8/PjxV69etT7+3NOX
X37p2qrKyspatmy5fft2mT5y5MhXj0k9jRgxIjEx0cGySUlJUkPFxcXqpcRR
586d79y5U938Bw4c8PHxefDggbUiAIcMGcIlGIBRUU8AAOPx0HqyVnzuST0C
Z634bJGvr+8PP/ygXt68eXPTpk1qesuWLTt27HCwHumjRo0aXbt2zW48JiZG
e3KvsLBw6dKlV65csZ3BYrFMnTo1LCxMvczLy/P399+4cWPhY+q79bQv5TOb
zaNGjZo/f756mZKSwueeABgY9QQAMB6PriftsToplBUrVrRo0SIgIKBz587B
wcFamPTr1+/111+vvLjM//zzz/ft27dPnz5VPp5nW085OTleXl7a9+z1799/
4MCBoaGhERER2reUq/tQtu7duyfj586da9269WuvvdalS5eZM2dKQ6n5+dYI
AMZGPQEAjMdz60nyZ/PmzbYjFoslKyvL7jNHZ86c0W732CopKcnMzNS+26FW
8vPz09PT1U84OaOgoEDmV19grjl69OicOXNc2DoAeATqCQBgPJ5bT7LPUk+y
z45nW716dUZGhn674ZpHjx7t3LmTr4wAYGDUEwDAeDy3nhT12SKP46G7DQDO
o54AAMbj6fUEAHBP1BMAwHioJwCAHqgnAIDxUE8AAD1QTwAA46GeAAB6oJ4A
AMZDPQEA9EA9AQCMxxj1VFpaWlZWpr20WCzO/BiTLCKHL/tZ48rv3LljO2I2
m0sek3dt33rw4EGVX5B+69atu3fv1rhLAGAY1BMAwHg8up5OnjyZl5cnE2Fh
YWvWrNHGT58+7eXlpY6lOtnZ2S+88EKvXr1at249atQou5+y1dYzZMiQ5s2b
z5s3z3Y8KirK67G2bduqwaKioh49enTt2vWVV14JCQlJSkpS40ePHu3QocOr
r77auXPnwYMHy3m2Vvx+7vHjx/necgAGRj0BAIzHc+vp0KFDcXFxatqFenrj
jTfmz58vE3LUL7/88tKlSyvPc/369fT09EmTJlWup02bNv1HBe2el2wuLS1N
Ta9evTo8PFxNS6apxJNW6tev3/Lly9X4li1bvv7669ofNwB4BqPWU1ZWFvUE
AA1WHV7d5ILyV9bTkiVLtm7dqqZrW08Wi6V58+Y///yzerlq1aqOHTtWN/OU
KVMq15O0j4N9O3v2bOPGjSvfz3rvvfek2tT08ePHY2NjHawEADyax9WTyWTi
3hMAwDHPvfdkV08SJr88Fh8fX+O9J1lk+/btanrz5s0O5q+ynv72t7+lpKTY
fehJ8+677w4ePNhuUGKqc+fOGzZsUC+pJwDG5ub1JK3Ek3sAgNrS7+qm97MN
CxYsOHjwoJqWFAoNDR322IsvvlhjPa1Zs6ZXr14XL148ceJEeHi4zF9UVFTl
nJXrSQJt7dq148aNe/rppxMSEuzmlygLCQmRq7DtoJyKiIgIySXts04XLlx4
6623anXIAOBB9Hu2oU7qic89AQBc4KH3nm7fvh0VFVVYWKheuvC5J7PZHBcX
169fv7fffnvp0qXSQdXNWbmeNLNnzw4MDLQd+fbbb2VnZPfstjVmzBjZkO0X
A8qgrPn69esOdhIAPJeb33uingAALvDQeiovLx8/fvzVq1fVSxfqyZaEmPZx
pMoc1FNSUpJsqLi4WL1MSEjo3Lmz3debi4kTJ7711lt237AnhTVkyBAuwQCM
inoCABiPh9aTteJzT9u2bVPTDuppy5YtO3bsqLy4dhsoKyvrmWeeuXDhgkwX
FhYuXbr0ypUrtnNWV08Wi2Xq1KmyafUyLy/P399/48aNhY+pXNq9e/dTTz0l
Z0MNaqmVkpLC554AGBj1BAAwHo+uJ2e+c69fv36vv/565cUliEJDQ4cOHRoU
FHTgwAE1mJOTIwtq36f3zTffBAYGSvv4+PjIxP79+9V4//79Bw4cKItHRERo
31Ku7kPZunfvnoxPmzbNdlD7Ngm+NQKAsVFPAADj8dx6WrFixebNm2uc7cyZ
M+p3nSqTVvr9998tFkttN52fn5+enl5SUlLbBW0dPXp0zpw5T7IGAHBn1BMA
wHg8t55kn6WeZJ8dz7Z69eqMjAz9dsM1jx492rlzJ18ZAcDAqCcAgPF4bj0p
dl/F4Ck8dLcBwHnUEwDAeDy9ngAA7ol6AgAYD/UEANAD9QQAMB7qCQCgB+oJ
AGA81BMAQA/UEwDAeKgnAIAeqCcAgPEYqZ5k59PS0v744w/nv9EuNzf38uXL
paWlld+ScyJvFRUVVbmgxWKR8/b7779X+a6s8M6dO3aDsldV/kpUTk6O7DbX
YgAGQz0BAIzHo+vp5MmTeXl51oqW+bd/+7dWrVr169cvLCysffv2x48fr3Hx
OXPmdO7ceeTIkQEBAba/qCsX0JcrDB8+XNZ59erVysvKJmSG/v37y0RKSoo2
fvr06SFDhjRv3nzevHm28yckJPTo0WPEiBEy/1dffaUGpadmzJjRtm3b8PDw
du3apaamymBBQYHsPF9pDsDTUU8AAOPx3Ho6dOhQXFycmpZ0CgoKunnzpvZW
o0aNLl++7HgNDx8+VBPp6ene3t5y3VQvJX8WLVqkpsvKysxms4NlFy9eLPNr
49evX5e1TZo0ybaeJO66dOmidk9OuJ+fn1rnjh07QkJC1N2oTz/9VLpPRdOW
LVu+/vrr2pwMAHA7Rq2nrKws6gkAGqw6vLrJBeWvrKclS5Zs3bpVJgoLC1u0
aPHRRx/ZvvvCCy8MHz7cyVWlpqb6+Pioh/SkfZo0aZKfn+/ksh9//HFkZKTd
4JQpU2zrSc6qr6/v0aNHZfrXX3/t2bOnGo+Ojn733XfVdHZ2tpeXl7wr08eP
H4+NjXVyBwDAPXlcPZlMJu49AQAc89x7T1o9Xbx4Ubrj1KlTtu9++OGHfn5+
Na7k0qVLa9euHTZs2N69e9XI999/HxQU9NNPP0VERMyaNSstLa3KBR8+fCiN
s3jxYlk2MzPT7l27ehLfffdds2bNPvnkk/79+2dkZKjBuLi40aNHq2k5/1Jt
e/bssVJPAAzBzetJWokn9wAAtaXf1U3vZxsWLFhw8OBBmZB/Sj0VFBTYvqsG
tefrqjN37tznn3++R48e6saQWLlypY+Pz9SpU6Wb4uPjmzZtKien8oJ//PHH
m2++GRAQMGnSpFu3btm9W7meZP0vvPBC+/btZVtabWVnZ7do0WL79u03btyY
Nm1a48aNt23bJuMXLlx46623anEuAMD96PdsQ53UE597AgC4wEPvPd2+fTsq
KqqwsFCmf/vtNwmln376yXaGzZs3+/v7O7m2s2fPyhrS09Nl+ptvvpF6UmsW
gwYNWrZsmYNl33vvva5du9oN2tWTrFm6KTc3V1Y7ceJEX19f7cnAH374YejQ
oaNGjUpISNDuoJnNZlnD9evXndx/AHBDbn7viXoCALjAQ+upvLx8/Pjx6tvw
ioqKWrVq9eGHH9rOEBkZKUni/Aq7dOmyYsUKmThx4kTjxo0fPHigxmNiYt55
5x0HC6ampkr1ZGVl2Q7a1dNnn302duxYNW2xWAIDA3fu3Gm3ngMHDki1qe1K
Gw4ZMoSrMwCPRj0BAIzHQ+vJWvG5J/Wcm/jyyy/btWun3azZvXu3t7e39pGl
LVu27Nixo/IatES6cuWKFFBiYqK14kv2OnXqJCu0Vnx5eEBAgBovLCxcunSp
zGmtKCDtQcGFCxf6+vra/YqTXT2tX7/ez89P3W+SUy37dvr0abUtNYPZbJbW
0741PSUlhc89AfB01BMAwHg8up7Ut0ZYK25FrV69WgqlV69enTt3fvbZZ8+c
OaPN2a9fv9dff73yGiRYgoODX3nlFZlf1qaNX7p0SaIpLCxMVrhgwQI1mJOT
I4UlIWatqKqmTZv27t07NDS0f//+ycnJ2rLffPNNYGDgU0895ePjIxP79++3
Vnzn3vTp0zt06DBw4EBZ7RdffKFmPnfuXOvWrV977bUuXbrMnDlT+2p0vjUC
gAFQTwAA4/HcelqxYsXmzZttR8rKyn7//XftZ5s0UlK2P4arkeYymUyVvzHP
WnF3SVal3ZyqTEpHzltubq7zOyxno/L3S0iIpaen2327xdGjR+fMmeP8mgHA
DVFPAADj8dx6kn2WepJ9rnHO1atXa18S7v4ePXq0c+dOvjICgKejngAAxuO5
9aSUl5frvYm/mPGOCEDDRD0BAIzH0+sJAOCeqCcAgPFQTwAAPVBPAADjoZ4A
AHqgngAAxkM9AQD0QD0BAIyHegIA6IF6AgAYD/UEANAD9QQAMB7qCQCgB+oJ
AGA81BMAQA9GraesrCyubgDQYNXh1U0uKH9lPZWWlpaUlDizifLycplTTScl
Ja1YsUJNy8GWlZW5vGl1rpzfNAA0KB5XTyaTiXtPAADHPPfeU1hYmI+PT9Om
Tfv27bthwwYHc8qeeHl5PXjwQKZXrlw5dOhQNd67d+9Nmza5vOlmzZr5+vpG
REQ46CPbTQNAg+Lm9SStxJN7AIDa0u/q5uSzDWXVc7ygJMzatWsLCws///xz
aaicnJzq5jSbzRkZGWqFtvUke5ifn1/jHla3aTm6ixcvSkN9//33zmy6OpMn
T16/fr0LuwEA7ky/ZxvqpJ743BMAwAX1e+/JYrEcOHDg+6ocOXLE8bIqYWTi
1q1bXl5ecm21VtSK9NHo0aMnTpyYnJys5pRDi4mJefjwofXP9RQXF3f69Glt
htzc3E8++WTcuHG2m05ISBg7dmx0dPTx48dlHrtNiwEDBqjxGjctgzJDWlpa
bGzsjBkz5LTL4M6dOwMCAl566SWZTf4UHB8yAHgQN7/3RD0BAFxQ70/uZWdn
V1lPd+/edbygJMznn39+5syZN954Y+7cuWowKiqqb9++SUlJ8fHxbdq02bdv
n9WJJ/fUDNJBy5YtW7VqVbNmzQoKCmQ8JSXF399/w4YN58+fHzlypMyjbVrV
kyzYuHHjr7/+2slNd+rUaeDAgVu3bpUiGzNmjAzeuHHjhRdekJj68ccf5fzX
eLoAwFNQTwAA46n3ehInTpywSyeplRqXkoTp0qWLn5+f1Ie68ST/lFSRnlIz
zJs3Lzw83Op0PalbTuXl5S1btpRukunY2Ng5c+aomS9dumRbT4MHDx4xYoR0
VmRkpHqqxJlNd+zYUc6zTB87dqxVq1ZqZlmVJJszJwoAPAj1BAAwHneoJ9nu
rl27tHTau3fvo0ePalxK+/DR9u3bpWKuXr0qySOpoi0r6/Hx8bE6XU/adzu0
bdtW6kYmAgMDZcfUoF09TZgwQdYvZ0+N1HbT0lktWrRQ09QTAEOingAAxuMO
9STS09O1esrMzHRmEdsPH8n0P//5zytXrkiqaIsvX748ODjY+gT1NGzYsLi4
ODV46tSpyk/uaWq7aeoJgOFRTwAA43GTepI5Dx8+LOmUnJxcXl7uzCJawkjp
SKHs27fPbDaHhIQsXLhQ1paXl9enT5958+ZZn6Ce1q1b17Fjxx07dnz77bey
tkaNGtltWlPbTdvWU0xMTGxsrJMnCgA8BfUEADAeN6knYTKZpJ7u37/v5PyS
MN7e3k2aNAkPD1+wYIHaVmpqavfu3Tt06ODj4xMVFVVYWGh9gnqSsyFrlhSa
MWNGYmKir6+vtmm7eqrtpm3r6cKFC0FBQT169MjOznb+dAGAm6OeAADG4z71
JBz8ZlOt5ObmFhcX18mqNB9//LFklE6btlgsNX7HIAB4FuoJAGA8blVP7ubY
sWOTJ0+Oj4+fPn26n59fYmJife8RAHgM6gkAYDzUkwMmk2n37t1Lly5dvXr1
tWvX6nt3AMCTUE8AAOOhngAAeqCeAADGQz0BAPRAPQEAjId6AgDogXoCABgP
9QQA0AP1BAAwHuoJAKAHo9ZTVlYWVzcAaLDq8OomFxTqCQCgeFw9mUwm7j0B
ABzj3hMAQA9uXk/SSjy5BwCoLf2ubjzbAAANmX7PNtRJPfG5JwCAC7j3BADQ
g5vfe6KeAAAuoJ4AAHqgngAAxuO59VRaWlpSUmI3KCNms1kmysvLK7/rmBx7
WVnZk++V3UpquxvaUhaLxYUFZevqD1EsWbLk1KlT1c0pf+LR0dEPHz60G09K
SlqxYoULmwYAW9QTAMB4PLeewsLCvLy8srKytJFr167JyPTp02Vati7TDx48
cH6FvXv33rRpkwt7sm7duu3bt//yyy9qrwYOHCjtpt6SmJLdyM/Pr9UKU1NT
Zam4uDgXdmblypVDhw5V046PqLpTZLuGyuRfmL1793722WeuVSGAhoN6AgAY
j0fXU9OmTeU/47WRDz74wNvbW9WT2WzOyMio1b0kCbHaZo7Srl273Nxcba8k
SeLj49XLGutJ3goKCsrJybEdnDVrVsuWLYODg124/XTv3r3s7Gw1rUc9Kc88
80xBQUFt9w1Ag0I9AQCMx6PrKSIiolu3buqlhJJkyJgxY1Q9yeHExMSox9JK
Skq++uqr0aNHv/nmmzdv3lTzJyUlRUdHjxo16vvvv1cjcXFxp0+f1paVIPrk
k0/GjRt35MgRbaMJCQljx46VBY8fPy7zqEGpJy0l1F5J+6iEsa0nCToJE9mN
iRMnJicnq/lnzJghM0RGRi5YsECNFBcXt2rVav/+/TKekpKiBpctW/bTTz9p
u/HRRx9JGz569GjDhg1Tp06Nioo6dOiQekvWLFtR01o9VTmnqqfMzMx58+bJ
edA6y7aeZP+XLl06fPjw+fPnFxUVaTtge8gAUCXqCQBgPB5dT3v27GnSpMnl
y5flpeSM/Ef+rFmzKj+598033wwePDgtLe3YsWNycZQR+aefn5+00i+//PLr
r7+qFWqtoZYdMGCANMuqVauaNWumSkFaxt/fXzLk/PnzI0eOlHnUgnb1JJkz
cODA119/3frnepJy6du3r1RbfHx8mzZt9u3bJ4OJiYkygxTcuXPn1Bq2bdvW
q1cvmRg2bNj48ePV4IoVK7SikT+yZ555RtYsfScZdebMGVnc29tbbaXKJ/eq
nFMdppw02Z8lS5Y0b95cxZrtGmQHZLfleCUJ33//fe3kU08AakQ9AQCMx6Pr
6eTJk6NGjZo3b568nDx58q5du6qsp0WLFkm2qG5SpKSeeuopqQnbFdrVk7rl
VF5e3rJlS5UVsbGxc+bMUTNfunSpunqSvcrMzJT1b9++XaunrKwsmdC2KPsc
Hh5urXjQTsbl/Gu70a9fP8k9a8V9rqZNm8qfi0zfuXNHOvH27dtq2fnz59ud
jcDAwKNHj1qd+NyTNqc6TPnTV+MSSu+9957tGtQ+ywxyFKdOnerZs6e2EuoJ
QI2oJwCA8Xh6Pe3evTsgIEAqqW3btsXFxVXW0/379yMiIpo1a/bJJ59o33Xw
5Zdfysjrr7/+xx9/qBG7etI+ECRrPnbsmLWiOyTQ1KDjepKJL774wt/fPzs7
W9WT9JdMPHr0SM22d+9eHx8fa6V6Ul98sWTJklWrVi1fvlymV69erd6SXf23
f/s3CZmnn376999/t1aU3datW99+++1x48ZJrCUmJlqrqacq57Q7TFn5yy+/
bLsG2edGjRp1sqE9vEc9AagR9QQAMB5Pr6eHDx+2aNFiwoQJsbGx1orvW6ju
O/cuXLjQpUuXxYsXayO5ublRUVHaJ6dqrKdhw4Zp34N36tQpx/VUVlYmKxw9
erSqpytXrqgPGanZpIyCg4Otlerpvffee/XVV+Mek2J67rnn1FvSiaGhoZJv
AwYMUCNSWHJE0oYyHRQU5KCeqpzT7jDlBKq7eNoa0tLSZIYbN25UPvnUE4Aa
UU8AAOPx9HqSiejoaO2huCrr6fr16+qW04wZM9TDaXfu3FHfknfixAmpCfXV
fDXW07p16zp27Lhjx45vv/22T58+jRo1UjNUWU8iPT3d29tb1ZPZbA4JCVm4
cKGck7y8PFlcpYqM+/n5HT9+3Frx7Rb+/v7qm88VKRdZ/Pz589aKb35o1apV
hw4dZAfUuzNnzoyMjJSJc+fOyVs7d+60VlNPVc6pDvPw4cMyffv27U6dOsnZ
sF2DnJZevXrJ6VVHJ/96aN8BSD0BqBH1BAAwHgPUU2Zm5nfffad+YqnKenrn
nXekUJ5//vkBAwaouzw//PDD008/LWvo3r17QkKCWmGN9SQnZ8GCBRI+UmGJ
iYm+vr5qhurqyVrxe7Xat0akpqbK5iR/fHx8oqKiCgsL1TzLli2TaJo0aZJE
TY8ePewOc+DAgdqX+/3973+XA9Ee/5MVBgcHy4G88cYb//jHP2TNciqqrKcq
55TDlACUkyP73Lx589jYWPXnZbuGrKwsOWny7nPPPceTewBqhXoCABiP59ZT
rchxVf5hI+1Hmlzw8ccfS0ap6VqlhGy0uLjYbvBfFVzYDWlG7bjU90s4P6fF
YlFZJ02kpVyVCirYjlBPAGpEPQEAjKeB1FOdOHbs2OTJk+Pj46dPn+7n56c+
PWStSIkNGzZcunSpfnfvr3Hjxo3Dhw8/9dRT1BMAx6gnAIDxUE/OM5lMu3fv
Xrp06erVq69du6aNm81mOW8GO9jqlJWV/XuF+t4RAO7OqPWUlZXVQP4PHwBQ
WR1e3eSCYux6AgA4z+PqyWQyce8JAOAY954AAHpw83qSVuLJPQBAbel3dePZ
BgBoyPR7tqFO6onPPQEAXMC9JwCAHtz83hP1BABwAfUEANAD9QQAMB7qCQCg
B+oJAGA81BMAQA/UEwDAeKgnAIAeqCcAgPF4bj2VlpaWlJTYDcqI2WyubhE5
xujo6IcPH1Z+Sw68rKzM5d1w5tdjy8vLK+8wABgV9QQAMB7PraewsDAvL6+s
rCxt5Nq1azIyffr06haRXZIZHjx4UPmt3r17b9q0ybXd8PHxadasma+vb0RE
hIM+crB1ADAe6gkAYDz1Xk9l1XO8oGRL06ZNP/vsM23kgw8+8Pb2drKedu/e
PXLkSO0tqbD8/Pwa97bK3Vi7dq0c6cWLF6Whvv/+++rmNJvNGRkZjo9r8uTJ
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
egIA6IF6AgAYD/UEANAD9QQAMB7PrafS0tKSkhK7QRkxm80OlkpKSlqxYoWT
m5CzUfkQKm9UI+cwOjr64cOHTq4fAAyMegIAGI/n1lNYWJiXl1dWVpY2cu3a
NRmZPn26g6VWrlw5dOhQJzcxZ86cv/3tb7YjV65cCQgIKCsrq3J+OWTZgQcP
Hji5fgAwMKPWk1x3qCcAaLDq8OomFxQX6qmseo4XlHpq2rTpZ599po188MEH
3t7edVhP0kqNGze+e/euNjKvQnXzU08AoPG4ejKZTNx7AgA4Vr/3niwWy4ED
B76vypEjRxwvK/UUERHRrVs39VJqKygoaMyYMVo9yUHNnj17+PDhs2bNys7O
VoO29ZScnCwpNHr0aBksKiqyVjx6FxMTc+vWLVlk06ZNMtKzZ88vv/xSO8a2
bdtevXpVps1msywly06cOFHWo2awraeEhIQNGzaocamwf/7zn2o6Li7u9OnT
3333nezqsmXLZEQOduzYscuXLy8tLVXzyA7IbowcOXLr1q2OTwIAuC03rydp
JZ7cAwDUln5XNyefbZCuqbKebO/4VEnqac+ePU2aNLl8+bK8PH78uAolVU/3
799v3br1zJkzz549K4PPPPPMvXv3rH+uJwmWvXv3XrhwITQ0dNu2bdbH+TN4
8OB169bJmZGRNWvWyIbU/ElJSdp0VFRU3759ZSQ+Pr5Nmzb79u2z/rmeFixY
MGHCBDXz4cOHg4OD1XTv3r3Dw8PnzJmzf/9+X19faSgJJZmWlSQmJsoMsp+y
t+vXr5cj6tix42+//VbjOQQAN6Tfsw11Uk987gkA4AJ3+NzTiRMn7NLp/Pnz
NS4lIXPy5MlRo0apR+kmT568a9curZ6++OKLtm3bajO3b99eWslazZN7c+fO
nTZtmvVx/khwaW/l5eVJoKmEmThx4ueffy4Tch2X2c6cOaPmkR2QILI6XU/a
s3+SaWq7IiIiQhZRe/7SSy+VVpg9e7a6PwUAHsfN7z1RTwAAF7hDPcl2JXy0
dNq7d++jR49qXErV0+7duwMCAiRYpJWKi4u1evr73/8+ZswYbeY333wzJibG
+ud6kkZ7//33IyMjn3322SlTplir+eCSdM0777xTWFjo4+MjJ0pGUlJSZDZt
J2WH5S2r0/WkngkUw4YNUzkmZOYPP/xQJt5+++2WLVt2ekztNgB4HOoJAGA8
7lBPIj09XaunzMxMZxZR9fTw4cMWLVpIesTGxsqgVk8fffRRz549tZnDw8M/
+OADq0093bx5s1mzZj/++KNMz58/30E9JSYm+vn5rV+/fvDgwWrkypUrMpu2
n8uXL1dxZFdP48ePVzPs2LHD+XpatGiR7Z4DgIeingAAxuMm9SRzHj58WNIp
OTm5vLzcmUVUPclEdHS09hydVk8XL15s1KjRr7/+qk2rpwG1epJlfX19CwoK
cnJyZETdqKqynsxmc5s2bVq2bKl9h4OMhISELFy4UHY7Ly+vT58+6mE828W/
+eab5557Ts7nhQsX2rdv73w9ZWRkeHt779q1y2KxyEvZQyfPIQC4FeoJAGA8
blJPwmQyST3dv3/fyfm1esrMzPzuu+9Uc2n1JDZu3CjJ8+yzz8o/4+Pj1aBW
T9ImEi+tWrUKDQ1dt25d8+bNN2/eXN1Xjs+fP19mKCws1EZSU1O7d+/eoUMH
Hx+fqKgo9Zbt4vfu3QsPD5elXn75ZdkT5+tJHDx4sG3bttJcnTp1UvfUAMDj
UE8AAONxn3oSOTk5T3QwlZSVld25c0fdxKmSFmv5+fkuXA1zc3OLi4sdzPAk
v/0kOan+OADAE1FPAADjcat6AgAYBvUEADAe6gkAoAfqCQBgPNQTAEAP1BMA
wHioJwCAHqgnAIDxUE8AAD1QTwAA46GeAAB6oJ4AAMZDPQEA9EA9AQCMh3oC
AOiBegIAGA/1BADQg1HrKSsri6sbADRYdXh1kwsK9QQAUDyunkwmE/eeAACO
ce8JAKAHN68naSWe3AMA1JZ+VzeebQCAhky/ZxvqpJ743BMAwAWefu/p1q1b
2dnZDmYwm82pqalyaE84np+fn5aWVlZWZjtYXFx89erVvLw8u5mrG1fkzNi+
tFgsJTbkpYPDAQBP4eb3nqgnAIALPLeepFCGDx/+8ssvh4eHR0VFSfVUnkd6
Jzg4eMSIER06dNixY4fL42vWrJFx2VxoaOgff/yhBs+cOePv7y8zd+nSRfah
qKjI8XhBQYHsZ0BAQPv27W138uDBg142fv755zo6QwBQn6gnAIDxeG49ffTR
R+PHj7dW3LsZMmTIV199ZTeDjEu/JCQkyHR2dravr6+6S1Xb8StXrrRu3VrO
j0yvX7++X79+av0lJSXarahu3bpt3LjR8bhk1MmTJ3fv3l25noYNG/Yfj5WX
l9fxmQKA+kA9AQCMx0PrSRLj6aefPnbsmHq5c+dO6RS7eU6cOOHn56eFzJgx
YxYvXuzC+IwZM2JjY9WgnCJvb+/09HTbDUl2de3add++fXY7UOV4YmJi5Xoa
Pny4CycBANwZ9QQAMB4Prae7d+96eXndunVLvfzll18aNWpkt7l169aFh4dr
L+fNmxcZGenC+MCBA5cvX66Nd+jQQQui27dv79q1Kzo6evbs2aWlpdo81Y1b
q6mn4ODg7du3V/c5KQDwRNQTAMB4PLSerl27JvWUm5tr+9KuPpYsWfLqq6/a
vhw0aJAL4926dYuPj9fGu3fvvn79ejUtGTV48OC2bduuWLGiuLhYm6e6cWtV
9SSpJek0c+bMjh07Tps2zbUTAgDuhnoCABiPh9aTdJPk0s2bN9XL8+fPN27c
2O4L8SR5bO8lzZ07d8KECS6MS1LZ3ntq167d/v37bTdUWlraqVOnRYsW2e1k
leOV60lz5swZOahz5845PnYA8AjUEwDAeDy0nsrLy9u0aZOcnKxefvfdd2Fh
YXbznD59ulWrVto+jBgxIi4uzoXxWbNmxcTEqMH8/HzJtIyMDLttLVy48MUX
X6y8n5XHHdST1F/Lli23b9/uzBkAADdHPQEAjMdD60ksWrRo3LhxatP9+/df
t26dTBcWFi5duvTKlSvWisLq1q3bnj17ZDozM1PC5Pbt2y6Mp6WltW7dWj0l
+OWXXw4cOFDtgGxLHeCjR4969OgxZcoUx+OKg3qStxo1anTt2rU6P1cA8Nej
ngAAxuO59VRSUvLGG2+Eh4dL8sTExKjH9nJycry8vLZs2aLmycjI6Ny586BB
g9q1a6e+ity18Q0bNgQFBQ0YMCAsLEz7cd5t27b5+voOHjxYamjChAkmk8nx
+J07dwIDA/39/SWRZGLq1KlqfMWKFc8//3zfvn379OmzdetWvc4XAPy1qCcA
gPF4bj0pt2/fVr/EVB2LxXLjxg27L75zYbyoqEj7mJWmsLDw2rVrlWeubrxK
koGZmZly1XZmZgDwFNQTAMB4PL2eAADuiXoCABgP9QQA0AP1BAAwHuoJAKAH
6gkAYDzUEwBAD0atp6ysLK5uANBg1eHVTS4o1BMAQPG4ejKZTNx7AgA4xr0n
AIAe3LyepJV4cg8AUFv6Xd14tgEAGjL9nm2ok3ric08AABdw7wkAoAc3v/dE
PQEAXEA9AQD0QD0BAIyHegIA6IF6AgAYj+fWU2lpaUkFi8VSt2suKytT5wEA
4DLqCQBgPJ5bT2FhYT4+Pn5+fk2bNu3ateusWbOKiorqZM0rV64cOnRonawK
ABos6gkAYDz1Xk9l1XO8oNTTmjVrrBU3oX777bfw8HAZqZN7Rvfu3cvOzlbT
kydPXr9+/ZOvEwAaGuoJAGA89VtPFovlwIED31flyJEjjpfV6km5ePGil5fX
pk2b1MuDBw+OHTs2KioqLS1NjcTFxZ0+fVrWHBERsWLFikePHqlxOfwPP/xw
2LBhs2bNUiPJyckrV66UiZ07dwYEBLz00ksxMTHp6enyz9u3b6t58vLypk+f
zgUUAKpDPQEAjKfe7z1lZ2dXWU937951vKBdPZWXlwcGBsbGxsp0QkJCSEhI
SkqKzBAcHKxm6N27d69evSZNmiQr79ixo5SRGn/ttdc+/fRTiazExEQ1oj25
d+PGjRdeeGHGjBk//vijnBxZg8yp5pH+ioyMrPHoAKDBop4AAMZT7/UkTpw4
YZdO58+fr3Epu3oSo0ePHjdunEy8+OKLUjelFQICAjIzM60V9TR16lQ1p0TW
3//+dzUdGhr60Ucfmc1mbT22n3saPHjwqlWr1PTGjRs7d+5cXkEmfvrpJ2eO
DgAaJuoJAGA87lBPst1du3Zp6bR3717tsToH7OpJtuXn5/fBBx/ItK+vr0RT
p8cSEhKsFfWkPdc3Z86cmJgYNS2l9uyzzwYHB1e+92T9cz0VFBQ0b978zJkz
KSkpsog0lDNHBwANE/UEADAed6gnkZ6ertWTulVUI7t6kqjx8vL68ccfZbpr
167Lli2zm7+6ehJms3njxo2NGjWS3bBWX08iOjp66tSp6pNTTh4aADRM1BMA
wHjcpJ5kzsOHD0s6JScnO3lPR6unkpKSCxcu9OzZc8KECeotSafg4GA5LmvF
d/qpbzKvsp7kXVVMElBt27Y9d+6c9c/1JLOpz1Ip0mjNK+Tm5jp5aADQMFFP
AADjcZN6EiaTSerp/v37Ts4v9eTt7a1+8qlv377r1q3TfjZXUmju3LlNmzbt
3r17+/btDx06ZK2mnqS8OnXqFBQUFBoa+o9//EO9a1tP0mXybo8ePdR3mEvZ
denSZfz48c4fFwA0TNQTAMB43KeeRE5OzhMdzJ/JsUiROTNnQUFBaWlpde9K
lGlfAFhWVhYcHMz3RQBAjagnAIDxuFU9ub99+/bxfREA4Ayj1lNWVpbxrm4A
ACfV4dVNLiiGr6cTJ06cPXu2vvcCADyAx9WTyWTi3hMAwDHuPQEA9ODm9SSt
xJN7AIDa0u/qxrMNANCQ6fdsQ53UE597AgC4gHtPAAA9uPm9J+oJAOAC6gkA
oAfqCQBgPNQTAEAP1BMAwHioJwCAHqgnAIDxUE8AAD1QTwAA46GeAAB6oJ4A
AMZDPQEA9EA9AQCMh3oCAOiBegIAGI8B6kk2ZPvSYrHIEf3++++V53zw4EFG
RkblcTnwy5cvFxQU6LWLANDwUE8AAOPx3HqS2ImKigoICGjfvr3tuLx8+eWX
+/fvLxMpKSlqsKioqEePHl27dn3llVdCQkKSkpK0+Q8ePOjv7//qq696e3uv
XbtWvx0GgAaFegIAGI/n1pME0cmTJ3fv3m1XTw8fPlQTixcvHjJkiJqW40pL
S1PTq1evDg8PV9Ny1L6+vhcvXrRWnIrGjRtfu3ZNv30GgIaDegIAGI/n1pOS
mJhoV0+ajz/+ODIysvL42bNnpZJUZB05ciQgIEB7q2/fvu+//75OuwoADQr1
BAAwHuPVk2TR8ePHFy9ePGzYsMzMzMqLvPvuu4MHD1bTGRkZTZo00T7xJIuM
GzdO730GgIaAegIAGI/x6umPP/548803AwICJk2adOvWLbv5t2/fHhISIpdI
baRfv34zZ86UOTds2NCiRYtRo0bpvc8A0BBQTwAA4zFePWnee++9rl272o58
++23YWFht2/fth3Mzs6eMmVK//79V69ePXDgwHfeeUfH3QWABsOo9ZSVlUU9
AUCDVYdXN7mguFU9paamenl5yV6plwkJCZ07d75z5051qyotLW3WrNnOnTv1
2E8AaGg8rp5MJhP3ngAAjhns3pPFYtE+xLRw4UJfX9+SkhKZzsvL8/f337hx
Y+Fj5eXlaraysjI1sWXLFskrs9ks07/88svSpUulp/TefwAwKjevJ2klntwD
ANSWflc3vZ9tuHPnTmBgoDRRo0aNZGLq1KnWih+Batq0ae/evUNDQ/v375+c
nKxmTkpK8vqze/fuqbekmPpWePHFF7Uf3l2zZo3Mw+/nAoDL9Hu2oU7qic89
AQBc4On3niozm81yRLm5uc7Pf+PGDZPJpOteAUBD4+b3nqgnAIALjFdPAAB3
QD0BAIyHegIA6IF6AgAYD/UEANAD9QQAMB7qCQCgB+oJAGA81BMAQA/UEwDA
eKgnAIAeqCcAgPFQTwAAPVBPAADjoZ4AAHqgngAAxkM9AQD0QD0BAIyHegIA
6IF6AgAYD/UEANAD9QQAMB7qCQCgB+oJAGA81BMAQA/UEwDAeKgnAIAejFpP
WVlZXN0AoMGqw6ubXFCoJwCA4nH1ZDKZuPcEAHCMe08AAD24eT1JK/HkHgCg
tvS7uvFsAwA0ZPo921An9cTnngAALuDeEwBAD25+74l6AgC4gHoCAOiBegIA
GA/1BADQA/UEADAe6gkAoAfqCQBgPNQTAEAP1BMAwHioJwCAHqgnAIDxUE8A
AD1QTwAA46GeAAB6oJ4AAMZDPQEA9EA9AQCMh3oCAOiBegIAGA/1BADQA/UE
ADAe6gkAoAfqCQBgPNQTAEAP1BMAwHioJwCAHqgnAIDxUE8AAD0YtZ6ysrK4
ugFAg1WHVze5oFBPAADF4+rJZDJx7wkA4Bj3ngAAenDzepJW4sk9AEBt6Xd1
49kGAGjI9Hu2oU7qic89AQBcwL0nAIAe3PzeE/UEAHAB9QQA0AP1BAAwHuoJ
AKAH6gkAYDzUEwBAD9QTAMB4qCcAgB6oJwCA8VBPAAA9UE8AAOOhngAAeqCe
AADGQz0BAPRAPQEAjId6AgDogXoCABgP9QQA0AP1BAAwHuoJAKAH6gkAYDzU
EwBAD9QTAMB4qCcAgB6oJwCA8VBPAAA9UE8AAOOhngAAejBqPWVlZXF1A4AG
qw6vbnJBoZ4AAIrH1ZPJZOLeEwDAMe49AQD04Ob1JK3Ek3sAgNrS7+rGsw0A
0JDp92xDndQTn3sCALiAe08AAD24+b0n6gkA4ALqCQCgB+oJAGA81BMAQA/U
EwDAeKgnAIAeqCcAgPFQTwAAPVBPAADjoZ4AAHqgngAAxkM9AQD0QD0BAIyH
egIA6IF6AgAYD/UEANAD9QQAMB7qCQCgB+oJAGA81BMAQA/UEwDAeKgnAIAe
qCcAgPFQTwAAPVBPAADjoZ4AAHposPX0PwAAxlVQG7W6ulFPANCQ/Q+D1lNW
Vpbjq9v/AgAwLmmi/+k0x1c3uaDwt3MAAEW/v53TqZ5MJlOd3Hv6XwEAxlWH
9VTbe0/1HY4AAB3pd32pk3qSVrLbh7p6cu9/AwAYl5NXt6Kiotpe3Wp8tqG+
wxEAoCP9nm2ok3rS73NP/wIAGJczVzdJp127dtW2nvjbOQBoyPT72zk3r6d/
BwAYV41XNyksSSeLxVLn9VTf4QgA0JF+fzvn5vUEADAwx1e3f9mkU53XU32H
IwBAR/r97Zyb19N/AwCMy8HVTd7SrmsuPFnB384BQEOm39/OuXk9/V8AAOOq
7uqWn59vm056fO6pvsMRAKAj/f52zs3r6f8BABhXlVc323QqLCzU6XNP9R2O
AAAd6fe3c25eT/8vAMC4Kl/dqkunOq+n+g5HAICO9PvbOTevp/8PAGBcdle3
+/fvV3ldk+k6r6f6DkcAgI70+9s5N6+n/xsAYFy2Vze7XLKbrvN6qu9wBADo
SL+/nXPzevo/AQDGpV3dHKeTHp97qu9wBADoSL+/nXPzevovAIBxOflb8C48
WcHfzgFAQ6bf3865eT0BAFAjF+qpvsMRAKAj/f52jnoCAHg6fi0XAKAH6gkA
YDzUEwBAD9QTAMB4qCcAgB6oJwCA8VBPAAA9/GX1ZDKZnKwns9lc32cFAODZ
5FJCPQEA6pxO9SSt5Nq9J5mtuLi4vs8KAMCzyaVELijUEwCgbrnbk3v//u//
npeXV1JSUlZWZgEAoJbk8iEXEbmUyAXFrp54tgEA8IQqP9tQv/Uk5MJXUFBw
DwAAl8hFRC4ldhcXnm0AADy5ys821Hs9AQBQ53i2AQDwJKp7tuHJUU8AADfE
sw0AgCdR5bMNT456AgAAAABnUE8AAAAA4AzqCQAAAACcQT0BAAAAgDOoJwAA
AABwBvUEAAAAAM6gngAAAADAGdQTAAAAADiDegIAAAAAZ1BPAAAAAOAM6gkA
AAAAnEE9AQAAAIAzqCcAAAAAcEZ19fRf//Vf9b1rAAAAAOBGpJIq19ODBw8s
Fkt97xoAAAAAuBGpJGklu3r6z//8z3/9619Wq/W///u//w8AAAAAaNikjKSP
pJKklf5nJfJuaWnpQwAAAADAw4fSR1JJldMJAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAnuX/B4U+Ots=
    "], {{0, 631}, {1130, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{Automatic, 392.99999999999903`},
  ImageSizeRaw->{1130, 631},
  PlotRange->{{0, 1130}, {0, 631}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQdYFUf79lEUG6JBxY6KWIPdWLATK4g1YtdEjV3x1YhiwS7W2MXesTcs
qKjYiBALRCkvKlVpMcJR3ySm+905z+f81z2FA+ccOeDzu7y8ZmdnZ2eeac99
dnapNsK9z+j8ZmZm0wrjvz5fzegwdepXnn1L4qDf5Gnjxkz+elS3yd98Pebr
qS1GmCNyBtKOL2Bm9m/4LcMwDMMwDMMwDMMwDMMwDMMwDMMYmpSUlFu3bl1i
GIZhGIZhGIZhLl2CPoJKUpVOqampgYGBd+/effjwYQTDMAzDMAzDMMzHDZQR
9BFUErSSTD3duXMnMjISwur58+c/MQzDMAzDMAzDfNxAGUEfQSVBK8nUE1QV
JNX//ve/X3755VeGYRiGYRiGYZiPGygj6COoJGglmXp6+PDhy5cvkeYNwzAM
wzAMwzAM8+YN9BFUErSSTD3997//hbDK6dIxDMMwDMMwDMOYEFBJ0EqsnhiG
YRiGYRiGYbSjVj1FRUWxemIYhmEYhmEYhpEClQStxM+eGIZhGIZhGIZhtMM7
9xiGYRiGYRiGYXSB1RPDMAzDMAzDMIwusHpiGIZhGIZhGIbRBVZPDMMwDMMw
DMMwusDqiWEYhmEYhmEYRhf0UU/Tp09fsGDBYoZhsggGDobPBxjgDMMwDMMw
jAHRRz3t378/NDQ0gmGYLIKBg+HzAQY4wzAMwzAMY0D0UU9Xrlx5+fLlbwzD
ZBEMHAyfDzDAGSYv8fPPP9+9e3f37t3Lli1btGjR4sWLFzImzL9ttGTxkiVL
Vq5ciVZD26EFubnzKtzcOYiexmeyij7q6caNG/j/LcMwWUQMH4ZhdOTJkyfH
jx/fvn37rl27Dh06dOTIkRMnThxnTBg00ImTJ44dO4bG2rNnz86dOxFGO3Jz
50m4uXMQfYzPZANWTwzz4XnD6olhskJsbCycgUWLFu3YsePevXu07eEvJjfw
+++/o73CwsJ27969cOHCo0ePojW5ufMq3Nw5SDaMz2QP01RPZmZmxsiWYUyE
N6yeGEZnUlNT161bN2fOnMTExH/++UftmPr7778/8CjOEeLj42fOnBkeHq5j
+iVLlhw8eNCoRQoKCkKRMjIytKT5Rwm8O7QgEqM10ab6NDejCR8fn40bN2o6
q0tj6Y/pNLd2a+iPkeypT7ZZMj6TbXJKPZ07d87b21vTWVZPTN7mDasnhtGN
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
/H/svXl0D9f/x2+pJRVLKbHvUVqUalFLkVJEFV2oFFFaS5UolVLEUqqCalHU
WkWpWmqritoSR8mxHF+JgxMlJeTrJ6b+6Dnfzx/fnt/jO/fn/qYz8568s8n2
evzxPjN37ty5+3095965b497b5hYXchVhJj3UxBZiCmPF6Fc0ruEpUuGPAuP
gMzZgb6gP3H9+IJCj4+Pz+i/reUEpNS7ZZEhp0+f9vMTkuvXr8fFxeVQ70ew
ZFp2Gdse5Gv1tGDBgsOHD2d7yNRYpKt1hijvQP3cuHEjWl6rJ7UmUNSTIAh5
jUKrnu7fv5+cnLxv377JkyfPmDHj2LFjf5mgmDjFkUt4yLl/cvSG4SMwMFBP
suSp0AoGvXv31vtFCIJQ8Mi/6unu3bvENice0aVLF9tXb3mHe/fuqT0l1Kmo
J0EQ8iyFVj0Z5stY9BFyacWKFZGRkWrfVA44xZFLubUUxzDfdWfjx9TZG1oB
AFG8ePFimS0ShAJM/lVPOcSNGzeKFClSunTpMibWheJ5EFFPgiDkWQqzejJM
Kzo1NTUpKQn/p0w44BTH3Jp1EgRBELKOqCdBEAQhJyjk6kmBUEpLS7tnwoHo
JkEQhPyOqCdBEAQhJxD1JAiCIBQ8RD0JgiAIOYGoJ0EQBKHgIepJEARByAlE
PQmCIAgFD1FPgiAIQk4g6kkQBEEoeIh6EgRBEHICUU+CIAhCwUPUkyAIgpAT
iHoSBEEQCh6ingRBEIScoKCqp/Pnz8voJgiCUGjJxtGNAeXRqycecerUqaNH
j964cUO7qFRoUlNT7927p0+vXLkSFxd3586dnI5bpiHCd0ycf0ZPQmypEwRB
yJvkO/V06dIlmXsSBEEQvMm/c0/oiOnTpwcGBjZt2rRdu3YVK1asVasW7p98
8snzzz9v9fnEE098++23HKBHunTpgjduKV68OJor56KXFZ566qmAgIBy5cqV
KFGiQYMGw4YNu3nzpro0c+bMl156KXejJwiC4A95XD2hlWTlniAIgpBRcm50
83Ntwz3feN+ISgoKCoqNjVWn9+/fV8ce6umrr75q3bq1+qv3pKQkJUlWrVr1
8ssvpxvPdMmucAxTPc2ZM8cwJ6F+++03tB4uqmiI9oULF7LlKYIgCDlKzq1t
yBb1lNPfPaWlpTHKbN68ecKECeHh4e+++25kZCSnODrXFWQOtVDBnwUJW7du
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
lVpKZPixYOOHH34gSkeOHEG5IG1UOPhp1qwZQyFDfI0aNZRp5xoTjLFKlSox
Ou/du7djx45aPRF/IvDyyy+vWrWKcYqhTa0tROYw4jMOGuaLTdQZySRupJo4
WKeuyB+sLGdQrosx8MMA2rZtW8ZKRlVswiyWlFAA8Fj1ZJjfhtDuOLCpJ1+r
oTQ2fUGto/fQp9WqVVu7di0H1atXHzp0qPVGNTm7c+dOqyPdDpKKnidLSTW5
fPmy1RQk8pistq6PNmidPyIhqjFqPNQTPUn79u1tjn6qJ1iyZAkpnTBhQuvW
ra1fUZEtdEGdOnVSn8zkEHlBPRnmFJtWT/Hx8en6V28AGH2cl/xRT9CvXz/V
H6arntSsJSxfvlwNH7GxsdQoOm1rgE71pKYy4ZVXXnFVTyqc06dP2+JmU0/0
6nhjODAsI+CZM2eoNspx9OjRSj0tXryYe9Vdd+/erVy5sqt6mj17dt26dRlk
DbM9inoSBCEnKLTqif4Zo4K0Y5ljxmOQk/zk5GQOOMUmwcPChQvVspOsQIeP
+RESEsJwgNFCrJAk1hUIVatWVZaYHjt4evHixVEWhmnvDRkyxJrPNvXUvHnz
qKioVBMGFDU6ey/Y0Pzyyy+lSpXSfvQ2DmFhYYMGDfIVk/feew8hpnxaV+4R
f4Yt/ZqaAIcPH66OkaJ4U5lJTPSDPNSTNSgrejEGflB5avXUtm3bypYt66sI
hMKDx6qn7du3P/PMM+rNv009eayGUtj0RcOGDefPn69Pg4ODo6Oj79+/j3Kx
TXulpaXRgr755hvtQtekjbqsc+LECdKrX/Ko06tXr1r9TJo06cUXX7SetmvX
zurBl3oi2vXq1XOurPNfPdFUyXO6uCZNmliFAx0IihVH1ZZziDyinvC5ceNG
pBOSxM+l4NTJwMBAvaEBPadSPR7qCUmuSopkkreqi966dWv58uX1p3A29bRo
0aJGjRrhn1KjjJR6unfvHlqbVnDx4kXDXA3oDKdjx47jx4/nRjphRhBX9UQ4
zZo169+/v9q2hfxX3xFr9XTnzh2e+/TTT+v5Lz0CMsCRfG7k6bgoJXjp0iXa
18cff0y2vPrqq3T4ah2C7bnh4eHq5QCjG37Ua0BRT4IgZC+FVj3FxsauWrWK
AYIelYRjqGNWpaSkcMApjvTba9assX4xkTkYLBgdCEp/zIswsU6UMBCo1WvW
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
BEEQhJwgj889iXoSBEEQMoGoJ0EQBCEnEPUkCIIgFDxEPQmCIAg5gagnQRAE
oeAh6unRcOHChZ0mu3bt4jQxMXHnQySXBEEokIh6EgRBEAoeop4eDffu3Rs1
alSxYsXIFk7T0tIiIyOLFCkSFxeX21ETBEHIEUQ9CYIgCAUPUU+PjOXLl1ep
UkWfbt68uWTJkrkYH0EQhBylkKuntLS0mzdv0tVPmDAhPDz83XffjYyM5BRH
LmVLDqempt65c0dlrDdbt26NiorydZVA7t+/b3UhhgSLI5cyGiuKu3///rdu
3bI6JiYmxsTEJCQk6AdNmjRp9+7d/tzrDfG8d++e033UqFG//fZburdTM48c
ORIfH+9PNtrguZm4y1kWd00yGk62Q60+derU0aNHb9y4kdF7s7GqEI6tgbhW
lUyE7EGGHuEro8iEuLg4az7g01ZDaLO26ooLrcPqkpKScuzYsatXr7o+3Z+m
dP36dSr/tWvXbPd6h+yLs2fPXrhwwcMDtff48eM0JT/d//jjj5MnT7o+6PLl
y053khMbG+ts5k7/PPHOv7H2bMnJyYcOHaKf90iLn4h6emSsWLHCpp5KlSqV
i/ERBEHIUQqzesL8w94YO3ZsdHQ0Cf9fEw6+/fbbMWPGcClbBNRTTz0VEBBQ
smTJwMDA0NBQD/N15syZL730kuslbJKgoKDly5dbHSMiIpB7pLRIkSKYOhmK
le0u7Lo6derUqlWrY8eO9evXL1269P79+3F/9tlnv/zyS+97/cE1HOCJ3333
nceNFHfPnj3LlSvXrl07AiFiFI3/zzU8c9X/u7DuyJbGjRtnNJxshDowffp0
alHTpk3JjYoVK5J7GQohW6oKYGzj8sknn1i9+SribIyPn4/wyKh169Y1adIk
JCSkatWqc+fOVY4k5Pnnn7eG8MQTT9AJqOM9e/Z06NCBiofS1x727t1bvnx5
wqlbty5PuXnzpr7kT1O6cuVK165dK1Wq1L59e2xOfKKz0g3ZF6itzp07t2rV
Cv99+/Z11fjompo1axJstWrVrN2IqzsPJZcaNGjwwgsv1KtXb+vWrcp9y5Yt
eHvxxRdr165NzBkydDhz5swhHKJBks+dO+ft/8033yzyb+Lj4w2zQ6Z1k3U9
evQgtI8++ijdtHsj6umRgXoqU6bMtIf0799f1JMgCAWYQquesIevXbs2fvz4
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
P/5IfL766ivrbud+cujQIfWvUjkxNycIQiFH1JMgCIJQ8Cgk6kkRHx8/bdq0
iIiITOxch07ZsmXL22+/vWTJkkzolGwhNTX122+/HTBgwIYNG6x5e/PmTdQT
2tD/oCidjz76aOrUqeqPCAVBELIdUU+CIAhCwaNQqSfF7t27w8LCvvjiC5v7
ypUrcR87dmxcXJzt0rVr195///3JkycnJiY+qmj65OrVqzNnzhwyZIhtHi0h
IcF6SnK6d+/etWtXUopK0u5IsAULFgwcOHDXrl2PJsKCIBRORD0JgiAIBY9C
qJ4Mc+e6FStW6NNLly5VrVq1S5cu8fHxmzZtevLJJxEXVv/79+8/cuTII4+m
FxTcqFGjPv744wsXLtguXbx4sVy5cgEBAVOmTImOjq5SpUqRIkX0N1/r16//
5ptvbH+VLgiCkO2IehIEQRAKHoVTPdkIDg6uW7euPj1z5gxyY8mSJbkYJX9I
S0vbvn07Qu/LL7+0uleoUOGxxx6zupQpU+bs2bOPNnaCIBR2Cqp6On/+fH4Z
3QRBEIRsJxtHNwaU/KieSDtaadq0aVbHoKCgGjVq5FaUMsStW7esQm/nzp0k
p3fv3lY/mzdvlg3JBUF4xOQ79XTp0iWZexIEQRC8kbmnL7/8Ernxww8/WB2b
Nm1asmTJ3IpSVhg4cCDJsc1GCYIgPHryuHpCK8nKPUEQBCGj5Nzoll/WNqxb
tw65sXr1aqtjo0aNypQpk1tRygrh4eEk5/PPP8/tiAiCUNjJubUN2aKecvq7
p7S0tJs3b27evHnChAn0zO+++25kZCSnOGbXH16kpqbeuXPHn78y3Lp1a1RU
VLY8NNNMmjRp9+7d/vjM9tiOGjXqt99+06cUX2xs7OnTp+/du6ddsviPkGvW
rJk/f36WYmkYtJT+/fvb9vWliG0Vxv+c9A7Zg0w8ovBAbTl16tTRo0dv3Lhh
u5SUlERfZ3M8e/bs5cuXbSHY6httWddG11v0jbaqq6FfOn78OLXF5n737l1u
IXw/UuYOkXF+Ym97BI92Jjyj7tevXyeqzqT5yo379+/HxcVZk0zId/4NftJN
iEcCCdC1t5e5p+TkZOQGXavVsUKFCk2aNMmtKGWFmJgYkvPiiy/mdkQEQSjs
5PG5pxxVT5i7DMdjx46Njo4m4f9rwsG33347ZswYLmWLgHrqqacCAgJKliwZ
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
WD3169dv3rx5sqpffvlFq6fg4OCoqCjrpWqqp6tXr8q4duZXrFihHnekngA4
zaj1lJmZST0BQKNVj1c3uaA4XU8y55EjRySdkpKSKioqHFnEfj1JOsl//8uh
WSq/1k99S0Ot9SRz9unTJzIyUn26R06I2WyuqSAkVaSMTpw4oca1ejp69KjM
P3fuXJnW6unUqVPe3t6y2uzsbNmHcePGqc2pYpJVyWrVZ5GkldQtp1mzZr33
3nsWB+pJztjTTz+9f/9+WVDCR7uL9Nlnn/n6+qrn8eTPt7S01GaftZXIeFBQ
0OLFi+UPIjc3V1pswYIFFuoJwBNwu3oymUzcewIA2Oci956EXLaknh48eODg
/FJPnp6eXo+tXr3a+j/1JQfmz5/fvHnznj17duzY8fDhwxYH6slS+QmgQYMG
tWzZ8rnnnrP/5J6lstEkT6ZMmWKxqifZ9NatW2Upi1U9SYWNGDGiTZs2wcHB
69evl/XLDkjsyCYCAgJkUC0r3nnnHVnk+eefl91QN4kcufckIdm6dWt/f3+p
px49eqgvjpBcmjlzZtOmTTt06ODn56e+qNx6n61XkpKSIueqU6dOcjIjIiIK
Cgos1BOAJ+Di9SQXHZ7cAwDUlX5XNyeebdB+h6i+yOHI9dGJBfMrOTLnvyo5
uFqtDfPy8rSTIxuSzLGeTXbbiV+tktBT65F/qvZRiouL5Q/XwX3OycmR+eu6
aQCoSr9nG+qlnvjcEwDACa5z7wkAYCQufu+JegIAOIF6AgDogXoCABgP9QQA
0AP1BAAwHuoJAKAH6gkAYDzUEwBAD9QTAMB4qCcAgB6oJwCA8VBPAAA9UE8A
AOOhngAAeqCeAADGQz0BAPRAPQEAjId6AgDogXoCABgP9QQA0AP1BAAwHuoJ
AKAH6gkAYDxGqifZ3O+//3716tX8/PxaZzabzSVW5KXNDGVlZTXtv7ylLVha
Wmr91sOHD9PT06sukp2dnZqaygUXQONBPQEAjMet6+nUqVO5ubkyUV5e/vnn
n3t7e4eGhg4ZMqRt27ZdunSxv+yhQ4c8rPz888/W78o1tF27drGxsdUuGxER
oS3Yvn17NVhYWNirV6/u3bu/8sorQUFBiYmJaryiomLWrFkym+xbhw4dUlJS
ZFD67sSJE/LWE54BAHBZ1BMAwHjct54OHz6s1Y1MSJikpqaql1Il2nRNpJ5G
jBjxH49Zh4zZbH7ttdc6d+5sp542b96sFpRwU4Ny6rSNrlmzRlpJTe/cuVNi
qqSkRKY//fTTkJAQta2tW7d+/fXXzh07ALg+o9ZTZmYm9QQAjVY9Xt3kgvJX
1tOyZcu2bdtmqbyP07JlS4mROi0u9TRy5Mhq31qxYsXEiRPff/99O/Vkf3Pn
zp1r2rRpUVGRTEdGRr777rtqPCsry8PD49dff5XpEydOREdH12mfAcCNuF09
mUwm7j0BAOxz33tPWj1dunRJkkTCpE6LSz0FBgbu2LFDPfun+eWXX4KDg6XI
7NfT3/72t+TkZJsPPWkkl4YOHaqmZSVjx45V03KSmzVrtnfvXgv1BMDoXLye
pJV4cg8AUFf6Xd30frZh0aJFUkAycfDgQamnmkKmJnfu3JF0mj17dufOnWfM
mKEGJZokndS9ITv1JIW1bt26CRMmPP300/Hx8TbvymqDgoLkKqxeSta1atVK
Bm/evCkbatq06fbt22X84sWLb731Vp32GQDciH7PNtRLPfG5JwCAE9z03pO0
T0REREFBgeXxvSe5tjq3qrNnz8ri58+fl+k5c+b07Nnzw0r9+vUbOHCgur1V
k7lz5/r7+1uPfPvttyEhIbJ71oM//PDD8OHDx4wZI6kl2zp9+rSl8ov7pk2b
duPGDed2GwBcnIvfe6KeAABOcNN6qqiomDhx4rVr1yyPP/f05ZdfOreq8vLy
1q1b79ixQ6aPHj361WNST6NGjUpISLCzbGJiotRQcXGxeilx1LVr17t379Y0
/8GDB728vB4+fGipDMBhw4ZxCQZgVNQTAMB43LSeLJWfe1KPwFkqP1vk7e39
ww8/qJe3bt3avHmzmt66devOnTvtrEf6qEmTJtevX7cZj4qK0p7cKygoiImJ
uXr1qvUMZrN5+vTpISEh6mVubq6vr++mTZsKHlPfrad9KV9ZWdmYMWMWLlyo
XiYnJ/O5JwAGRj0BAIzHretJe6xOCmXlypWtWrXy8/Pr2rVrYGCgFiYDBgx4
/fXXqy4u8z///PP9+/fv169ftY/nWddTdna2h4eH9j17AwcOHDx4cHBwcFhY
mPYt5eo+lLX79+/L+Pnz59u2bfvaa69169Zt9uzZ0lBqfr41AoCxUU8AAONx
33qS/NmyZYv1iNlszszMtPnM0dmzZ7XbPdZKSkoyMjK073aok7y8vLS0NPUT
To7Iz8+X+dUXmGuOHTs2b948J7YOAG6BegIAGI/71pPss9ST7LP92dasWZOe
nq7fbjjn0aNHu3bt4isjABgY9QQAMB73rSdFfbbI7bjpbgOA46gnAIDxuHs9
AQBcE/UEADAe6gkAoAfqCQBgPNQTAEAP1BMAwHioJwCAHqgnAIDxUE8AAD1Q
TwAA4zFGPZWWlpaXl2svzWazIz/GJIvI4ct+1rryu3fvWo+UlZWVPCbvWr/1
8OHDar8g/fbt2/fu3at1lwDAMKgnAIDxuHU9nTp1Kjc3VyZCQkLWrl2rjZ85
c8bDw0MdS02ysrJeeOGFPn36tG3bdsyYMTY/ZautZ9iwYS1btlywYIH1eERE
hMdj7du3V4OFhYW9evXq3r37K6+8EhQUlJiYqMaPHTvWqVOnV199tWvXrkOH
DpXzbKn8/dwTJ07wveUADIx6AgAYj/vW0+HDh2NjY9W0E/X0xhtvLFy4UCbk
qF9++eWYmJiq89y4cSMtLW3KlClV62nz5s3/UUm75yWbS01NVdNr1qwJDQ1V
05JpKvGklQYMGLBixQo1vnXr1q+//rruxw0A7sGo9ZSZmUk9AUCjVY9XN7mg
/JX1tGzZsm3btqnputaT2Wxu2bLlzz//rF6uXr26c+fONc08bdq0qvUk7WNn
386dO9e0adOq97Pee+89qTY1feLEiejoaDsrAQC35nb1ZDKZuPcEALDPfe89
2dSThMkvj8XFxdV670kW2bFjh5resmWLnfmrrae//e1vycnJNh960rz77rtD
hw61GZSY6tq168aNG9VL6gmAsbl4PUkr8eQeAKCu9Lu66f1sw6JFiw4dOqSm
JYWCg4NHPPbiiy/WWk9r167t06fPpUuXTp48GRoaKvMXFhZWO2fVepJAW7du
3YQJE55++un4+Hib+SXKgoKC5CpsPSinIiwsTHJJ+6zTxYsX33rrrTodMgC4
Ef2ebaiXeuJzTwAAJ7jpvac7d+5EREQUFBSol0587qmsrCw2NnbAgAFvv/12
TEyMdFBNc1atJ83cuXP9/f2tR7799lvZGdk9m22NGzdONmT9xYAyKGu+ceOG
nZ0EAPfl4veeqCcAgBPctJ4qKiomTpx47do19dKJerImIaZ9HKkqO/WUmJgo
GyouLlYv4+Pju3btavP15mLy5MlvvfWWzTfsSWENGzaMSzAAo6KeAADG46b1
ZKn83NP27dvVtJ162rp1686dO6surt0GyszMfOaZZy5evCjTBQUFMTExV69e
tZ6zpnoym83Tp0+XTauXubm5vr6+mzZtKnhM5dKePXueeuopORtqUEut5ORk
PvcEwMCoJwCA8bh1PTnynXsDBgx4/fXXqy4uQRQcHDx8+PCAgICDBw+qwezs
bFlQ+z69b775xt/fX9rHy8tLJg4cOKDGBw4cOHjwYFk8LCxM+5ZydR/K2v37
92V8xowZ1oPat0nwrREAjI16AgAYj/vW08qVK7ds2VLrbGfPnlW/61SVtNLv
v/9uNpvruum8vLy0tLSSkpK6Lmjt2LFj8+bNe5I1AIAro54AAMbjvvUk+yz1
JPtsf7Y1a9akp6frtxvOefTo0a5du/jKCAAGRj0BAIzHfetJsfkqBnfhprsN
AI6jngAAxuPu9QQAcE3UEwDAeKgnAIAeqCcAgPFQTwAAPVBPAADjoZ4AAHqg
ngAAxkM9AQD0QD0BAIzHSPUkO5+amvrHH384/o12OTk5V65cKS0trfqWnBN5
q7CwsNoFzWaznLfff/+92ndlhXfv3rUZlL2q9leisrOzZbe5FgMwGOoJAGA8
bl1Pp06dys3NtVS2zL/927+1adNmwIABISEhHTt2PHHiRK2Lz5s3r2vXrqNH
j/bz87P+RV25gL5caeTIkbLOa9euVV1WNiEzDBw4UCaSk5O18TNnzgwbNqxl
y5YLFiywnj8+Pr5Xr16jRo2S+b/66is1KD01a9as9u3bh4aGdujQISUlRQbz
8/Nl5/lKcwDujnoCABiP+9bT4cOHY2Nj1bSkU0BAwK1bt7S3mjRpcuXKFftr
KCoqUhNpaWmenp5y3VQvJX+WLFmipsvLy8vKyuwsu3TpUplfG79x44asbcqU
Kdb1JHHXrVs3tXtywn18fNQ6d+7cGRQUpO5Gffrpp9J9Kpq2bt369ddf1+Vk
AIDLMWo9ZWZmUk8A0GjV49VNLih/ZT0tW7Zs27ZtMlFQUNCqVauPPvrI+t0X
Xnhh5MiRDq4qJSXFy8tLPaQn7dOsWbO8vDwHl/3444/Dw8NtBqdNm2ZdT3JW
vb29jx07JtO//vpr79691XhkZOS7776rprOysjw8PORdmT5x4kR0dLSDOwAA
rsnt6slkMnHvCQBgn/vee9Lq6dKlS9Idp0+ftn73ww8/9PHxqXUlly9fXrdu
3YgRI/bt26dGvv/++4CAgJ9++iksLGzOnDmpqanVLlhUVCSNs3TpUlk2IyPD
5l2behLfffddixYtPvnkk4EDB6anp6vB2NjYsWPHqmk5/1Jte/futVBPAAzB
xetJWokn9wAAdaXf1U3vZxsWLVp06NAhmZB/Sj3l5+dbv6sGtefrajJ//vzn
n3++V69e6saQWLVqlZeX1/Tp06Wb4uLimjdvLien6oJ//PHHm2++6efnN2XK
lNu3b9u8W7WeZP0vvPBCx44dZVtabWVlZbVq1WrHjh03b96cMWNG06ZNt2/f
LuMXL15866236nAuAMD16PdsQ73UE597AgA4wU3vPd25cyciIqKgoECmf/vt
Nwmln376yXqGLVu2+Pr6Ori2c+fOyRrS0tJk+ptvvpF6UmsWQ4YMWb58uZ1l
33vvve7du9sM2tSTrFm6KScnR1Y7efJkb29v7cnAH374Yfjw4WPGjImPj9fu
oJWVlckabty44eD+A4ALcvF7T9QTAMAJblpPFRUVEydOVN+GV1hY2KZNmw8/
/NB6hvDwcEkSx1fYrVu3lStXysTJkyebNm368OFDNR4VFfXOO+/YWTAlJUWq
JzMz03rQpp4+++yz8ePHq2mz2ezv779r1y6b9Rw8eFCqTW1X2nDYsGFcnQG4
NeoJAGA8blpPlsrPPann3MSXX37ZoUMH7WbNnj17PD09tY8sbd26defOnVXX
oCXS1atXpYASEhIslV+y16VLF1mhpfLLw/38/NR4QUFBTEyMzGmpLCDtQcHF
ixd7e3vb/IqTTT1t2LDBx8dH3W+SUy37dubMGbUtNUNZWZm0nvat6cnJyXzu
CYC7o54AAMbj1vWkvjXCUnkras2aNVIoffr06dq167PPPnv27FltzgEDBrz+
+utV1yDBEhgY+Morr8j8sjZt/PLlyxJNISEhssJFixapwezsbCksCTFLZVU1
b968b9++wcHBAwcOTEpK0pb95ptv/P39n3rqKS8vL5k4cOCApfI792bOnNmp
U6fBgwfLar/44gs18/nz59u2bfvaa69169Zt9uzZ2lej860RAAyAegIAGI/7
1tPKlSu3bNliPVJeXv77779rP9ukkZKy/jFcjTSXyWSq+o15lsq7S7Iq7eZU
VVI6ct5ycnIc32E5G1W/X0JCLC0tzebbLY4dOzZv3jzH1wwALoh6AgAYj/vW
k+yz1JPsc61zrlmzRvuScNf36NGjXbt28ZURANwd9QQAMB73rSeloqJC7038
xYx3RAAaJ+oJAGA87l5PAADXRD0BAIyHegIA6IF6AgAYD/UEANAD9QQAMB7q
CQCgB+oJAGA81BMAQA/UEwDAeKgnAIAeqCcAgPFQTwAAPVBPAADjoZ4AAHow
aj1lZmZydQOARqser25yQfkr66m0tLSkpMSRTVRUVMicajoxMXHlypVqWg62
vLzc6U2rc+X4pgGgUXG7ejKZTNx7AgDY5773nkJCQry8vJo3b96/f/+NGzfa
mVP2xMPD4+HDhzK9atWq4cOHq/G+fftu3rzZ6U23aNHC29s7LCzMTh9ZbxoA
GhUXrydpJZ7cAwDUlX5XNwefbSivmf0FJWHWrVtXUFDw+eefS0NlZ2fXNGdZ
WVl6erpaoXU9yR7m5eXVuoc1bVqO7tKlS9JQ33//vSObrsnUqVM3bNjgxG4A
gCvT79mGeqknPvcEAHBCw957MpvNBw8e/L46R48etb+sShiZuH37toeHh1xb
LZW1In00duzYyZMnJyUlqTnl0KKiooqKiix/rqfY2NgzZ85oM+Tk5HzyyScT
Jkyw3nR8fPz48eMjIyNPnDgh89hsWgwaNEiN17ppGZQZUlNTo6OjZ82aJadd
Bnft2uXn5/fSSy/JbPKnYP+QAcCNuPi9J+oJAOCEBn9yLysrq9p6unfvnv0F
JWE+//zzs2fPvvHGG/Pnz1eDERER/fv3T0xMjIuLa9eu3f79+y0OPLmnZpAO
Wr58+erVq1u0aJGfny/jycnJvr6+GzduvHDhwujRo2UebdOqnmTBpk2bfv31
1w5uukuXLoMHD962bZsU2bhx42Tw5s2bL7zwgsTUjz/+KOe/1tMFAO6CegIA
GE+D15M4efKkTTpJrdS6lCRMt27dfHx8pD7UjSf5p6SK9JSaYcGCBaGhoRaH
60ndcqqoqGjdurV0k0xHR0fPmzdPzXz58mXreho6dOioUaOks8LDw9VTJY5s
unPnznKeZfr48eNt2rRRM8uqJNkcOVEA4EaoJwCA8bhCPcl2d+/eraXTvn37
Hj16VOtS2oePduzYIRVz7do1SR5JFW1ZWY+Xl5fF4XrSvtuhffv2Ujcy4e/v
LzumBm3qadKkSbJ+OXtqpK6bls5q1aqVmqaeABgS9QQAMB5XqCeRlpam1VNG
RoYji1h/+Eim//nPf169elVSRVt8xYoVgYGBlieopxEjRsTGxqrB06dPV31y
T1PXTVNPAAyPegIAGI+L1JPMeeTIEUmnpKSkiooKRxbREkZKRwpl//79ZWVl
QUFBixcvlrXl5ub269dvwYIFlieop/Xr13fu3Hnnzp3ffvutrK1JkyY2m9bU
ddPW9RQVFRUdHe3giQIAd0E9AQCMx0XqSZhMJqmnBw8eODi/JIynp2ezZs1C
Q0MXLVqktpWSktKzZ89OnTp5eXlFREQUFBRYnqCe5GzImiWFZs2alZCQ4O3t
rW3app7qumnrerp48WJAQECvXr2ysrIcP10A4OKoJwCA8bhOPQk7v9lUJzk5
OcXFxfWyKs3HH38sGaXTps1mc63fMQgA7oV6AgAYj0vVk6s5fvz41KlT4+Li
Zs6c6ePjk5CQ0NB7BABug3oCABgP9WSHyWTas2dPTEzMmjVrrl+/3tC7AwDu
hHoCABgP9QQA0AP1BAAwHuoJAKAH6gkAYDzUEwBAD9QTAMB4qCcAgB6oJwCA
8VBPAAA9GLWeMjMzuboBQKNVj1c3uaBQTwAAxe3qyWQyce8JAGAf954AAHpw
8XqSVuLJPQBAXel3dePZBgBozPR7tqFe6onPPQEAnMC9JwCAHlz83hP1BABw
AvUEANAD9QQAMB73rafS0tKSkhKbQRkpKyuTiYqKiqrv2ifHXl5e/uR7ZbOS
uu6GtpTZbHZiQdm6+kMUy5YtO336dE1zyp94ZGRkUVGRzXhiYuLKlSud2DQA
WKOeAADG4771FBIS4uHhkZmZqY1cv35dRmbOnCnTsnWZfvjwoeMr7Nu37+bN
m53Yk/Xr1+/YseOXX35RezV48GBpN/WWxJTsRl5eXp1WmJKSIkvFxsY6sTOr
Vq0aPny4mrZ/RDWdIus1VCX/wuzbt++zzz5zrgoBNB7UEwDAeNy6npo3by7/
Ga+NfPDBB56enqqeysrK0tPT63QvSUKsrpmjdOjQIScnR9srSZK4uDj1stZ6
krcCAgKys7OtB+fMmdO6devAwEAnbj/dv38/KytLTetRT8ozzzyTn59f130D
0KhQTwAA43HregoLC+vRo4d6KaEkGTJu3DhVT3I4UVFR6rG0kpKSr776auzY
sW+++eatW7fU/ImJiZGRkWPGjPn+++/VSGxs7JkzZ7RlJYg++eSTCRMmHD16
VNtofHz8+PHjZcETJ07IPGpQ6klLCbVX0j4qYazrSYJOwkR2Y/LkyUlJSWr+
WbNmyQzh4eGLFi1SI8XFxW3atDlw4ICMJycnq8Hly5f/9NNP2m589NFH0oaP
Hj3auHHj9OnTIyIiDh8+rN6SNctW1LRWT9XOqeopIyNjwYIFch60zrKuJ9n/
mJiYkSNHLly4sLCwUNsB60MGgGpRTwAA43Hretq7d2+zZs2uXLkiLyVn5D/y
58yZU/XJvW+++Wbo0KGpqanHjx+Xi6OMyD99fHyklX755Zdff/1VrVBrDbXs
oEGDpFlWr17dokULVQrSMr6+vpIhFy5cGD16tMyjFrSpJ8mcwYMHv/7665Y/
15OUS//+/aXa4uLi2rVrt3//fhlMSEiQGaTgzp8/r9awffv2Pn36yMSIESMm
TpyoBleuXKkVjfyRPfPMM7Jm6TvJqLNnz8rinp6eaivVPrlX7ZzqMOWkyf4s
W7asZcuWKtas1yA7ILstxytJ+P7772snn3oCUCvqCQBgPG5dT6dOnRozZsyC
BQvk5dSpU3fv3l1tPS1ZskSyRXWTIiX11FNPSU1Yr9CmntQtp4qKitatW6us
iI6Onjdvnpr58uXLNdWT7FVGRoasf8eOHVo9ZWZmyoS2Rdnn0NBQS+WDdjIu
51/bjQEDBkjuWSrvczVv3lz+XGT67t270ol37txRyy5cuNDmbPj7+x87dszi
wOeetDnVYcqfvhqXUHrvvfes16D2WWaQozh9+nTv3r21lVBPAGpFPQEAjMfd
62nPnj1+fn5SSe3bty8uLq62nh48eBAWFtaiRYtPPvlE+66DL7/8UkZef/31
P/74Q43Y1JP2gSBZ8/Hjxy2V3SGBpgbt15NMfPHFF76+vllZWaqepL9k4tGj
R2q2ffv2eXl5WarUk/rii2XLlq1evXrFihUyvWbNGvWW7Oq//du/Scg8/fTT
v//+u6Wy7LZt2/b2229PmDBBYi0hIcFSQz1VO6fNYcrKX375Zes1yD43adKk
ixXt4T3qCUCtqCcAgPG4ez0VFRW1atVq0qRJ0dHRlsrvW6jpO/cuXrzYrVu3
pUuXaiM5OTkRERHaJ6dqracRI0Zo34N3+vRp+/VUXl4uKxw7dqyqp6tXr6oP
GanZpIwCAwMtVerpvffee/XVV2Mfk2J67rnn1FvSicHBwZJvgwYNUiNSWHJE
0oYyHRAQYKeeqp3T5jDlBKq7eNoaUlNTZYabN29WPfnUE4BaUU8AAONx93qS
icjISO2huGrr6caNG+qW06xZs9TDaXfv3lXfknfy5EmpCfXVfLXW0/r16zt3
7rxz585vv/22X79+TZo0UTNUW08iLS3N09NT1VNZWVlQUNDixYvlnOTm5sri
KlVk3MfH58SJE5bKb7fw9fVV33yuSLnI4hcuXLBUfvNDmzZtOnXqJDug3p09
e3Z4eLhMnD9/Xt7atWuXpYZ6qnZOdZhHjhyR6Tt37nTp0kXOhvUa5LT06dNH
Tq86OvnXQ/sOQOoJQK2oJwCA8RignjIyMr777jv1E0vV1tM777wjhfL8888P
GjRI3eX54Ycfnn76aVlDz5494+Pj1QprrSc5OYsWLZLwkQpLSEjw9vZWM9RU
T5bK36vVvjUiJSVFNif54+XlFRERUVBQoOZZvny5RNOUKVMkanr16mVzmIMH
D9a+3O/vf/+7HIj2+J+sMDAwUA7kjTfe+Mc//iFrllNRbT1VO6ccpgSgnBzZ
55YtW0ZHR6s/L+s1ZGZmykmTd5977jme3ANQJ9QTAMB43Lee6kSOq+oPG2k/
0uSEjz/+WDJKTdcpJWSjxcXFNoP/quTEbkgzaselvl/C8TnNZrPKOmkiLeWq
lV/JeoR6AlAr6gkAYDyNpJ7qxfHjx6dOnRoXFzdz5kwfHx/16SFLZUps3Ljx
8uXLDbt7f42bN28eOXLkqaeeop4A2Ec9AQCMh3pynMlk2rNnT0xMzJo1a65f
v66Nl5WVyXkz2MHWpLy8/N8rNfSOAHB1Rq2nzMzMRvJ/+ACAqurx6iYXFGPX
EwDAcW5XTyaTiXtPAAD7uPcEANCDi9eTtBJP7gEA6kq/qxvPNgBAY6bfsw31
Uk987gkA4ATuPQEA9ODi956oJwCAE6gnAIAeqCcAgPFQTwAAPVBPAADjoZ4A
AHqgngAAxkM9AQD0QD0BAIzHfeuptLS0pKTEZlBGysrKalpEjjEyMrKoqKjq
W3Lg5eXlTu+GI78eW1FRUXWHAcCoqCcAgPG4bz2FhIR4eHhkZmZqI9evX5eR
mTNn1rSI7JLM8PDhw6pv9e3bd/Pmzc7thpeXV4sWLby9vcPCwuz0kZ2tA4Dx
UE8AAONp8Hoqr5n9BSVbmjdv/tlnn2kjH3zwgaenp4P1tGfPntGjR2tvSYXl
5eXVurfV7sa6devkSC9duiQN9f3339c0Z1lZWXp6uv3jmjp16oYNG5zYDQBw
NdQTAMB4GraezGbzwYMHv6/O0aNH7S8r2RIWFtajRw/1UqokICBg3LhxWj3d
vn07KipKEmnbtm1qRKunjIyMl19+uW3btjLDoUOH5K3Y2NgzZ87IRFJS0qpV
q1JTU6Ojo2fNmiUnR9tifHz8+PHjIyMjT5w4IQtquyH1pKYHDRqkxiWUZCVj
x46dPHmyrFC9K2dY3lXPDVa7lV27dvn5+b300ksym/yJ2D98AHBx1BMAwHga
/N5TVlZWtfV07949+wtKtuzdu7dZs2ZXrlyRl1I0I0eOnDNnjqqn+/fvP/PM
Mxs2bJDxzp07//bbbxaresrLy3v33XelvH788UeJLIvVk3sSNV26dBk8eLA0
l7SS5JjaXHJysq+v78aNGy9cuCBFJuvRdkPVk6y8adOmX3/9tUxHRET0798/
MTExLi6uXbt2+/fvt/z5zle1W7l58+YLL7wgMSV7JX8WtZ46AHBl1BMAwHga
vJ7EyZMnbdJJCqXWpSRbTp06NWbMmAULFlgqn3nbvXu3Vk9ffPHFSy+9VFpp
7ty5y5cvt/y5X6SDJHC0tVnXk9SWnA2ZPn78eJs2bdQM0dHR8+bNU9OXL1+2
rqehQ4eOGjWqRYsW4eHhcsiZmZny7tmzZ9UMsnuhoaGWKvVU7VZkVatXr3bk
pAGAi6OeAADG4wr1JNuV8NHSad++fY8ePap1KVVPe/bs8fPzkyRp3759cXGx
Vk9vv/1269atuzymHqhzsJ6GDx+uBqWAWrVqpab9/f1lJ9W0TT1NmjRJ9lnO
pBpJTk6Wd7VDkLe8vLwsVeqp2q1QTwAMg3oCABiPK9STSEtL0+opIyPDkUVU
PRUVFUl6SL9ER0fLoFZPS5Ys6d27t80iT1JPI0aMiI2NVdOnT5+u+uSe5urV
q/KudhQrVqwIDAy0UE8AGhnqCQBgPC5STzLnkSNHJJ2SkpIqKiocWUTVk0xE
RkZqT8pp9ZSenu7p6bl7926z2Swv8/PzLX/ul8TERF9fX+3HoWqtp/Xr13fu
3Hnnzp3ffvttv379mjRpou2GTT3JOoOCghYvXiwHlZubKzOrZwsdqaeoqCiV
gQDg7qgnAIDxuEg9CZPJJPX04MEDB+fX6ikjI+O7775TzaXVkzh06FD79u07
duzYpUsXlSTW/SKNM3jwYHlXlrU4UE9yZhYtWiQpNGvWrISEBG9vb203bOpJ
pKSk9OzZs1OnTl5eXhEREQUFBRbH6unixYsBAQG9evXKyspy/NQBgAsyaj1l
ZmZSTwDQaNXj1U0uKE/4t3PZ2dlPdDDVkShTB1UtOWonLoIff/yxZFSts+Xk
5BQXF9d15WazudbvGwQA1+d29STXC+49AQDsc517Ty7u+PHjU6dOjYuLmzlz
po+PT0JCQkPvEQC4NBevJ2klntwDANSVflc3gz3bINfZPXv2xMTErFmz5vr1
6w29OwDg6vR7tqFe6onPPQEAnMC9JwCAHlz83hP1BABwAvUEANAD9QQAMB7q
CQCgB+oJAGA81BMAQA/UEwDAeKgnAIAeqCcAgPFQTwAAPVBPAADjoZ4AAHqg
ngAAxkM9AQD0QD0BAIyHegIA6IF6AgAYD/UEANAD9QQAMB63rqecnJwrV66U
lpbajJeVlaWkpMjhODgOAKh31BMAwHjct57mzZvXtWvX0aNH+/n5LVy4UBtP
TU0NDAwcNWpUp06ddu7cWes4AEAP1BMAwHjct56KiorURFpamqenp1z1ZNps
Nnfr1i0+Pl6ms7KyvL295Z92xgEAOqGeAADG4771pElJSfHy8iosLJTpkydP
+vj4lJeXq7fGjRu3dOlSO+MAAJ1QTwAA43Hrerp8+fK6detGjBixb98+NbJ+
/frQ0FBthgULFoSHh9sZBwDoxKj1lJmZST0BQKNVj1c3uaD8xfU0f/78559/
vlevXseOHVMjy5Yte/XVV7UZ5OWQIUPsjAMAdOJ29WQymbj3BACwz63vPSnn
zp3z8PBIS0uT6bi4OOt7TJJXkyZNsjMOANCJi9eTtBJP7gEA6kq/q9tf+WxD
t27dVq5cKRNnzpxp06aNtt1Ro0bFxsbaGQcA6ES/ZxvqpZ743BMAwAnue+/p
4cOHauLq1aseHh4JCQkyXVFR0aNHj71798p0RkZG69at79y5Y2ccAKATF7/3
RD0BAJzgvvU0ZsyYwMDAV1555dlnn122bJk2np6e3rVr1yFDhnTo0EF9Rbn9
cQCAHqgnAIDxuG89VVRUmEymjIyMqm+ZzeabN2+WlpY6OA4AqHfUEwDAeNy3
ngAArox6AgAYD/UEANAD9QQAMB7qCQCgB+oJAGA81BMAQA/UEwDAeKgnAIAe
qCcAgPFQTwAAPVBPAADjoZ4AAHqgngAAxkM9AQD0QD0BAIyHegIA6IF6AgAY
D/UEANAD9QQAMB73rafS0tKSkhKbQRkpKyuzs1RiYuLKlSsd3IScjaqHUHWj
GjmHkZGRRUVFDq4fAAyMegIAGI/71lNISIiHh0dmZqY2cv36dRmZOXOmnaVW
rVo1fPhwBzcxb968v/3tb9YjV69e9fPzKy8vr3Z+OWTZgYcPHzq4fgAwMKPW
k1x3qCcAaLTq8eomFxQn6qm8ZvYXlHpq3rz5Z599po188MEHnp6e9VhP0kpN
mza9d++eNrKgUk3zU08AoHG7ejKZTNx7AgDY17D3nsxm88GDB7+vztGjR+0v
K/UUFhbWo0cP9VJqKyAgYNy4cVo9yUHNnTt35MiRc+bMycrKUoPW9ZSUlCQp
NHbsWBksLCy0VD56FxUVdfv2bVlk8+bNMtK7d+8vv/xSO8b27dtfu3ZNpsvK
ymQpWXby5MmyHjWDdT3Fx8dv3LhRjUuF/fOf/1TTsbGxZ86c+e6772RXly9f
LiNysOPHj1+xYkVpaamaR3ZAdmP06NHbtm2zfxIAwGW5eD1JK/HkHgCgrvS7
ujn4bIN0TbX1ZH3Hp1pST3v37m3WrNmVK1fk5YkTJ1QoqXp68OBB27ZtZ8+e
fe7cORl85pln7t+/b/lzPUmw7Nu37+LFi8HBwdu3b7c8zp+hQ4euX79ezoyM
rF27Vjak5k9MTNSmIyIi+vfvLyNxcXHt2rXbv3+/5c/1tGjRokmTJqmZjxw5
EhgYqKb79u0bGho6b968AwcOeHt7S0NJKMm0rCQhIUFmkP2Uvd2wYYMcUefO
nX/77bdazyEAuCD9nm2ol3ric08AACe4wueeTp48aZNOFy5cqHUpCZlTp06N
GTNGPUo3derU3bt3a/X0xRdftG/fXpu5Y8eO0kqWGp7cmz9//owZMyyP80eC
S3srNzdXAk0lzOTJkz///HOZkOu4zHb27Fk1j+yABJHF4XrSnv2TTFPbFWFh
YbKI2vOXXnqptNLcuXPV/SkAcDsufu+JegIAOMEV6km2K+GjpdO+ffsePXpU
61Kqnvbs2ePn5yfBIq1UXFys1dPf//73cePGaTO/+eabUVFRlj/XkzTa+++/
Hx4e/uyzz06bNs1SwweXpGveeeedgoICLy8vOVEykpycLLNpOyk7LG9ZHK4n
9UygGDFihMoxITN/+OGHMvH222+3bt26y2NqtwHA7VBPAADjcYV6EmlpaVo9
ZWRkOLKIqqeioqJWrVpJekRHR8ugVk8fffRR7969tZlDQ0M/+OADi1U93bp1
q0WLFj/++KNML1y40E49JSQk+Pj4bNiwYejQoWrk6tWrMpu2nytWrFBxZFNP
EydOVDPs3LnT8XpasmSJ9Z4DgJuingAAxuMi9SRzHjlyRNIpKSmpoqLCkUVU
PclEZGSk9hydVk+XLl1q0qTJr7/+qk2rpwG1epJlvb298/Pzs7OzZUTdqKq2
nsrKytq1a9e6dWvtOxxkJCgoaPHixbLbubm5/fr1Uw/jWS/+zTffPPfcc3I+
L1682LFjR8frKT093dPTc/fu3WazWV7KHjp4DgHApVBPAADjcZF6EiaTSerp
wYMHDs6v1VNGRsZ3332nmkurJ7Fp0yZJnmeffVb+GRcXpwa1epI2kXhp06ZN
cHDw+vXrW7ZsuWXLlpq+cnzhwoUyQ0FBgTaSkpLSs2fPTp06eXl5RUREqLes
F79//35oaKgs9fLLL8ueOF5P4tChQ+3bt5fm6tKli7qnBgBuh3oCABiP69ST
yM7OfqKDqaK8vPzu3bvqJk61tFjLy8tz4mqYk5NTXFxsZ4Yn+e0nyUn1xwEA
7oh6AgAYj0vVEwDAMKgnAIDxUE8AAD1QTwAA46GeAAB6oJ4AAMZDPQEA9EA9
AQCMh3oCAOiBegIAGA/1BADQA/UEADAe6gkAoAfqCQBgPNQTAEAP1BMAwHio
JwCAHoxaT5mZmVzdAKDRqserm1xQqCcAgOJ29WQymbj3BACwj3tPAAA9uHg9
SSvx5B4AoK70u7rxbAMANGb6PdtQL/XE554AAE5w93tPt2/fzsrKsjNDWVlZ
SkqKHNoTjufl5aWmppaXl1sPFhcXX7t2LTc312bmmsYVOTPWL81mc4kVeWnn
cADAXbj4vSfqCQDgBPetJymUkSNHvvzyy6GhoREREVI9VeeR3gkMDBw1alSn
Tp127tzp9PjatWtlXDYXHBz8xx9/qMGzZ8/6+vrKzN26dZN9KCwstD+en58v
++nn59exY0frnTx06JCHlZ9//rmezhAANCTqCQBgPO5bTx999NHEiRMtlfdu
hg0b9tVXX9nMIOPSL/Hx8TKdlZXl7e2t7lLVdfzq1att27aV8yPTGzZsGDBg
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
/w+sv0WN
    "], {{0, 631}, {1130, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{Automatic, 392.99999999999903`},
  ImageSizeRaw->{1130, 631},
  PlotRange->{{0, 1130}, {0, 631}}]], "Output",
 CellChangeTimes->{3.68969131380523*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Search Graph for Molecules", "Section",
 CellChangeTimes->{{3.4624731933519487`*^9, 3.4624732107024612`*^9}, {
  3.4636283812261953`*^9, 3.463628387056304*^9}, {3.463628914225465*^9, 
  3.463628914479706*^9}, {3.464294831081201*^9, 3.464294836159623*^9}}],

Cell["\<\
The molecule search engine outlined above is very similar to the search \
engines for the World Wide Web (WWW) and since the most popular search \
engines are build for WWW, we are going to use WWW as an analogy. We can \
imagine that instead of molecules we consider web pages, and instead of \
formula characters or molecule names our searches have one or several terms, \
and we want to find the most relevant web pages that contain these terms. \
\>", "Text",
 CellChangeTimes->{{3.466286169807583*^9, 3.466286190874208*^9}, {
   3.466286300238838*^9, 3.46628638952704*^9}, {3.466286603319806*^9, 
   3.466286782169026*^9}, {3.466286816776183*^9, 3.466286868231103*^9}, {
   3.46628693242741*^9, 3.46628695236797*^9}, {3.4662872013499317`*^9, 
   3.466287256004127*^9}, {3.466287399156844*^9, 3.4662874002986393`*^9}, 
   3.6251801370782824`*^9}],

Cell["\<\
Let us define a browsing session as the browsing through a certain number of \
web pages by either using term search, or through the hyperlinks the pages \
have to other pages. If we consider multiple browsing sessions it is likely \
to come out that some web pages are visited more often than others.\
\>", "Text",
 CellChangeTimes->{{3.466286169807583*^9, 3.466286190874208*^9}, {
  3.466286300238838*^9, 3.46628638952704*^9}, {3.466286603319806*^9, 
  3.466286782169026*^9}, {3.466286816776183*^9, 3.466286868231103*^9}, {
  3.46628693242741*^9, 3.46628695236797*^9}, {3.4662872013499317`*^9, 
  3.4662873880738564`*^9}, {3.4662874259160957`*^9, 3.4662874980179987`*^9}, {
  3.4662875482418118`*^9, 3.466287604233692*^9}, {3.46628773066352*^9, 
  3.46628773253434*^9}, {3.466294511983243*^9, 3.466294637576483*^9}, {
  3.4663024507292356`*^9, 3.466302515011228*^9}, {3.4663025458213377`*^9, 
  3.466302688787462*^9}, {3.466302749130003*^9, 3.466302749659384*^9}, {
  3.466455638003541*^9, 3.466455653051807*^9}}],

Cell[TextData[{
 "Let us assume that a web page ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "L"], TraditionalForm]]],
 " links to another web page ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "R"], TraditionalForm]]],
 " if ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "R"], TraditionalForm]]],
 " is a suitable reference for the content in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "L"], TraditionalForm]]],
 ", or if ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "L"], TraditionalForm]]],
 " extends the content of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "R"], TraditionalForm]]],
 ". We can say that, a page that is referenced by many other pages is very \
prestigious. It is assumed that the most prestigious pages that contain the \
terms of a search are the most relevant ones. The pages of WWW and the \
hyperlinks between them form a directed graph. In this graph each page is a \
vertex, and each hyperlink is an edge."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQfe7R/6tnzrx0dEjnvQWi3Wrln4NonfxPYNqRt0L+
LJCe3b9DE0RznXqWCqKnrH1TBaLzDvi0gOjCXbmtIPoqq99EEP32SjWY1g/8
PB1EZ535CaZfbVWbC6KfqVQtA9EiF/nPgejEGQvPg+gVUlJXQPSSvKonIPrF
rX6G80D6eOoxFhDtdPrtXBD9YbPOQhB9ZWnscpWzLx2/aJ4H0z7Hg5b4A+mS
6iowLfBmcVIQkN54nzEVRO+4GpwDondebi8F0eeeNDaDaFONPjDtY8HhO/f8
S8eOW3OiQfQVs7UbQHTEh2ubQbTMqymrnlx86ci5LWcDiH7ZK78NRCe9LgfT
Hq6Rq7Iuv3QMmNYFpl+7v38Fos0EW9+AaNHj22qrmV47Ck3cA6YBoajlog==

  "]],

Cell["\<\
Let us define a session of molecule browsing as the browsing through a \
certain number of molecules in a way a curious chemistry student or an \
experienced chemist would do. If we want to draw an analogy between the web \
page browsing and molecule browsing we need to define or find methods of \
linking molecules to each other that would mirror the systematic knowledge of \
the properties of the molecules.\
\>", "Text",
 CellChangeTimes->{{3.466455767431398*^9, 3.46645598011646*^9}, {
  3.466456064462266*^9, 3.4664561219380207`*^9}}],

Cell["\<\
There are at least several (and probably many) possible ways to connect \
molecules. Let us list some of the more obvious methods:\
\>", "Text",
 CellChangeTimes->{{3.446550669450358*^9, 3.446550715008829*^9}, {
  3.4582348594954233`*^9, 3.458234866525024*^9}, {3.46645614084674*^9, 
  3.466456192938472*^9}, {3.466456709203622*^9, 3.466456711471057*^9}, {
  3.4664568900033693`*^9, 3.466456898797916*^9}, {3.4664569332613983`*^9, 
  3.466456940941718*^9}}],

Cell["\<\
1. We can link molecules if they have (a lot of) common or analogous physical \
and chemical properties.\
\>", "Text",
 CellChangeTimes->{{3.446550907960095*^9, 3.446550930768325*^9}, {
   3.4465511380286903`*^9, 3.446551173048305*^9}, 3.446552415148819*^9, 
   3.466456949281438*^9, {3.466456984713499*^9, 3.46645698774109*^9}}],

Cell[TextData[{
 "2. Through graph intersections. If the graph of the molecule ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "R"], TraditionalForm]]],
 " is a sub-graph of the molecule ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "L"], TraditionalForm]]],
 " then we link ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "L"], TraditionalForm]]],
 " to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "R"], TraditionalForm]]],
 ". We can also make that link if a large (or significant) part of the graph \
of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "R"], TraditionalForm]]],
 " is embedded in the graph of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "L"], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.446550669450358*^9, 3.446550903456027*^9}, 
   3.446552413783231*^9, {3.44655275308915*^9, 3.446552754037632*^9}, {
   3.4642938698488207`*^9, 3.4642938703258877`*^9}, {3.464296099099113*^9, 
   3.464296257890366*^9}, {3.466456223343112*^9, 3.4664562333728456`*^9}, {
   3.466456355257063*^9, 3.466456363676358*^9}, {3.46645695292937*^9, 
   3.466456960766212*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ChemicalData", "[", 
   RowBox[{"\"\<Phenylethylamine\>\"", ",", "\"\<Formula\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4701822476251*^9, 3.4701823167226686`*^9}, {
  3.645642547544003*^9, 3.645642552413055*^9}}],

Cell[BoxData[
 StyleBox[
  TemplateBox[{
   SubscriptBox["\"C\"", "6"],SubscriptBox["\"H\"", "5"],"\"C\"",SubscriptBox[
    "\"H\"", "2"],"\"C\"",SubscriptBox["\"H\"", "2"],"\"N\"",SubscriptBox[
    "\"H\"", "2"]},
   "RowDefault"],
  StripOnInput->False,
  ScriptBaselineShifts->{0.5, 0.75}]], "Output",
 CellChangeTimes->{
  3.4701822642782288`*^9, {3.470182299775906*^9, 3.470182317294673*^9}, 
   3.625179266445475*^9, {3.645642537171536*^9, 3.645642552864765*^9}, 
   3.689691326311511*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Phenylethylamine\>\"", ",", "\"\<Dopamine\>\""}], "}"}], 
    ",", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ChemicalData", "[", 
         RowBox[{"#1", ",", "\"\<MoleculePlot\>\""}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"ImageSize", "\[Rule]", "_"}], ")"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"ImageSize", "\[Rule]", "#2"}], ")"}]}], "}"}]}], "&"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Phenylethylamine\>\"", ",", "\"\<Dopamine\>\""}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"255", ",", "280"}], "}"}]}], "}"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.446515038560824*^9, 3.44651508910417*^9}, {
   3.446515950143896*^9, 3.4465159711144533`*^9}, {3.462972969743517*^9, 
   3.462972975005438*^9}, {3.4629733790785627`*^9, 3.4629733952067204`*^9}, {
   3.46317655935289*^9, 3.463176616502743*^9}, 3.466456326191371*^9, {
   3.4664589177171392`*^9, 3.466458919032745*^9}, {3.466459838067335*^9, 
   3.466459869302758*^9}, {3.4664599100199957`*^9, 3.466459932407866*^9}, {
   3.4664735019980593`*^9, 3.466473505636241*^9}, {3.466542868666995*^9, 
   3.466543048576564*^9}, {3.466543261349019*^9, 3.466543284434691*^9}, {
   3.466543326836813*^9, 3.466543438568264*^9}, {3.4665434916924057`*^9, 
   3.4665435165816174`*^9}, {3.466545122344171*^9, 3.466545149513897*^9}, {
   3.4670610508080177`*^9, 3.467061058184222*^9}, {3.46706112117348*^9, 
   3.467061143318512*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Phenylethylamine\"\>", "\<\"Dopamine\"\>"},
    {
     Graphics3DBox[
      {AbsoluteThickness[3], EdgeForm[None], Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJwlUnlIk2EYX5pQVqMkIjp0MylnBV3Oqbk9I3Y4Z27LObM51+e3ttzMTaVj
SRExIkTWJYaJohaMCFtUIp1PJSodFP5TpGBS/dVBUWZ3vccDL3zH8/yu95EL
dTZPgkQikZGTSI4zen8q83ctbFqg3HzbNq1JOYoPu3WAYv5EScuEFcLDirxT
RckYKkh+3gsC0HZniRZjQ0U5x+9lIG1r26qD80HScNMHPw/V3GqcY4HcayN7
7+Q44FsmYZjnxsnwwj5DtxP7DOTprx5eXzg3KPukw+UVhMlbBvPLyYTejGmR
d9aBoQAeJO2TFS7cyMqEA6nkx6udeKR1S3NguBRs9IO2GqmsYKQWOwZl8Xqf
Epm+fwJS+q6scnjymNZ2fG8lA2MeYLg1Whj7QYSWmkBBA4gHgOFoQ3Dx82ix
gCZgtL0iML3qXdzfLxG+byPK39iA4T1yIZs/60UqO/W6C0xzE1Yf688F9l7p
4TyiGR8QWdGX9ch0y3fz/EKFyHCbBZ4vVnM9IwGOF2ngvoz5aKQBVgWQyg+v
CQIxe/LDuIPzx9bxfBWNwHznGWCYwGtPWFBCy+kHjWPHlbs+APfbZ+ljCjXQ
mKJZdeBv39fRc9iAK9fPurSsXcV5Toeg4EB5LHsqBywtbXtSrhqR2lqUZIfZ
Sztdii4Tv0epCD26/i9/zphArBzXJ8ZVPO/9Xr4nXbXwdJoE5i8G5jfNzf01
eUFODcyohMUzy6RrpXaeZ0MVsvmvAsdfYocmTbbrhiIdWa5GN98nu5n77gxy
vatE/EgbRwv5nFLADcRORYYL1PRek3w89xUhnucLFd+Hy178DxWAa5g=
        "], {
         {RGBColor[0.65, 0.7, 0.7], SphereBox[10, 24.], SphereBox[11, 24.], 
          SphereBox[12, 24.], SphereBox[13, 24.], SphereBox[14, 24.], 
          SphereBox[15, 24.], SphereBox[16, 24.], SphereBox[17, 24.], 
          SphereBox[18, 24.], SphereBox[19, 24.], SphereBox[20, 24.]}, 
         {RGBColor[0.4, 0.4, 0.4], SphereBox[2, 34.], SphereBox[3, 34.], 
          SphereBox[4, 34.], SphereBox[5, 34.], SphereBox[6, 34.], 
          SphereBox[7, 34.], SphereBox[8, 34.], SphereBox[9, 34.]}, 
         {RGBColor[0.291989, 0.437977, 0.888609], SphereBox[1, 32.]}, 
         {RGBColor[0.65, 0.7, 0.7], CylinderBox[{22, 19}, 15.], 
          CylinderBox[{23, 20}, 15.], CylinderBox[{24, 10}, 15.], 
          CylinderBox[{25, 11}, 15.], CylinderBox[{26, 12}, 15.], 
          CylinderBox[{27, 13}, 15.], CylinderBox[{28, 14}, 15.], 
          CylinderBox[{29, 15}, 15.], CylinderBox[{30, 16}, 15.], 
          CylinderBox[{31, 17}, 15.], CylinderBox[{32, 18}, 15.]}, 
         {RGBColor[0.4, 0.4, 0.4], CylinderBox[{21, 4}, 15.], 
          CylinderBox[{2, 3}, 15.], CylinderBox[{2, 4}, 15.], 
          CylinderBox[{2, 24}, 15.], CylinderBox[{2, 25}, 15.], 
          CylinderBox[{3, 5}, 15.], CylinderBox[{3, 6}, 15.], 
          CylinderBox[{4, 26}, 15.], CylinderBox[{4, 27}, 15.], 
          CylinderBox[{5, 7}, 15.], CylinderBox[{5, 28}, 15.], 
          CylinderBox[{6, 8}, 15.], CylinderBox[{6, 29}, 15.], 
          CylinderBox[{7, 9}, 15.], CylinderBox[{7, 30}, 15.], 
          CylinderBox[{8, 9}, 15.], CylinderBox[{8, 31}, 15.], 
          CylinderBox[{9, 32}, 15.]}, 
         {RGBColor[0.291989, 0.437977, 0.888609], CylinderBox[{1, 21}, 15.], 
          CylinderBox[{1, 22}, 15.], CylinderBox[{1, 23}, 15.]}}]},
      Boxed->False,
      ImageSize->255,
      Lighting->"Neutral",
      ViewPoint->{1.3, -2.4, -2.}], 
     Graphics3DBox[
      {AbsoluteThickness[3], EdgeForm[None], Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJwtUgtIk1EUHiZiIiEoMvOxXPNRy9Qeii7dkci1ppmb2aZD3XJzzpXzn0Vq
CEZlBiZiD8q0LKOCWCYRIhIHMzN6KSgmVqJpISVBUlqQdB8euPycc+9/zvke
4eZyrcVDJBLJyFlDTlP/r2hjvYBvXpO4aMNnJG2SJuAmI7nxduHK6In5yEcx
+D27J+xMmQN9xm87U9oroCGtaG7YLEN75uIFXY4Ur10lMWGAe4OaxIa6rcDy
jsOwYlmaNZmCcFRuCZoRh0HVfGS89y4NpNBGYw5Q7izoVedoYSqr8cpRQQ9u
1XR1gNuA7T/uDmqUh5BMkU6WZoH/z7R31rGNaKURaIBl3ec7rQFqZO/bS5H1
CzVgdxv58ZUSybbfst/nIx334EMuSEjak2pGLb2It+Pzle6an13BSOH4KE0c
X3AhiGgs5/B+CyWQSIEOZUOEV92l3fk6vt/TI3z/tS6w91W2iK/rgPE4ZeFz
EuxQQR/oLRD7UeZVdywTWsSeuesa9as8F/PvgAlGpJN/an0O8PfRVsigAy0Z
HKfViKxvbDEwXfIcvD4jAMOnN6DZT5/0+FwybKcxfhwYX1WpwPr7qjgulcD1
SXIi2SKmO1S9uqcLe9W+HvKvKj4fBd4/txx/k3H9zWZ+v5SMqRRviYCMn9MO
TH+y+G9UvAWYT/ycGLf5vv/wQATOEPVUY1bsJLSOS1xYE0AZi4MddL8aJ7LU
0wkhecWKqSYlbPvijpiNSud4QACm16wG3aWfKs4XhAMt9yRXQuvAhi5hrwyi
bjZ0TXcouE+rjSCvD5x4G5XGcb6wgK154aRy5CD8rSXKyFXA9nho47r1OoHa
OX5Zy33na+L1s2VAaRw6VQAKasTLOiDTbM3ET/spweuLkOl/wwAhL+eUnRIF
MB8ZTHBrDyGibx/XSWLk/LYVcj4zSvA/lD2R4Q==
        "], {
         {RGBColor[0.65, 0.7, 0.7], SphereBox[12, 24.], SphereBox[13, 24.], 
          SphereBox[14, 24.], SphereBox[15, 24.], SphereBox[16, 24.], 
          SphereBox[17, 24.], SphereBox[18, 24.], SphereBox[19, 24.], 
          SphereBox[20, 24.], SphereBox[21, 24.], SphereBox[22, 24.]}, 
         {RGBColor[0.4, 0.4, 0.4], SphereBox[4, 34.], SphereBox[5, 34.], 
          SphereBox[6, 34.], SphereBox[7, 34.], SphereBox[8, 34.], 
          SphereBox[9, 34.], SphereBox[10, 34.], SphereBox[11, 34.]}, 
         {RGBColor[0.291989, 0.437977, 0.888609], SphereBox[3, 32.]}, 
         {RGBColor[0.800498, 0.201504, 0.192061], SphereBox[1, 31.], 
          SphereBox[2, 31.]}, 
         {RGBColor[0.65, 0.7, 0.7], CylinderBox[{24, 21}, 15.], 
          CylinderBox[{26, 22}, 15.], CylinderBox[{28, 19}, 15.], 
          CylinderBox[{29, 20}, 15.], CylinderBox[{30, 12}, 15.], 
          CylinderBox[{31, 13}, 15.], CylinderBox[{32, 14}, 15.], 
          CylinderBox[{33, 15}, 15.], CylinderBox[{34, 16}, 15.], 
          CylinderBox[{35, 17}, 15.], CylinderBox[{36, 18}, 15.]}, 
         {RGBColor[0.4, 0.4, 0.4], CylinderBox[{23, 9}, 15.], 
          CylinderBox[{25, 11}, 15.], CylinderBox[{27, 6}, 15.], 
          CylinderBox[{4, 5}, 15.], CylinderBox[{4, 6}, 15.], 
          CylinderBox[{4, 30}, 15.], CylinderBox[{4, 31}, 15.], 
          CylinderBox[{5, 7}, 15.], CylinderBox[{5, 8}, 15.], 
          CylinderBox[{6, 32}, 15.], CylinderBox[{6, 33}, 15.], 
          CylinderBox[{7, 9}, 15.], CylinderBox[{7, 34}, 15.], 
          CylinderBox[{8, 10}, 15.], CylinderBox[{8, 35}, 15.], 
          CylinderBox[{9, 11}, 15.], CylinderBox[{10, 11}, 15.], 
          CylinderBox[{10, 36}, 15.]}, 
         {RGBColor[0.291989, 0.437977, 0.888609], CylinderBox[{3, 27}, 15.], 
          CylinderBox[{3, 28}, 15.], CylinderBox[{3, 29}, 15.]}, 
         {RGBColor[0.800498, 0.201504, 0.192061], CylinderBox[{1, 23}, 15.], 
          CylinderBox[{1, 24}, 15.], CylinderBox[{2, 25}, 15.], 
          CylinderBox[{2, 26}, 15.]}}]},
      Boxed->False,
      ImageSize->280,
      Lighting->"Neutral",
      ViewPoint->{1.3, -2.4, -2.}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.466543333505906*^9, 3.466543338001668*^9}, 
   3.4665434392920647`*^9, {3.4665435018678637`*^9, 3.4665435165818567`*^9}, 
   3.4665450851043377`*^9, {3.466545122344425*^9, 3.466545149514183*^9}, 
   3.467061059457178*^9, {3.4670611017658587`*^9, 3.467061144458885*^9}, 
   3.625179280788272*^9, 3.645642539511526*^9, 3.689691342872212*^9}]
}, Open  ]],

Cell["\<\
Large part of the graph of the molecule of Phenylethylamine is part of the \
graph of Dopamine.\
\>", "FigureCaption",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.466544901260404*^9, 3.4665449356860113`*^9}, {
   3.4665450249768744`*^9, 3.466545054500854*^9}, 3.466545085104093*^9, 
   3.4665451223446293`*^9}],

Cell["\<\
3. Since the search is done through symbols that are typed in, it would make \
sense to link the molecules according to the symbols in their compound \
formulas or in their representation with any linear notation for molecules \
(like SMILES).\
\>", "Text",
 CellChangeTimes->{{3.446550937487954*^9, 3.446551062327985*^9}, {
  3.446551115491152*^9, 3.4465511342161617`*^9}, {3.446552761642147*^9, 
  3.446552829477*^9}, {3.4642962983457336`*^9, 3.4642963076784973`*^9}, {
  3.4642968563893642`*^9, 3.4642968584037743`*^9}, {3.4664569552228193`*^9, 
  3.466456964126145*^9}}],

Cell["\<\
4. We can use all of the above methods combining them in a certain way.\
\>", "Text",
 CellChangeTimes->{{3.446551183504076*^9, 3.446551233848343*^9}, {
  3.458234946706223*^9, 3.458234958709214*^9}}],

Cell[TextData[{
 "From a mathematical perspective probably the most interesting and appealing \
method is the second one, which uses molecule graph intersection. Its appeal \
comes from its clear definition and from the observation that the molecule \
graphs are easier to work with than lists of (heterogeneous) chemical and \
physical property data. (In addition, in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " the molecule graphs are easy to find using the function ChemicalData.)"
}], "Text",
 CellChangeTimes->{{3.4465512501439*^9, 3.446551482400639*^9}, {
   3.44655166965541*^9, 3.446551669784689*^9}, {3.446552417087865*^9, 
   3.446552418866682*^9}, {3.4465528671862097`*^9, 3.4465528674724617`*^9}, {
   3.452297253268304*^9, 3.452297257975361*^9}, {3.4582430922608*^9, 
   3.4582430971812353`*^9}, {3.464296478046735*^9, 3.46429663497363*^9}, {
   3.4642967186566677`*^9, 3.46429675294518*^9}, {3.464296843564151*^9, 
   3.4642968751659203`*^9}, {3.464297117601796*^9, 3.464297154009715*^9}, {
   3.4642973121812353`*^9, 3.4642973546556273`*^9}, {3.464297467787991*^9, 
   3.4642974840308933`*^9}, {3.464987347149146*^9, 3.464987366883759*^9}, {
   3.464987435828857*^9, 3.4649874400506268`*^9}, {3.464987485473311*^9, 
   3.464987560060597*^9}, 3.464987711761874*^9, 3.465489451737997*^9, {
   3.466457031031349*^9, 3.466457055491289*^9}, {3.4664570877333393`*^9, 
   3.466457202072682*^9}, {3.466457232724678*^9, 3.4664572575049143`*^9}, {
   3.46645733235439*^9, 3.4664573604780693`*^9}, {3.466458371362648*^9, 
   3.466458380364622*^9}, {3.466458589436166*^9, 3.466458606097192*^9}, {
   3.4664586997050343`*^9, 3.4664587323889503`*^9}, 3.466545248033033*^9, {
   3.466545297657324*^9, 3.466545306270273*^9}, {3.467059519887804*^9, 
   3.467059560346218*^9}, 3.625180146774663*^9}],

Cell[TextData[{
 "If the graph of the molecule ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "R"], TraditionalForm]]],
 " is a sub-graph of the molecule ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "L"], TraditionalForm]]],
 " we can say that molecule ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "L"], TraditionalForm]]],
 " extends molecule ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "R"], TraditionalForm]]],
 ", or that the structure of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "L"], TraditionalForm]]],
 " can be described by referring to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "R"], TraditionalForm]]],
 ". (Here we can draw and analogy with the shortened form notation of \
electronic configurations.) This way of linking the molecules would make \
simple molecules with structures that are subparts in many others to be the \
most popular and prestigious. The reference and extension of molecule \
structures would hopefully imply reference and extension of chemical or \
physical properties and of linear notation. Also, this way of linking by \
reference of the molecules provides us with a similarity function that can be \
used to find molecules that resemble the ones in the search results. (In \
structure and, hopefully, qualities.)"
}], "Text",
 CellChangeTimes->{{3.4465512501439*^9, 3.446551482400639*^9}, {
   3.44655166965541*^9, 3.446551669784689*^9}, {3.446552417087865*^9, 
   3.446552418866682*^9}, {3.4465528671862097`*^9, 3.4465528674724617`*^9}, {
   3.452297253268304*^9, 3.452297257975361*^9}, {3.4582430922608*^9, 
   3.4582430971812353`*^9}, {3.464296478046735*^9, 3.46429663497363*^9}, {
   3.4642967186566677`*^9, 3.46429675294518*^9}, {3.464296843564151*^9, 
   3.4642968751659203`*^9}, {3.464297117601796*^9, 3.464297154009715*^9}, {
   3.4642973121812353`*^9, 3.4642973546556273`*^9}, {3.464297467787991*^9, 
   3.4642974840308933`*^9}, {3.464987347149146*^9, 3.464987366883759*^9}, {
   3.464987435828857*^9, 3.4649874400506268`*^9}, {3.464987485473311*^9, 
   3.464987560060597*^9}, 3.464987711761874*^9, 3.465489451737997*^9, {
   3.466457031031349*^9, 3.466457055491289*^9}, {3.4664570877333393`*^9, 
   3.466457202072682*^9}, {3.466457232724678*^9, 3.46645724540314*^9}, {
   3.4664587718761883`*^9, 3.466458840099905*^9}, {3.625180148664974*^9, 
   3.6251801574513693`*^9}}],

Cell["\<\
Graph intersection and embedding checking algorithms, though, can be hard to \
develop and computationally expensive. (Probably NP-complete.<check this>) So \
we can take a similar, but simpler approach, with which we compare the number \
of types of bonds in the molecules.\
\>", "Text",
 CellChangeTimes->{{3.4465512501439*^9, 3.446551482400639*^9}, {
   3.44655166965541*^9, 3.446551669784689*^9}, {3.446552417087865*^9, 
   3.446552418866682*^9}, {3.4465528671862097`*^9, 3.4465528674724617`*^9}, {
   3.452297253268304*^9, 3.452297257975361*^9}, {3.4582430922608*^9, 
   3.4582430971812353`*^9}, {3.464296478046735*^9, 3.46429663497363*^9}, {
   3.4642967186566677`*^9, 3.46429675294518*^9}, {3.464296843564151*^9, 
   3.4642968751659203`*^9}, {3.464297117601796*^9, 3.464297154009715*^9}, {
   3.4642973121812353`*^9, 3.4642973546556273`*^9}, 3.464297467787991*^9, {
   3.466458851166087*^9, 3.466458854524601*^9}}],

Cell["\<\
Since we can link the molecules in a graph we can use WWW search engine \
algorithms. We can link two molecules if a certain number of their chemical \
bonds are the same. If that number is a certain percentage relative to the \
number of bonds in the first molecule, then the link can be in one direction.\
\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQ/Xr7O2fVMy8dJ7u2eIBop+f7fUH0hiO84SA6wsUo
HUT7Gd8E01Xss3NAtMAFuRIQvdj7t8N5IB0imRsAopef/RcFov2FfBNA9Mve
e+UgukDhUhWI/vZw5nwQbRxXtBJEa2lvvQmiZ06ovQ2i1xyqZ78ApH3LLThA
9Ar3owIgOkaRRxxE62k/1gfRDVsnmIPoovU3rEE0h/wTOxAdJMW7SeLsS8eL
C+u3gehHRjz7QPSeDkkwvdrncV4wkLZbW1EMor1ur58KogvaMmaBaLVmtwUg
umpe4goQvS1d9jyIPnkt4wqIXmadLxd1DmjvDg0FEL3jwDd1ED3N/6sWiG7h
seGsAdJqoTfA9IltV2fMPQ9097MbYBoAUufKBQ==
  "]],

Cell["\<\
For example, consider the 3D plots of the molecules Methanol (CH4O), \
PropargylAlcohol (C3H4O), 2,2Dichloroethanol (C2H4Cl2O):\
\>", "Text",
 CellChangeTimes->{{3.462474271459951*^9, 3.462474308133493*^9}, {
  3.4624743499969797`*^9, 3.4624744244302597`*^9}, {3.4624745535708427`*^9, 
  3.462474558787513*^9}, {3.4624745968446627`*^9, 3.4624746569628983`*^9}, {
  3.462822407852983*^9, 3.462822531409342*^9}, {3.462822615962604*^9, 
  3.462822658408485*^9}, {3.462822846954823*^9, 3.4628228705664597`*^9}, {
  3.462823164808833*^9, 3.462823243573999*^9}, {3.462823629661519*^9, 
  3.462823643923901*^9}, {3.4628239959925137`*^9, 3.462824001764563*^9}, {
  3.462824070164997*^9, 3.462824075016897*^9}, {3.4629732512234077`*^9, 
  3.462973258443243*^9}, {3.462973313764825*^9, 3.462973336803933*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"figure2MoleculeNames", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Methanol\>\"", ",", "\"\<PropargylAlcohol\>\"", ",", 
     "\"\<2,2Dichloroethanol\>\""}], "}"}]}], ";", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"figure2MoleculeNames", ",", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ChemicalData", "[", 
          RowBox[{"#1", ",", "\"\<MoleculePlot\>\""}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"ImageSize", "\[Rule]", "_"}], ")"}], "\[Rule]", 
            RowBox[{"(", 
             RowBox[{"ImageSize", "\[Rule]", "#2"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"ViewPoint", "\[Rule]", "_"}], ")"}], "\[Rule]", 
            RowBox[{"(", 
             RowBox[{"ViewPoint", "\[Rule]", "#3"}], ")"}]}]}], "}"}]}], 
        "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"figure2MoleculeNames", ",", 
         RowBox[{"{", 
          RowBox[{"140", ",", "230", ",", "200"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.06421676891586817"}], ",", 
             RowBox[{"-", "2.0823335988315447`"}], ",", 
             "0.5096498261239373"}], "}"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"0.1", 
              RowBox[{"(", 
               RowBox[{"#", "/", 
                RowBox[{"Max", "[", "#", "]"}]}], ")"}]}], "&"}], "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.02121098241563298"}], ",", 
              "0.20800620864309475`", ",", 
              RowBox[{"-", "3.03353681381293"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"1.9302149767769108`", ",", 
             RowBox[{"-", "1.3211596411584143`"}], ",", 
             RowBox[{"-", "1.5933635322801514`"}]}], "}"}]}], "}"}]}], 
        "}"}]}], "]"}]}], "}"}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.446515038560824*^9, 3.44651508910417*^9}, {
   3.446515950143896*^9, 3.4465159711144533`*^9}, {3.462972969743517*^9, 
   3.462972975005438*^9}, {3.4629733790785627`*^9, 3.4629733952067204`*^9}, {
   3.46317655935289*^9, 3.463176616502743*^9}, 3.466456326191371*^9, {
   3.46654377797754*^9, 3.4665438452114143`*^9}, {3.466543915056576*^9, 
   3.466543933829608*^9}, 3.466543974434051*^9, {3.466544029233639*^9, 
   3.466544107841298*^9}, {3.466544146196645*^9, 3.466544175852374*^9}, {
   3.466544272117384*^9, 3.466544283031233*^9}, {3.466544329089856*^9, 
   3.466544338592533*^9}, 3.4665443740219793`*^9, {3.4665444368145037`*^9, 
   3.4665445087052393`*^9}, {3.466544691610097*^9, 3.466544802381756*^9}, {
   3.4665488226485243`*^9, 3.46654897450002*^9}}],

Cell[BoxData[
 PanelBox[
  StyleBox[
   InterpretationBox["\<\"Updating data from Wolfram Research data server \
(\\!\\(\\*DynamicBox[ToBoxes[Refresh[Round[Function[Which[Or[Not[NumericQ[\
Slot[1]]], Less[Slot[1], 0]], 0, LessEqual[0, Slot[1], 1], Times[100, \
Slot[1]], True, \
100]][Last[PacletManager`Package`getTaskData[AsynchronousTaskObject[\\\"http:/\
/pacletserver.wolfram.com/Paclets/ChemicalData_Part19-11.0.40.paclet\\\", 7, \
21603079642457911877]]]]], Rule[UpdateInterval, 0.5`]], \
StandardForm]]\\)%).\"\>",
    StringForm["Updating data from Wolfram Research data server (`1`%).", 
     Dynamic[
      Refresh[
       Round[
        (Which[
         Or[
          Not[
           NumericQ[#]], # < 0], 0, 0 <= # <= 1, 100 #, True, 100]& )[
         Last[
          PacletManager`Package`getTaskData[
           AsynchronousTaskObject[
           "http://pacletserver.wolfram.com/Paclets/ChemicalData_Part19-11.0.\
40.paclet", 7, 21603079642457911877]]]]], UpdateInterval -> 0.5]]],
    Editable->False], "Button",
   StripOnInput->False,
   LineColor->GrayLevel[0.5],
   FrontFaceColor->GrayLevel[0.5],
   BackFaceColor->GrayLevel[0.5],
   GraphicsColor->GrayLevel[0.5],
   FontColor->GrayLevel[0.5]],
  Alignment->{Center, Center},
  Appearance->{
   "Default" -> 
    FrontEnd`FileName[{"Typeset", "PrintTemporary"}, "LightBlue.9.png"]},
  FrameMargins->{{12, 12}, {8, 12}}]], "PrintTemporary",
 CellChangeTimes->{3.689691343027483*^9}],

Cell["These molecules have the common part:", "Text",
 CellChangeTimes->{{3.446547225266162*^9, 3.446547237543935*^9}, {
  3.4624746635495443`*^9, 3.46247466507476*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {AbsoluteThickness[3], EdgeForm[None], Specularity[
    GrayLevel[1], 100], 
   GraphicsComplex3DBox[{{-92.41, -53.588, 4.1566}, {33.801, 6.0782, 
    14.675}, {22.349, 111.55, 28.577}, {
    89.496, -12.258, -74.833}, {-139.26, -16.331, -70.897}, \
{-29.304499999999997`, -23.7549, 
    9.4158}, {-115.835, -34.9595, -33.370200000000004`}, {
    59.915, -14.684900000000003`, 56.4975}, {28.075000000000003`, 58.8141, 
    21.626}, {61.6485, -3.089899999999999, -30.078999999999997`}}, {
     {RGBColor[0.65, 0.7, 0.7], SphereBox[3, 24.], SphereBox[4, 24.], 
      SphereBox[5, 24.]}, 
     {RGBColor[0.4, 0.4, 0.4], SphereBox[2, 34.]}, 
     {RGBColor[0.800498, 0.201504, 0.192061], SphereBox[1, 31.]}, 
     {RGBColor[0.65, 0.7, 0.7], CylinderBox[{7, 5}, 15.], 
      CylinderBox[{9, 3}, 15.], CylinderBox[{10, 4}, 15.]}, 
     {RGBColor[0.4, 0.4, 0.4], CylinderBox[{6, 2}, 15.], 
      CylinderBox[{2, 8}, 15.], CylinderBox[{2, 9}, 15.], 
      CylinderBox[{2, 10}, 15.]}, 
     {RGBColor[0.800498, 0.201504, 0.192061], CylinderBox[{1, 6}, 15.], 
      CylinderBox[{1, 7}, 15.]}}]},
  Boxed->False,
  ImageSize->116.25357478968111`,
  Lighting->"Neutral",
  ViewPoint->{-0.43809558207513716`, -3.116087826367928, 1.2442141774340332`},
  
  ViewVertical->{0.2018549781223174, 1.0365777377543792`, 
   0.8883358764994027}]], "Output",
 CellChangeTimes->{{3.446547201575687*^9, 3.446547206490426*^9}}],

Cell["\<\
and they also share an additional carbon-hydrogen connection. The \
similarities of the molecules can be also seen if we look at their bond \
tallies:\
\>", "Text",
 CellChangeTimes->{{3.446547384670455*^9, 3.446547436548376*^9}, {
  3.462474695315063*^9, 3.462474698290637*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Reverse", "[", 
      RowBox[{"Sort", "[", 
       RowBox[{"ChemicalData", "[", 
        RowBox[{"#", ",", "\"\<BondTally\>\""}], "]"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Methanol\>\"", ",", "\"\<PropargylAlcohol\>\"", ",", 
      "\"\<2,2Dichloroethanol\>\""}], "}"}]}], ",", 
   RowBox[{"TableSpacing", "->", 
    RowBox[{"{", 
     RowBox[{"3", ",", "2"}], "}"}]}], ",", 
   RowBox[{"TableDepth", "\[Rule]", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.446513242842648*^9, 3.446513300999201*^9}, {
  3.4465138761516657`*^9, 3.446513876664542*^9}, {3.446516105715637*^9, 
  3.446516125136057*^9}, {3.446516518315261*^9, 3.44651655698526*^9}, {
  3.44651659569278*^9, 3.446516627135421*^9}, {3.446517428283411*^9, 
  3.446517438469235*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"H\"\>", ",", "\<\"O\"\>"}], "}"}], ",", "1"}], "}"}], 
       ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"C\"\>", ",", "\<\"O\"\>"}], "}"}], ",", "1"}], "}"}], 
       ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"C\"\>", ",", "\<\"H\"\>"}], "}"}], ",", "1"}], "}"}], 
       ",", "3"}], "}"}], "\<\"\"\>", "\<\"\"\>"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"H\"\>", ",", "\<\"O\"\>"}], "}"}], ",", "1"}], "}"}], 
       ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"C\"\>", ",", "\<\"O\"\>"}], "}"}], ",", "1"}], "}"}], 
       ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"C\"\>", ",", "\<\"H\"\>"}], "}"}], ",", "1"}], "}"}], 
       ",", "3"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"C\"\>", ",", "\<\"C\"\>"}], "}"}], ",", "3"}], "}"}], 
       ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"C\"\>", ",", "\<\"C\"\>"}], "}"}], ",", "1"}], "}"}], 
       ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"H\"\>", ",", "\<\"O\"\>"}], "}"}], ",", "1"}], "}"}], 
       ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"C\"\>", ",", "\<\"O\"\>"}], "}"}], ",", "1"}], "}"}], 
       ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"C\"\>", ",", "\<\"H\"\>"}], "}"}], ",", "1"}], "}"}], 
       ",", "3"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"C\"\>", ",", "\<\"Cl\"\>"}], "}"}], ",", "1"}], "}"}], 
       ",", "2"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"C\"\>", ",", "\<\"C\"\>"}], "}"}], ",", "1"}], "}"}], 
       ",", "1"}], "}"}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[1.4]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[1.2]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableSpacing -> {3, 2}, TableDepth -> 2]]]], "Output",\

 CellChangeTimes->{{3.4465132669361258`*^9, 3.446513318818969*^9}, 
   3.446513877418274*^9, {3.446516115409506*^9, 3.4465161256526337`*^9}, 
   3.446516522170189*^9, 3.446516557706056*^9, {3.446516603197145*^9, 
   3.446516627606213*^9}, 3.446517439126584*^9, 3.64564257575106*^9}]
}, Open  ]],

Cell["\<\
We will say that PropargylAlcohol (C3H4O), 2,2Dichloroethanol (C2H4Cl2O) link \
to Methanol (CH4O) because all Methanol bonds can be found in \
PropargylAlcohol and in 2,2Dichloroethanol.\
\>", "Text",
 CellChangeTimes->{{3.462824473501202*^9, 3.462824577889934*^9}}],

Cell["\<\
We can define a similarity function that finds percentage of common bonds of \
two molecules with respect of the number of bond tallies of the first \
molecule:\
\>", "Text",
 CellChangeTimes->{{3.4465175008820257`*^9, 3.446517556117262*^9}, {
  3.446518672968478*^9, 3.446518682493074*^9}, {3.446518889005465*^9, 
  3.446518904621292*^9}, {3.446519605517353*^9, 3.446519629125524*^9}, {
  3.462476340581194*^9, 3.462476340866832*^9}, {3.462477038335306*^9, 
  3.462477038931355*^9}, {3.462477087212762*^9, 3.4624771190709047`*^9}, {
  3.462489006819047*^9, 3.462489043098526*^9}, {3.46282460158554*^9, 
  3.4628246031954327`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BondSimilarity", "[", 
    RowBox[{"cname1_String", ",", "cname2_String"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t1", "=", 
        RowBox[{"ChemicalData", "[", 
         RowBox[{"cname1", ",", "\"\<BondTally\>\""}], "]"}]}], ",", 
       RowBox[{"t2", "=", 
        RowBox[{"ChemicalData", "[", 
         RowBox[{"cname2", ",", "\"\<BondTally\>\""}], "]"}]}], ",", "t"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", "=", 
       RowBox[{"GatherBy", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t1", ",", "t2"}], "}"}], ",", "1"}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"t", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], ">", "1"}], ",", 
            RowBox[{"Min", "[", 
             RowBox[{"#", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], 
            ",", "0"}], "]"}], "&"}], ",", "t"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Total", "[", "t", "]"}], "/", 
       RowBox[{"Total", "[", 
        RowBox[{"t1", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.446518947350966*^9, 3.446518978959939*^9}, {
   3.446519153043489*^9, 3.446519156482747*^9}, 3.4624892423321037`*^9}],

Cell["This similarity function is not symmetric:", "Text",
 CellChangeTimes->{{3.462753831425084*^9, 3.462753861257938*^9}, {
  3.462824665678933*^9, 3.462824669177988*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChemicalData", "[", 
  RowBox[{"\"\<Methanol\>\"", ",", " ", "\"\<BondTally\>\""}], "]"}]], "Input",\

 CellChangeTimes->{3.464297649721182*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"C\"\>", ",", "\<\"H\"\>"}], "}"}], ",", "1"}], "}"}], 
     ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"C\"\>", ",", "\<\"O\"\>"}], "}"}], ",", "1"}], "}"}], 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"H\"\>", ",", "\<\"O\"\>"}], "}"}], ",", "1"}], "}"}], 
     ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.464297666625627*^9, 3.4670596605589523`*^9, 
  3.469313250427753*^9, 3.645642580983959*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BondSimilarity", "[", 
  RowBox[{"\"\<Methanol\>\"", ",", "\"\<AllylAlcohol\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.462753867321322*^9, 3.462753897722577*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.462753890538974*^9, 3.463010455144443*^9, 
  3.4633584780545464`*^9, 3.46705966132003*^9, 3.4693132609033957`*^9, 
  3.645642586642918*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BondSimilarity", "[", 
  RowBox[{"\"\<AllylAlcohol\>\"", ",", "\"\<Methanol\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.462753867321322*^9, 3.462753912058539*^9}}],

Cell[BoxData[
 FractionBox["5", "9"]], "Output",
 CellChangeTimes->{3.462753912374658*^9, 3.463010456043764*^9, 
  3.463358479283173*^9, 3.469313261073587*^9, 3.645642588333745*^9}]
}, Open  ]],

Cell[TextData[{
 "We can use ",
 StyleBox["BondSimilarity", "Program"],
 " in a distance function in functions like ",
 StyleBox["Nearest", "Program"],
 " or ",
 StyleBox["FindClusters", "Program"],
 ":"
}], "Text",
 CellChangeTimes->{{3.4465191602378683`*^9, 3.446519188237265*^9}, 
   3.446519585914337*^9, {3.46247717256199*^9, 3.462477180294697*^9}, {
   3.462656699859316*^9, 3.462656711955318*^9}, {3.462824677646695*^9, 
   3.462824680074565*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"methanolNeighbors", "=", 
  RowBox[{"Nearest", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ChemicalData", "[", "\"\<Alcohols\>\"", "]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
    "\"\<Methanol\>\"", ",", "6", ",", 
    RowBox[{"DistanceFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1", "-", 
        RowBox[{"BondSimilarity", "[", "##", "]"}]}], "&"}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.446519194908532*^9, 3.446519254927981*^9}, {
   3.446519316124261*^9, 3.44651932952135*^9}, {3.4465194367391148`*^9, 
   3.4465194604813757`*^9}, {3.462477209018773*^9, 3.462477216577326*^9}, {
   3.462477307508833*^9, 3.462477323271891*^9}, 3.462478538642087*^9, {
   3.4624830119563217`*^9, 3.462483030249115*^9}, {3.46248333719376*^9, 
   3.4624833472625732`*^9}, {3.462483628490834*^9, 3.462483628669826*^9}, {
   3.462489135216371*^9, 3.462489135437173*^9}, {3.4624898177127733`*^9, 
   3.46248982761229*^9}, {3.4624899446722517`*^9, 3.462489952935227*^9}, {
   3.462490128530511*^9, 3.462490129549774*^9}, {3.462490229247254*^9, 
   3.462490316684949*^9}, {3.4624927295594053`*^9, 3.462492736397943*^9}, {
   3.462656606056999*^9, 3.462656609302095*^9}, {3.4626566686898193`*^9, 
   3.462656733255452*^9}, {3.462656909256349*^9, 3.462656914744454*^9}, {
   3.462657001068911*^9, 3.462657007840495*^9}, {3.462657041931365*^9, 
   3.4626571205791903`*^9}, {3.467918903161614*^9, 3.4679189034946527`*^9}, 
   3.467920266463979*^9, {3.645642703968193*^9, 3.645642710025401*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Methanol\"\>", ",", "\<\"Ethanol\"\>", 
   ",", "\<\"PropargylAlcohol\"\>", ",", "\<\"AllylAlcohol\"\>", 
   ",", "\<\"1Propanol\"\>", ",", "\<\"2Propanol\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.462656736032578*^9, 3.46265691815058*^9, {3.462657006454002*^9, 
   3.462657056337229*^9}, {3.462657087640037*^9, 3.462657123635096*^9}, 
   3.4628170067190323`*^9, 3.4629719327793627`*^9, 3.462973898873097*^9, 
   3.462997365465961*^9, {3.463010450638544*^9, 3.463010461911132*^9}, 
   3.463358497961219*^9, 3.4670596850859613`*^9, {3.467918900207505*^9, 
   3.46791890681465*^9}, 3.467919820285616*^9, 3.467920269347213*^9, 
   3.469313313229257*^9, 3.46982432608666*^9, 3.472333248987569*^9, 
   3.645642598494274*^9, 3.645642718447815*^9}]
}, Open  ]],

Cell[TextData[{
 "Let us construct a graph based on how similar these six molecules are to \
each other. More specifically, a molecule would connect to another if the \
former has at least ",
 Cell[BoxData[
  FormBox["85", TraditionalForm]]],
 "% of the bonds of the later. The following code computes the similarity for \
each pair of molecules using ",
 StyleBox["Outer", "Program"],
 ":"
}], "Text",
 CellChangeTimes->{{3.4626576932257433`*^9, 3.4626578282089*^9}, {
   3.462661992935339*^9, 3.46266199493478*^9}, {3.46266203819459*^9, 
   3.4626620798462057`*^9}, {3.462662111329958*^9, 3.462662122778808*^9}, 
   3.462662165993548*^9, {3.462663634713367*^9, 3.4626636459911118`*^9}, {
   3.462755064451136*^9, 3.4627550715135527`*^9}, {3.4628247068375*^9, 
   3.4628247080164013`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"Outer", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "\[NotEqual]", "#2"}], "&&", 
         RowBox[{
          RowBox[{"BondSimilarity", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], ">=", "0.85"}]}], ",", 
        RowBox[{"#2", "\[Rule]", "#1"}], ",", "Null"}], "]"}], "&"}], ",", 
     "methanolNeighbors", ",", "methanolNeighbors"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"rules", ",", "1"}], "]"}], ",", "Null"}], "]"}]}], ";"}], "\n", 
 RowBox[{"GraphPlot", "[", 
  RowBox[{"rules", ",", 
   RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", 
   RowBox[{"VertexLabeling", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.462477499836434*^9, 3.462477645004376*^9}, {
   3.46247768127007*^9, 3.462477706085121*^9}, {3.4624831546993217`*^9, 
   3.4624831670659313`*^9}, {3.462483217788911*^9, 3.462483220343244*^9}, {
   3.462483251492422*^9, 3.4624832570965033`*^9}, {3.4624836171842527`*^9, 
   3.462483617478259*^9}, {3.462489056088006*^9, 3.462489122797963*^9}, {
   3.4624891903659697`*^9, 3.462489190775127*^9}, {3.462489251750237*^9, 
   3.462489264918539*^9}, {3.462489295472949*^9, 3.462489296646193*^9}, {
   3.462489906367814*^9, 3.462489917453909*^9}, {3.4624899710269613`*^9, 
   3.462489990557666*^9}, 3.46249068165779*^9, {3.462492767559925*^9, 
   3.462492768415805*^9}, {3.462492959800376*^9, 3.462492969960431*^9}, {
   3.462493000128035*^9, 3.462493045320302*^9}, {3.462493132496602*^9, 
   3.462493133854639*^9}, {3.462493258591243*^9, 3.4624933253012123`*^9}, {
   3.462493363703146*^9, 3.462493523328047*^9}, {3.4624935649978724`*^9, 
   3.462493622249537*^9}, 3.462493664688175*^9, {3.462493759371806*^9, 
   3.4624937655418243`*^9}, {3.462496514414342*^9, 3.462496529325223*^9}, {
   3.462496571553021*^9, 3.462496573935259*^9}, 3.462496617210816*^9, {
   3.46249668489744*^9, 3.4624967159987783`*^9}, {3.462496795193961*^9, 
   3.462496796670764*^9}, {3.46265694512355*^9, 3.462656948979602*^9}, {
   3.462657130955701*^9, 3.462657155636394*^9}, {3.462657243736792*^9, 
   3.462657244032722*^9}, {3.462657440173531*^9, 3.462657441468525*^9}, {
   3.462657837482297*^9, 3.462657837875965*^9}, {3.4626578791976557`*^9, 
   3.4626579845817947`*^9}, {3.462661201413855*^9, 3.462661211786454*^9}, {
   3.462661976286438*^9, 3.462661986172861*^9}, {3.462663299783944*^9, 
   3.46266330118715*^9}, 3.467919374517654*^9, {3.467920270832252*^9, 
   3.467920274934*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[CompressedData["
1:eJw9UQ0w23cARc3GWATpfJyydopWw6J1vuod53rUijJdTaPRrUM6VaMYS0jX
VrvcbFPtfMw6KuajaKcflOqGqmI+6mOqrUkkleCf/BLuhqouu9vt3b179+7e
u3t3750jyRFH9XR0dPZo+a/yXi4melmOYShmpYn7Qg2d/9Ao8A485yNBUKbr
H/SgUeT294YXSTNxYM285PDVJeS933/sVqsY6afmi8K6lP/3SsZr4ja5q6Bf
5V6bM62Gh8FyXz7nKYomz5sUnVCjJKsywW7/FPhpjbW7g9V4mtuykdhOY+/m
gYzvbdW4LedetjEV47GH0dZyiqBMuBzXvS7GL+sLbdktBJ2mNkKRQoJ2fsPF
9wQE2XaOmclDM8iMYhwYDSSwDtsy8ORXKT45qJxL1yewT73hHnOKwKnFvdKi
XY76zCkLqAk8Dxc8EuySQ5rnJa9nq0H/mBr3F83isp9e45kHauSkNs4JTGbx
6fYobxFTg6av3MpTjj9HuOmlXQsFGmxL6JsI6JFh7VaBm8+SBhyuT52zjQwu
TrE1qRGLsL+zh30oXgrn1QL/vZMa/B1a1xwzLAHtWbz11lgNdthw+Kb2Mwjy
2ak4OaPGxXubpQkZM/go78m7HK4aJy/V5gX/OQP5zcJOo0WCSQNZdCGk+CB1
g2spj6DO4Ei10zUplo/xPD2MCLyiCx1nnGSIqF631mGpwImUvCyr0e6htwgc
piXQCRG6ZiwtwMzg6D22ngTqShddIx6FytkGy1xnMTaWD68FmyjBzLIVDkVN
o/o7msJQpAT8VfLNtL+QlpvPsg5Uobh+/oUB/xnWSxdXg+ZUkJut0PqWn0Da
729xPYTAMbTPRZEzCX0H39YfRASu7LYOUymF9s9lgsfCu7B83puedpVCFivw
bHN7B+6Xuk7c1+7YZO2YUN/eDd3oovPmByn4bUjhfN3VC+tdZw4l+lD42Vue
bzw4gMXVC/uGHCnoDvgNZhwfhkLSIAi1pRAq4jEy0kcgSLELnLWhwPA4bS7m
j+HbleFVryAKhiP7M68YK9BX5tlGhVGoYzmhzXQO3XGJZnc4FDy7igPiLebR
07yjpTiLwjfbJ6wi316AM3P+wukyCqNp+kVMK23uBPNa8kMKe5wrZNVWSsTM
WwXvW6ew8pOqOMVShZviW33GvkoM9phwf9T+ouEtlDYYEkyEMsw6Xifgecl+
/9KBgItx1n66ClVTLPqoL4HgDHs1kq6EYS7fsz6MwPvNkLanNApr9DfC9GIJ
4nbXu/maLIDWmDs+EE9gKHvwWafhPBg+qW20JIIjX1Q/7HxtDj2L3jGdWr/u
JurN11Wgo1H8qvhDAj3NtubbCWO4wmba/RZJcJfF33aWM4KqF4ylaO1vFbTS
LW7Rw3AYarLn+hEoBb5z16oGkMaIalpyIXh0SKgOuNyLpDR3h1cbCd4SWrRG
l3XjdlL2dfsVFQJuTCk8KjoQmzHFjGtVIXyErbcz9i7+AZa2Kfo=
    "], {
     {RGBColor[0.5, 0., 0.], Arrowheads[{{0.0388972198379456, 0.7}}], 
      ArrowBox[{1, 2}], ArrowBox[{1, 3}], 
      ArrowBox[{1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
       22, 4}], ArrowBox[{3, 2}], ArrowBox[{4, 2}], 
      ArrowBox[{4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
        38, 1}], ArrowBox[{4, 3}], ArrowBox[{5, 2}], ArrowBox[{5, 1}], 
      ArrowBox[{5, 3}], ArrowBox[{5, 4}], 
      ArrowBox[{5, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 6}], ArrowBox[{6, 2}], ArrowBox[{6, 1}], ArrowBox[{6, 3}], 
      ArrowBox[{6, 4}], 
      ArrowBox[{6, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
        70, 5}]}, {InsetBox[
       FrameBox["\<\"Ethanol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 1], InsetBox[
       FrameBox["\<\"Methanol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 2], InsetBox[
       FrameBox["\<\"PropargylAlcohol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 3], InsetBox[
       FrameBox["\<\"AllylAlcohol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 4], InsetBox[
       FrameBox["\<\"1Propanol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 5], InsetBox[
       FrameBox["\<\"2Propanol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 6]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{0.32960353228551026`, 1.1238810568081483`}, {
     0., 0.5697671253765771}, {0.3168987754596668, 0.006077380163946988}, {
     1.2920833605455946`, 0.5541641335897943}, {0.9614637362211187, 0.}, {
     0.9749900729645617, 1.117309250689119}}]& ],
  AspectRatio->Automatic,
  FrameTicks->None,
  ImageSize->{554.6666666666664, Automatic},
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{
  3.462483369252718*^9, {3.462483561333962*^9, 3.462483576063143*^9}, {
   3.462483620563819*^9, 3.4624836375926933`*^9}, 3.462484097687015*^9, {
   3.4624841385124607`*^9, 3.4624841885701942`*^9}, {3.462484220442198*^9, 
   3.4624842383460712`*^9}, {3.462489066044838*^9, 3.462489125431631*^9}, {
   3.462489184205449*^9, 3.462489195191078*^9}, {3.462489259098153*^9, 
   3.462489362397201*^9}, {3.46248983814312*^9, 3.462489860100532*^9}, {
   3.462489899361619*^9, 3.46248992066475*^9}, {3.4624899657941923`*^9, 
   3.4624899938612137`*^9}, 3.4624901422890587`*^9, {3.462490671452532*^9, 
   3.4624906848708763`*^9}, {3.462492748864565*^9, 3.462492772168396*^9}, {
   3.4624929641412687`*^9, 3.462493003596917*^9}, 3.462493050648546*^9, 
   3.4624932382904463`*^9, 3.462493278540221*^9, {3.462493499451178*^9, 
   3.462493527606756*^9}, 3.462493576369678*^9, 3.462493635497785*^9, 
   3.462493671987466*^9, {3.4624964353109407`*^9, 3.462496459012052*^9}, {
   3.462496535813388*^9, 3.4624965768575897`*^9}, 3.462496619944845*^9, {
   3.46249668901663*^9, 3.462496719179936*^9}, {3.462496799361562*^9, 
   3.462496813711644*^9}, 3.46265695197688*^9, {3.462657108104261*^9, 
   3.462657160760105*^9}, 3.462657247098948*^9, 3.462657445437818*^9, 
   3.462657995192768*^9, 3.462661215748911*^9, 3.462661999155978*^9, 
   3.462663301860691*^9, 3.462817046692724*^9, 3.462971885635459*^9, 
   3.4629719338267307`*^9, 3.462973899414175*^9, 3.462997365677397*^9, 
   3.463000614101001*^9, 3.463010462152123*^9, 3.463358498172316*^9, 
   3.467059685926116*^9, 3.4676813391143017`*^9, 3.467918907723452*^9, 
   3.467919376462223*^9, 3.4679198212169333`*^9, 3.467920275615779*^9, 
   3.469313261393618*^9, 3.469824326453196*^9, 3.472333249904294*^9, 
   3.645642722877503*^9}]
}, Open  ]],

Cell["\<\
[May be an exercise] We can also find the chemical formulas of these \
molecules and use them as labels in the graph:\
\>", "Text",
 CellChangeTimes->{{3.462657568810754*^9, 3.462657598292295*^9}, {
  3.462662016424467*^9, 3.462662029638484*^9}, {3.462974041875783*^9, 
  3.462974054979151*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"GraphPlot", "[", 
     RowBox[{"rules", ",", 
      RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", 
      RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], "/.", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"ChemicalData", "[", 
         RowBox[{"#", ",", "property"}], "]"}]}], "&"}], ",", 
      "methanolNeighbors"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "property", ",", "\"\<CompoundFormulaString\>\"", ",", 
       "\"\<ChemicalData property:\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<CompoundFormulaString\>\"", ",", "\"\<CHStructureDiagram\>\"", 
       ",", "\"\<StandardName\>\"", ",", "\"\<SMILES\>\""}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4624776517314672`*^9, 3.462477656241748*^9}, {
   3.462477721992401*^9, 3.4624777327755613`*^9}, {3.462477809757263*^9, 
   3.4624778528751163`*^9}, {3.462477987357498*^9, 3.462477988052018*^9}, 
   3.462478233003233*^9, {3.462484217815237*^9, 3.4624842367413073`*^9}, {
   3.462489327519617*^9, 3.4624893333247023`*^9}, 3.4624929934726048`*^9, {
   3.462657992390643*^9, 3.462657994756731*^9}, {3.4626612181767883`*^9, 
   3.4626613142899446`*^9}, {3.462663035076174*^9, 3.462663170788024*^9}, {
   3.4626632169102793`*^9, 3.4626632241621933`*^9}, {3.462663257635345*^9, 
   3.46266325830744*^9}, {3.462663328948061*^9, 3.462663376447365*^9}, {
   3.462663415957656*^9, 3.462663424255699*^9}, {3.4626634653092947`*^9, 
   3.462663465667832*^9}, {3.462663557629939*^9, 3.46266357227458*^9}, {
   3.462663682198677*^9, 3.462663689044076*^9}, {3.4627533154257708`*^9, 
   3.462753345407365*^9}, {3.462973840389309*^9, 3.462973847063096*^9}, {
   3.463358680527014*^9, 3.463358683656563*^9}, {3.463358746578751*^9, 
   3.463358749696664*^9}, {3.4633588597007513`*^9, 3.4633588625311403`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`property$$ = "CompoundFormulaString", 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`property$$], "CompoundFormulaString", 
       "ChemicalData property:"}, {
      "CompoundFormulaString", "CHStructureDiagram", "StandardName", 
       "SMILES"}}}, Typeset`size$$ = {900., {386., 397.}}, Typeset`update$$ = 
    0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`property$587708$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`property$$ = "CompoundFormulaString"}, 
      "ControllerVariables" :> {
        Hold[$CellContext`property$$, $CellContext`property$587708$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        GraphPlot[$CellContext`rules, DirectedEdges -> True, VertexLabeling -> 
         True, ImageSize -> 600], 
        Map[# -> 
         ChemicalData[#, $CellContext`property$$]& , \
$CellContext`methanolNeighbors]], 
      "Specifications" :> {{{$CellContext`property$$, "CompoundFormulaString",
           "ChemicalData property:"}, {
         "CompoundFormulaString", "CHStructureDiagram", "StandardName", 
          "SMILES"}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{964., {451., 459.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`rules = {
        "Ethanol" -> "Methanol", "PropargylAlcohol" -> "Methanol", 
         "AllylAlcohol" -> "Methanol", "1Propanol" -> "Methanol", "2Propanol" -> 
         "Methanol", "AllylAlcohol" -> "Ethanol", "1Propanol" -> "Ethanol", 
         "2Propanol" -> "Ethanol", "Ethanol" -> "PropargylAlcohol", 
         "AllylAlcohol" -> "PropargylAlcohol", "1Propanol" -> 
         "PropargylAlcohol", "2Propanol" -> "PropargylAlcohol", "Ethanol" -> 
         "AllylAlcohol", "1Propanol" -> "AllylAlcohol", "2Propanol" -> 
         "AllylAlcohol", "2Propanol" -> "1Propanol", "1Propanol" -> 
         "2Propanol"}, $CellContext`methanolNeighbors = {
        "Methanol", "Ethanol", "PropargylAlcohol", "AllylAlcohol", 
         "1Propanol", "2Propanol"}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.645642817551485*^9}]
}, Open  ]],

Cell[TextData[{
 "From this graph we can see that Methanol (",
 Cell[BoxData[
  FormBox["CH4O", TraditionalForm]]],
 ") is the most popular molecule, since all other molecules link to it. Next \
in popularity is probably PropargylAlcohol (",
 Cell[BoxData[
  FormBox["C3H4O", TraditionalForm]]],
 "), because three molecules link to it, and PropargylAlcohol links only to \
one molecule. The least popular molecule is 1Propanol (",
 Cell[BoxData[
  FormBox["C3H8O", TraditionalForm]]],
 "), no molecule links to it, and 1Propanol links to four molecules."
}], "Text",
 CellChangeTimes->{{3.462665030692514*^9, 3.46266512931142*^9}, {
   3.46274123989186*^9, 3.462741241375079*^9}, 3.466545478342904*^9}],

Cell["\<\
Based on these observations let us assign prestige to all these molecules:\
\>", "Text",
 CellChangeTimes->{{3.462741251494293*^9, 3.4627412750788813`*^9}, 
   3.462741872024509*^9, {3.462744654537005*^9, 3.46274467919121*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"prestigeRules", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{"methanolNeighbors", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"6", ",", "3", ",", "3", ",", "5", ",", "4", ",", "0"}], "}"}]}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.462742174117681*^9, 3.462742249088635*^9}, {
  3.462743928208784*^9, 3.462743943609096*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"Methanol\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"PolyvinylAlcohol\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"Ethanol\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"PropargylAlcohol\"\>", "\[Rule]", "5"}], ",", 
   RowBox[{"\<\"AllylAlcohol\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"1Propanol\"\>", "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.462742201323505*^9, 3.462744646659309*^9, 
  3.4628170723115387`*^9, 3.4629719380791893`*^9, 3.4629739889548073`*^9, 
  3.46299736588068*^9, 3.4630104710129347`*^9, 3.463359056048853*^9, 
  3.467059690414722*^9, 3.4693133134068413`*^9, 3.469824326643272*^9, 
  3.4702513051873713`*^9, 3.472333250004125*^9}]
}, Open  ]],

Cell["\<\
We can make the following data structure that is a list of the prestige, \
formula, and name of each compound.\
\>", "Text",
 CellChangeTimes->{{3.462744688425211*^9, 3.462744696606917*^9}, {
  3.462745172522193*^9, 3.462745190854982*^9}, {3.462970921246736*^9, 
  3.462970999563455*^9}, {3.462972045716487*^9, 3.462972157114554*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"searchData", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "/.", "prestigeRules"}], ",", 
       RowBox[{"ChemicalData", "[", 
        RowBox[{"#", ",", "\"\<CompoundFormulaString\>\""}], "]"}], ",", 
       "#"}], "}"}], "&"}], ",", "methanolNeighbors"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.462971913175907*^9, 3.462971943174749*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", "\<\"CH4O\"\>", ",", "\<\"Methanol\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "\<\"C2H4O\"\>", ",", "\<\"PolyvinylAlcohol\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "\<\"C2H6O\"\>", ",", "\<\"Ethanol\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "\<\"C3H4O\"\>", ",", "\<\"PropargylAlcohol\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "\<\"C3H6O\"\>", ",", "\<\"AllylAlcohol\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\<\"C3H8O\"\>", ",", "\<\"1Propanol\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.462971943799526*^9, 3.462973990388755*^9, 
  3.462997366067606*^9, 3.463010472245534*^9, 3.463359057451317*^9, 
  3.4670596905295553`*^9, 3.469313313456513*^9, 3.469824326793214*^9, 
  3.47025130781842*^9, 3.4723332501986017`*^9}]
}, Open  ]],

Cell["\<\
Based on that structure, let us define a search function that matches a \
search string with the compound formulas and compound names, and sorts the \
matches according to the prestige of each compound.\
\>", "Text",
 CellChangeTimes->{{3.4629713362727747`*^9, 3.4629713476105022`*^9}, {
  3.4629713784108763`*^9, 3.462971540250431*^9}, {3.462972235412149*^9, 
  3.462972265651247*^9}, {3.466545572917*^9, 3.466545583840362*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MoleculeSearch", "[", 
    RowBox[{"input_String", ",", 
     RowBox[{"searchData_:", "searchData"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "t", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringLength", "[", "input", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"t", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"searchData", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{"input", "~~", "___"}]}], "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{"input", "~~", "___"}]}], "]"}]}], "&"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"SortBy", "[", 
       RowBox[{"t", ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
          "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         "&"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4627447052726793`*^9, 3.4627447989851923`*^9}, {
  3.462745218194889*^9, 3.4627452342980137`*^9}, {3.4627453457168207`*^9, 
  3.4627453965214767`*^9}, {3.462745476469404*^9, 3.462745508005991*^9}, {
  3.462745607527678*^9, 3.462745717383819*^9}, {3.462745971750869*^9, 
  3.462745971981168*^9}, {3.4629715903737698`*^9, 3.4629716103566933`*^9}, {
  3.4629719107840242`*^9, 3.4629719162879057`*^9}}],

Cell["Below is a table the shows the results of several searches.", "Text",
 CellChangeTimes->{{3.462747289627561*^9, 3.462747308423802*^9}, {
  3.4627504029152327`*^9, 3.462750437671569*^9}, {3.462750588648191*^9, 
  3.462750656448238*^9}, {3.462750692548884*^9, 3.4627507317201233`*^9}, {
  3.462971544220628*^9, 3.462971545426467*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{"TableForm", "@", 
           RowBox[{"MoleculeSearch", "[", "#", "]"}]}]}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<C\>\"", ",", "\"\<C2\>\"", ",", "\"\<C3\>\"", ",", "\"\<P\>\""}],
         "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Blue"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<search\\nstring\>\"", ",", "\"\<result\>\""}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4627457286207037`*^9, 3.4627458917390947`*^9}, {
   3.462745997939698*^9, 3.462745999419142*^9}, 3.462746163086915*^9, {
   3.462746504823078*^9, 3.4627465054187117`*^9}, {3.462746800556387*^9, 
   3.4627468834833937`*^9}, {3.462746967943192*^9, 3.462746986451784*^9}, {
   3.462747197594562*^9, 3.4627472079718933`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"search\\nstring\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"result\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]]},
    {"\<\"C\"\>", 
     TagBox[GridBox[{
        {"6", "\<\"CH4O\"\>", "\<\"Methanol\"\>"},
        {"5", "\<\"C3H4O\"\>", "\<\"PropargylAlcohol\"\>"},
        {"4", "\<\"C3H6O\"\>", "\<\"AllylAlcohol\"\>"},
        {"3", "\<\"C2H4O\"\>", "\<\"PolyvinylAlcohol\"\>"},
        {"3", "\<\"C2H6O\"\>", "\<\"Ethanol\"\>"},
        {"0", "\<\"C3H8O\"\>", "\<\"1Propanol\"\>"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$]]]},
    {"\<\"C2\"\>", 
     TagBox[GridBox[{
        {"3", "\<\"C2H4O\"\>", "\<\"PolyvinylAlcohol\"\>"},
        {"3", "\<\"C2H6O\"\>", "\<\"Ethanol\"\>"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$]]]},
    {"\<\"C3\"\>", 
     TagBox[GridBox[{
        {"5", "\<\"C3H4O\"\>", "\<\"PropargylAlcohol\"\>"},
        {"4", "\<\"C3H6O\"\>", "\<\"AllylAlcohol\"\>"},
        {"0", "\<\"C3H8O\"\>", "\<\"1Propanol\"\>"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$]]]},
    {"\<\"P\"\>", 
     TagBox[GridBox[{
        {"5", "\<\"C3H4O\"\>", "\<\"PropargylAlcohol\"\>"},
        {"3", "\<\"C2H4O\"\>", "\<\"PolyvinylAlcohol\"\>"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$]]]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.470251259372404*^9, 3.470251310226611*^9}]
}, Open  ]],

Cell["\<\
There are several questions to be answered. First, most importantly, for a \
large number of molecules can we calculate the molecule prestige \
automatically? [Why did we use non-symmetric similarity function?] There are \
many other ways to quantify similarities between molecules, so what other \
suitable ways exist to link molecules? Should the prestige of the molecules \
be the same for all searches, or should they be determined dynamically for \
each search? What is the best similarity threshold for the molecules and how \
to determine it?\
\>", "Text",
 CellChangeTimes->{{3.4627507416522837`*^9, 3.462750754127819*^9}, {
   3.4627508322715816`*^9, 3.462750836215761*^9}, {3.462750885376383*^9, 
   3.462750919744214*^9}, {3.46275099434016*^9, 3.4627510096718903`*^9}, {
   3.4627512185225782`*^9, 3.462751337079958*^9}, {3.462751600592054*^9, 
   3.462751629503912*^9}, {3.462751823128524*^9, 3.462751878208194*^9}, {
   3.4627520509778757`*^9, 3.4627522079360657`*^9}, {3.462752284146778*^9, 
   3.462752310592339*^9}, {3.462752643283803*^9, 3.46275265179263*^9}, {
   3.462754136348446*^9, 3.462754160264832*^9}, 3.462824786483279*^9, {
   3.462824845463182*^9, 3.462824850246307*^9}, {3.46982491295639*^9, 
   3.469824980030045*^9}}],

Cell[CellGroupData[{

Cell["Experimental Code", "Subsubsection",
 CellChangeTimes->{{3.462476969599051*^9, 3.462476986405488*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"t2", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.462476944798551*^9, 3.462476950881119*^9}, {
  3.462477021183329*^9, 3.462477021228343*^9}}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.46247694855233*^9, 3.46247702171111*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cname1", "=", "\"\<Methanol\>\""}], ";", 
  RowBox[{"cname2", "=", "\"\<PropargylAlcohol\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"t1", "=", 
  RowBox[{"ChemicalData", "[", 
   RowBox[{"cname1", ",", "\"\<BondTally\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"t2", "=", 
  RowBox[{"ChemicalData", "[", 
   RowBox[{"cname2", ",", "\"\<BondTally\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GatherBy", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t1", ",", " ", "t2"}], "}"}], ",", " ", "1"}], "]"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "&"}]}], "]"}], "//", 
  "ColumnForm"}]}], "Input",
 CellChangeTimes->{{3.462476467611691*^9, 3.46247656749117*^9}, {
  3.462476956531363*^9, 3.462476959170535*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"C\"\>", ",", "\<\"H\"\>"}], "}"}], ",", "1"}], "}"}], 
     ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"C\"\>", ",", "\<\"O\"\>"}], "}"}], ",", "1"}], "}"}], 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"H\"\>", ",", "\<\"O\"\>"}], "}"}], ",", "1"}], "}"}], 
     ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4624765059718847`*^9, 3.462476568301399*^9}, 
   3.462476803357736*^9, 3.462476959543273*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"C\"\>", ",", "\<\"C\"\>"}], "}"}], ",", "3"}], "}"}], 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"C\"\>", ",", "\<\"C\"\>"}], "}"}], ",", "1"}], "}"}], 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"C\"\>", ",", "\<\"H\"\>"}], "}"}], ",", "1"}], "}"}], 
     ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"C\"\>", ",", "\<\"O\"\>"}], "}"}], ",", "1"}], "}"}], 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"H\"\>", ",", "\<\"O\"\>"}], "}"}], ",", "1"}], "}"}], 
     ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4624765059718847`*^9, 3.462476568301399*^9}, 
   3.462476803357736*^9, 3.462476959546776*^9}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"C\"\>", ",", "\<\"H\"\>"}], "}"}], ",", "1"}], "}"}],
          ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"C\"\>", ",", "\<\"H\"\>"}], "}"}], ",", "1"}], "}"}],
          ",", "3"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"C\"\>", ",", "\<\"O\"\>"}], "}"}], ",", "1"}], "}"}],
          ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"C\"\>", ",", "\<\"O\"\>"}], "}"}], ",", "1"}], "}"}],
          ",", "1"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"H\"\>", ",", "\<\"O\"\>"}], "}"}], ",", "1"}], "}"}],
          ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"H\"\>", ",", "\<\"O\"\>"}], "}"}], ",", "1"}], "}"}],
          ",", "1"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"C\"\>", ",", "\<\"C\"\>"}], "}"}], ",", "3"}], "}"}], 
        ",", "1"}], "}"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"C\"\>", ",", "\<\"C\"\>"}], "}"}], ",", "1"}], "}"}], 
        ",", "1"}], "}"}], "}"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{{{{{"C", "H"}, 1}, 3}, {{{"C", "H"}, 1}, 3}}, {{{{"C", "O"}, 1},
       1}, {{{"C", "O"}, 1}, 1}}, {{{{"H", "O"}, 1}, 1}, {{{"H", "O"}, 1}, 
      1}}, {{{{"C", "C"}, 3}, 1}}, {{{{"C", "C"}, 1}, 1}}}],
  Editable->False]], "Output",
 CellChangeTimes->{{3.4624765059718847`*^9, 3.462476568301399*^9}, 
   3.462476803357736*^9, 3.462476959552762*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BondSimilarity", "[", 
  RowBox[{"cname1", ",", "cname2"}], "]"}]], "Input",
 CellChangeTimes->{{3.462476884105112*^9, 3.462476891694515*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.4624768921673403`*^9, 3.462476904702895*^9}, 
   3.462476938134347*^9}]
}, Closed]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cnames", "=", 
   RowBox[{"ChemicalData", "[", "\"\<Alcohols\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ds", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"BondSimilarity", "[", 
        RowBox[{"\"\<Methanol\>\"", ",", "#"}], "]"}]}], "}"}], "&"}], "/@", 
    "cnames"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.446519194908532*^9, 3.446519254927981*^9}, {
   3.446519316124261*^9, 3.44651932952135*^9}, {3.4465194367391148`*^9, 
   3.4465194604813757`*^9}, {3.462477209018773*^9, 3.462477216577326*^9}, {
   3.462477307508833*^9, 3.462477323271891*^9}, 3.462478538642087*^9, {
   3.4624830119563217`*^9, 3.462483030249115*^9}, {3.46248333719376*^9, 
   3.4624833472625732`*^9}, {3.462483628490834*^9, 3.462483628669826*^9}, {
   3.462489135216371*^9, 3.462489135437173*^9}, {3.4624898177127733`*^9, 
   3.46248982761229*^9}, {3.4624899446722517`*^9, 3.462489952935227*^9}, {
   3.462490128530511*^9, 3.462490129549774*^9}, {3.462490229247254*^9, 
   3.462490316684949*^9}, {3.4624927295594053`*^9, 3.462492736397943*^9}, {
   3.462656606056999*^9, 3.462656609302095*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nneighbors", "=", 
  RowBox[{"First", "/@", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"SortBy", "[", 
      RowBox[{"ds", ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "*", 
            "1000"}], "+", 
           RowBox[{"(", 
            RowBox[{"1000", "-", 
             RowBox[{"StringLength", "[", 
              RowBox[{"ChemicalData", "[", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", "\"\<CompoundFormulaString\>\""}], "]"}], "]"}]}], 
            ")"}]}], ")"}]}], "&"}]}], "]"}], ",", "10"}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.446519194908532*^9, 3.446519254927981*^9}, {
   3.446519316124261*^9, 3.44651932952135*^9}, {3.4465194367391148`*^9, 
   3.4465194604813757`*^9}, {3.462477209018773*^9, 3.462477216577326*^9}, {
   3.462477307508833*^9, 3.462477323271891*^9}, 3.462478538642087*^9, {
   3.4624830119563217`*^9, 3.462483030249115*^9}, {3.46248333719376*^9, 
   3.4624833472625732`*^9}, {3.462483628490834*^9, 3.462483628669826*^9}, {
   3.462489135216371*^9, 3.462489135437173*^9}, {3.4624898177127733`*^9, 
   3.46248982761229*^9}, {3.4624899446722517`*^9, 3.462489952935227*^9}, {
   3.462490128530511*^9, 3.462490129549774*^9}, {3.462490229247254*^9, 
   3.462490328109187*^9}, {3.462490373096183*^9, 3.462490479231745*^9}, {
   3.462490558146366*^9, 3.462490606727845*^9}, {3.462490663049762*^9, 
   3.4624906643822727`*^9}, {3.46249282811101*^9, 3.462492837765736*^9}, {
   3.462496444488867*^9, 3.4624964446143017`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Methanol\"\>", ",", "\<\"1Propanol\"\>", 
   ",", "\<\"2EthynylbenzylAlcohol\"\>", ",", "\<\"2Propanol\"\>", 
   ",", "\<\"4EthynylbenzylAlcohol\"\>", ",", "\<\"AllylAlcohol\"\>", 
   ",", "\<\"BenzylAlcohol\"\>", ",", "\<\"CrotylAlcohol\"\>", 
   ",", "\<\"Cyclobutanol\"\>", ",", "\<\"Cyclopropanemethanol\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.462477324619952*^9, 3.46247733274727*^9}, 
   3.462478539592062*^9, {3.462483016695888*^9, 3.4624830367433653`*^9}, 
   3.462483080871723*^9, 3.462483350803068*^9, 3.462483631724472*^9, 
   3.462489050854252*^9, {3.4624891387183657`*^9, 3.4624891648321657`*^9}, 
   3.4624892473054523`*^9, {3.4624898201435223`*^9, 3.46248985076399*^9}, 
   3.4624899561194344`*^9, 3.462490039301453*^9, 3.4624901327105722`*^9, {
   3.462490321518359*^9, 3.462490328613422*^9}, {3.4624904241312103`*^9, 
   3.462490447916709*^9}, 3.462490482455783*^9, {3.462490588521899*^9, 
   3.4624906077624474`*^9}, 3.462490665367058*^9, 3.4624927405817327`*^9, {
   3.4624928296237803`*^9, 3.462492838941372*^9}, 3.4624931692771606`*^9, 
   3.462496445388953*^9, 3.46249654534138*^9}]
}, Closed]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nnformulas", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ChemicalData", "[", 
       RowBox[{"#", ",", "\"\<CompoundFormulaString\>\""}], "]"}], "&"}], ",",
      "nneighbors"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"nneighbors", ",", "nnformulas"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"Union", "[", 
    RowBox[{"t", ",", 
     RowBox[{"SameTest", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
          "\[Equal]", 
         RowBox[{
         "#2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        "&"}], ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rcnames", "=", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"t", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"StringLength", "[", 
       RowBox[{"ChemicalData", "[", 
        RowBox[{"#", ",", "\"\<CompoundFormulaString\>\""}], "]"}], "]"}], 
      "&"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4624774629318237`*^9, 3.4624774888757563`*^9}, {
   3.46247774854646*^9, 3.462477748731645*^9}, {3.462478551838736*^9, 
   3.4624785631179028`*^9}, 3.462483063679255*^9, {3.4624833548077707`*^9, 
   3.4624833640443773`*^9}, {3.462483429277308*^9, 3.462483572006872*^9}, {
   3.462489140678947*^9, 3.4624891773378563`*^9}, {3.462489854281019*^9, 
   3.462489894575087*^9}, {3.4624931662131567`*^9, 3.462493211696453*^9}}],

Cell[CellGroupData[{

Cell[BoxData["rcnames"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Methanol\"\>", ",", "\<\"1Propanol\"\>", 
   ",", "\<\"2EthynylbenzylAlcohol\"\>", ",", "\<\"AllylAlcohol\"\>", 
   ",", "\<\"BenzylAlcohol\"\>", ",", "\<\"CrotylAlcohol\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.462493152926218*^9, 3.462493171396595*^9}, 
   3.462493214295554*^9, 3.462496447261004*^9, 3.462496546928952*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Outer", "[", 
     RowBox[{"BondSimilarity", ",", "rcnames", ",", "rcnames"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"mat", "\[LeftDoubleBracket]", 
     RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}], "=", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "[", "mat", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"mat", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f_", "/;", 
       RowBox[{"f", "<", "0.9"}]}], "\[Rule]", "0"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"mat", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.462477499836434*^9, 3.462477645004376*^9}, {
   3.46247768127007*^9, 3.462477706085121*^9}, {3.4624831546993217`*^9, 
   3.4624831670659313`*^9}, {3.462483217788911*^9, 3.462483220343244*^9}, {
   3.462483251492422*^9, 3.4624832570965033`*^9}, {3.4624836171842527`*^9, 
   3.462483617478259*^9}, {3.462489056088006*^9, 3.462489122797963*^9}, {
   3.4624891903659697`*^9, 3.462489190775127*^9}, {3.462489251750237*^9, 
   3.462489264918539*^9}, {3.462489295472949*^9, 3.462489296646193*^9}, {
   3.462489906367814*^9, 3.462489917453909*^9}, {3.4624899710269613`*^9, 
   3.462489990557666*^9}, 3.46249068165779*^9, {3.462492767559925*^9, 
   3.462492768415805*^9}, {3.462492959800376*^9, 3.462492969960431*^9}, {
   3.462493000128035*^9, 3.462493045320302*^9}, {3.462493132496602*^9, 
   3.462493133854639*^9}, {3.462493258591243*^9, 3.4624933253012123`*^9}, {
   3.462493363703146*^9, 3.462493523328047*^9}, {3.4624935649978724`*^9, 
   3.462493622249537*^9}, 3.462493664688175*^9, {3.462493759371806*^9, 
   3.4624937655418243`*^9}, {3.462496514414342*^9, 3.462496529325223*^9}, {
   3.462496571553021*^9, 3.462496573935259*^9}, 3.462496617210816*^9, {
   3.46249668489744*^9, 3.4624967159987783`*^9}, {3.462496795193961*^9, 
   3.462496796670764*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0"},
     {"1", "0", "0", "0", "0", 
      FractionBox["11", "12"]},
     {"1", "1", "0", "1", "1", "1"},
     {"1", "0", "0", "0", "0", "0"},
     {"1", "1", "0", "1", "0", "1"},
     {"1", "1", "0", "1", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.462493766322454*^9, 3.462496453810471*^9, {3.4624965301952963`*^9, 
   3.462496574655558*^9}, 3.462496617785923*^9, 3.462496686514492*^9, 
   3.46249671665012*^9, 3.462496797308832*^9}]
}, Closed]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"smat", "=", 
   RowBox[{"SparseArray", "[", "mat", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"ArrayRules", "[", "smat", "]"}], ",", 
     RowBox[{"-", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rcformulas", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ChemicalData", "[", 
       RowBox[{"#", ",", "\"\<CompoundFormulaString\>\""}], "]"}], "&"}], ",",
      "rcnames"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grules", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"rcformulas", "\[LeftDoubleBracket]", 
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
          "\[RightDoubleBracket]"}], "->", 
         RowBox[{"rcformulas", "\[LeftDoubleBracket]", 
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
          "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
        "}"}], "&"}], ",", "rules"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4624778580832453`*^9, 3.4624780367923393`*^9}, {
  3.4624780710483093`*^9, 3.4624781462052307`*^9}, {3.462478182035676*^9, 
  3.462478217955923*^9}, {3.46248413663356*^9, 3.462484136855493*^9}, {
  3.4624841817965927`*^9, 3.462484187015278*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphPlot", "[", 
  RowBox[{
   RowBox[{"First", "/@", "grules"}], ",", 
   RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", 
   RowBox[{"VertexLabeling", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4624776517314672`*^9, 3.462477656241748*^9}, {
   3.462477721992401*^9, 3.4624777327755613`*^9}, {3.462477809757263*^9, 
   3.4624778528751163`*^9}, {3.462477987357498*^9, 3.462477988052018*^9}, 
   3.462478233003233*^9, {3.462484217815237*^9, 3.4624842367413073`*^9}, {
   3.462489327519617*^9, 3.4624893333247023`*^9}, 3.4624929934726048`*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[CompressedData["
1:eJxdkWlIkwEAhqc5c+a5SkoidbZJ85jNwoyxd1qWmEopWAlmiiZqeIDkiYrE
8KioJNNMSbPptGHNA8TwYDIziExLKEN22XSXpvvE7dPM/vbCw/Pv+fP6pOXF
Z9hSKBTWHv9sw/jRmRixg2ermU/Cbi9C2OxpNxqlwb0iX2pXsgkm+qeylKAN
fNyRJoWkmaC5ZhnO9d8A5b9xCz8rThYsQmDn59rG06Cqv3e1e38qgnNlhc32
26iOaZpu4CsgdBSHvZWSwJzcmVWrwERtig/jFolXIbuK+u8K1IUNO9NcSQSQ
DS5vOEqkcBpzKsasmHH3asypV2JLrGe3FFjBXdjqlxiUKH6xPlTEtCLmC0+X
kKCCab7S5L9gwdLkdUf+mAraGUkRZ45AXyBz8eDsMsoDhl7P1hFIDFyje59f
AeWQTWnZBQJHViL17OEVaKUHbAUUAj3wzXA9rUMr1avjzKgZrBKBRdSvA0k8
dymoMCP6PrNrOlSPK23FkfbhZjzqHLCJG9dDPkKtcbA3Q2Zl8WixBozL1b3H
ss3wEMclvU804g77zy/qXu8Gw9uD7WTEqd5Luw1uBMwT2ojJEQMySSNdkkog
xxp/uDPDgMdU98HQdwTk6qkHGpoBW3UjhOcugXRPU15Htx7FTQNZ/MubiD7R
E7Ydrse+m37cuqebkAY/PEqf14GWbukWtlqxPDURyZNpUOjwu1S9ZEX4h023
4HgN1rxFonMBJCqd2s8yf6pBq245fjefhHFQNipIVSOBU1NRtfdXfrmILVaq
QPCd6JHrJGKzJsqFySq8bAxa6ONsw+Eql2H7TQl2SXuTJHsbX61j2otRSvwF
6mErNg==
    "], {
     {RGBColor[0.5, 0., 0.], Arrowheads[{{0.034915442839954056`, 0.7}}], 
      ArrowBox[{1, 2}], 
      ArrowBox[{1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
       22, 3}], ArrowBox[{3, 2}], 
      ArrowBox[{3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
        38, 1}], ArrowBox[{3, 5}], ArrowBox[{4, 2}], ArrowBox[{4, 1}], 
      ArrowBox[{4, 5}], ArrowBox[{4, 6}], ArrowBox[{4, 3}], ArrowBox[{5, 2}], 
      ArrowBox[{6, 2}], ArrowBox[{6, 1}], ArrowBox[{6, 5}], 
      ArrowBox[{6, 3}]}, {InsetBox[
       FrameBox["\<\"C3H8O\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 1], InsetBox[
       FrameBox["\<\"CH4O\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 2], InsetBox[
       FrameBox["\<\"C4H8O\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 3], InsetBox[
       FrameBox["\<\"C9H8O\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 4], InsetBox[
       FrameBox["\<\"C3H6O\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 5], InsetBox[
       FrameBox["\<\"C7H8O\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 6]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{1.8286959113630703`, 0.4749893121477213}, {
     0.6338796692041775, 0.948932180439201}, {1.198821529004984, 
     0.9494873782604654}, {1.1981036438569328`, 0.}, {0., 
     0.4756569571889627}, {0.6323995872445565, 0.0020788478408264033`}}]& ],
  AspectRatio->Automatic,
  FrameTicks->None,
  ImageSize->{692.6666666666665, Automatic},
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{
  3.462483369252718*^9, {3.462483561333962*^9, 3.462483576063143*^9}, {
   3.462483620563819*^9, 3.4624836375926933`*^9}, 3.462484097687015*^9, {
   3.4624841385124607`*^9, 3.4624841885701942`*^9}, {3.462484220442198*^9, 
   3.4624842383460712`*^9}, {3.462489066044838*^9, 3.462489125431631*^9}, {
   3.462489184205449*^9, 3.462489195191078*^9}, {3.462489259098153*^9, 
   3.462489362397201*^9}, {3.46248983814312*^9, 3.462489860100532*^9}, {
   3.462489899361619*^9, 3.46248992066475*^9}, {3.4624899657941923`*^9, 
   3.4624899938612137`*^9}, 3.4624901422890587`*^9, {3.462490671452532*^9, 
   3.4624906848708763`*^9}, {3.462492748864565*^9, 3.462492772168396*^9}, {
   3.4624929641412687`*^9, 3.462493003596917*^9}, 3.462493050648546*^9, 
   3.4624932382904463`*^9, 3.462493278540221*^9, {3.462493499451178*^9, 
   3.462493527606756*^9}, 3.462493576369678*^9, 3.462493635497785*^9, 
   3.462493671987466*^9, {3.4624964353109407`*^9, 3.462496459012052*^9}, {
   3.462496535813388*^9, 3.4624965768575897`*^9}, 3.462496619944845*^9, {
   3.46249668901663*^9, 3.462496719179936*^9}, {3.462496799361562*^9, 
   3.462496813711644*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   RowBox[{"N", "@", "mat"}], ",", "3"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvectors", "[", 
  RowBox[{
   RowBox[{"N", "@", "mat"}], ",", "3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.462478248408443*^9, 3.4624783142874947`*^9}, {
  3.462493009190886*^9, 3.462493011029022*^9}, {3.462493055593252*^9, 
  3.46249305893257*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9574271077563381`", ",", 
   RowBox[{"-", "0.957427107756338`"}], ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.4624782752527237`*^9, 3.462478314726879*^9}, 
   3.462478577720438*^9, 3.462483098138599*^9, 3.462483172905314*^9, 
   3.462483224402203*^9, 3.4624833788542223`*^9, 3.4624835778843813`*^9, 
   3.46248364116018*^9, 3.462484194804551*^9, 3.46248962399125*^9, {
   3.4624927570652847`*^9, 3.4624927735481*^9}, {3.462492978542001*^9, 
   3.46249301151096*^9}, {3.462493052626889*^9, 3.462493059691733*^9}, 
   3.462493280597979*^9, 3.4624935014324408`*^9, 3.462493578245364*^9, 
   3.462493638112468*^9, 3.462493673595262*^9, 3.4624966467765503`*^9, {
   3.462496690864439*^9, 3.46249672088765*^9}, 3.46249680069598*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.19721876826691828`", ",", "0.8609982728434364`", ",", 
     "0.`", ",", "0.421136032542525`", ",", "0.20598828534225058`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.6912069401138269`", ",", 
     RowBox[{"-", "0.0014274379620963103`"}], ",", "0.`", ",", 
     "0.03210183117767695`", ",", 
     RowBox[{"-", "0.7219421034919523`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4624782752527237`*^9, 3.462478314726879*^9}, 
   3.462478577720438*^9, 3.462483098138599*^9, 3.462483172905314*^9, 
   3.462483224402203*^9, 3.4624833788542223`*^9, 3.4624835778843813`*^9, 
   3.46248364116018*^9, 3.462484194804551*^9, 3.46248962399125*^9, {
   3.4624927570652847`*^9, 3.4624927735481*^9}, {3.462492978542001*^9, 
   3.46249301151096*^9}, {3.462493052626889*^9, 3.462493059691733*^9}, 
   3.462493280597979*^9, 3.4624935014324408`*^9, 3.462493578245364*^9, 
   3.462493638112468*^9, 3.462493673595262*^9, 3.4624966467765503`*^9, {
   3.462496690864439*^9, 3.46249672088765*^9}, 3.462496800700584*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vec", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"Eigenvectors", "[", 
      RowBox[{
       RowBox[{"N", "@", "mat"}], ",", "2"}], "]"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SortBy", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"rcformulas", ",", "vec"}], "}"}], "]"}], ",", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "&"}]}], "]"}], "//", "ColumnForm"}]}], "Input",
 CellChangeTimes->{{3.462478343041952*^9, 3.462478454533628*^9}, {
   3.4624785867126713`*^9, 3.4624786038072453`*^9}, {3.462483192740192*^9, 
   3.462483198336018*^9}, 3.4624896293783083`*^9, {3.462492777357901*^9, 
   3.462492777536314*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"\<\"C9H8O\"\>", ",", "0.8609982728434364`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"C7H8O\"\>", ",", "0.421136032542525`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"C4H8O\"\>", ",", "0.20598828534225058`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"C3H8O\"\>", ",", "0.19721876826691828`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"C3H6O\"\>", ",", "0.`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"CH4O\"\>", ",", "0.`"}], "}"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{{"C9H8O", 0.8609982728434364}, {"C7H8O", 0.421136032542525}, {
    "C4H8O", 0.20598828534225058`}, {"C3H8O", 0.19721876826691828`}, {
    "C3H6O", 0.}, {"CH4O", 0.}}],
  Editable->False]], "Output",
 CellChangeTimes->{{3.4624783611824903`*^9, 3.462478454900311*^9}, {
   3.462478579776701*^9, 3.4624786042951403`*^9}, 3.4624831043057404`*^9, {
   3.4624831741836557`*^9, 3.462483226802493*^9}, 3.462483385628334*^9, 
   3.4624835802733393`*^9, 3.462483648522208*^9, 3.462484196604125*^9, 
   3.4624896296310673`*^9, 3.462492778176469*^9, 3.46249297999098*^9, 
   3.46249306499761*^9, 3.4624932835616503`*^9, 3.46249350274442*^9, 
   3.462493580162785*^9, 3.46249364004517*^9, 3.462493676357479*^9, {
   3.462496705176507*^9, 3.46249672396321*^9}, 3.462496802764394*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"methanolNeighbors", " ", "=", " ", 
  RowBox[{"Nearest", "[", 
   RowBox[{
    RowBox[{"ChemicalData", "[", "\"\<Alcohols\>\"", "]"}], ",", " ", 
    "\"\<Methanol\>\"", ",", " ", "6", ",", " ", 
    RowBox[{"DistanceFunction", " ", "->", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1", " ", "-", " ", 
        RowBox[{"BondSimilarity", "[", "##", "]"}]}], " ", "&"}], ")"}]}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Methanol\"\>", ",", "\<\"PolyvinylAlcohol\"\>", 
   ",", "\<\"Ethanol\"\>", ",", "\<\"PropargylAlcohol\"\>", 
   ",", "\<\"AllylAlcohol\"\>", ",", "\<\"1Propanol\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.462664383379901*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rules", " ", "=", " ", 
   RowBox[{"Outer", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", " ", "!=", " ", "#2"}], " ", "&&", " ", 
         RowBox[{
          RowBox[{"BondSimilarity", "[", 
           RowBox[{"#1", ",", " ", "#2"}], "]"}], " ", ">=", " ", "0.85"}]}], 
        ",", " ", 
        RowBox[{"#2", " ", "->", " ", "#1"}], ",", " ", "Null"}], "]"}], " ", 
      "&"}], ",", " ", "methanolNeighbors", ",", " ", "methanolNeighbors"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rules", " ", "=", " ", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"rules", ",", " ", "1"}], "]"}], ",", " ", "Null"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"GraphPlot", "[", 
  RowBox[{"rules", ",", " ", 
   RowBox[{"DirectedEdges", " ", "->", " ", "True"}], ",", " ", 
   RowBox[{"VertexLabeling", " ", "->", " ", "True"}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAAAAAAAAAAACWfyWKntbhP59KGt4E
+PE/Wmcoy2ulzj9VzOmoDQz+PwAAAAAAAAAA4OHMkTES/j+6mC03P9PxP9z/
VL7l9fE/t9u/pvkE7D9eTbEfEBQCQKLdT6yL1OE/jMN3Yw9x/D9oIrIUGRuy
P5byxz1gBPw/MCx0tO8Stz8nHDcnipr7P7A9nGLXRrw/GjAhTq4z+z/ALZ5G
l9rAP2op6fHsz/o/qGMzqCCuwz+E4dxYZW/6P0Ana/8kncY/+vpmxjUS+j8M
ERXYuKbJP0r2kXF7uPk/jE9EaujJzD+CpIng0eL0P/OeqsOqZ+I/lBjX6qiM
9D/v4siinjbjP/DtbVcsOvQ/hJOTmnkL5D+pYKICduvzP97uZO/45eQ/inDa
mZ6g8z/ebMMg2MXlP1NK0ZO9WfM/c6rb/tCq5j/xFjwp6RbzP/SQgcCblOc/
EX/STTbY8j9w07EZ74LoP6UIxwPkkPM/a5cphJbB6T+c2XYpk/3zPzJWMbCb
Iuk/DLAHQGln9D8CVGy6HnzoPxacHRlFzvQ/SFAY1VPO5z/HolV1BjL1P84C
s3xxGec/ruphDo6S9T/oEeVmsF3mPzjR16C97/U/dZe6cEub5T/o1az1d0n2
P9XHLox/0uQ/sCe1hiEf+z+HeSrGnTrTP56zZ3xKdfs/kPHtB7ac0T9C3tAP
x8f7P9AgsTAA5s8/iWucZH0W/D9ks2vdAnzMP6hbZM1UYfw/YrvxF4b8yD/f
gW3TNaj8PxDFkJ+iaMU/QbUCPgrr/D8IK/mYd8HBPyFNbBm9Kf0/MEJwaFQQ
vD+cZDgX
    "], {
     {RGBColor[0.5, 0., 0.], Arrowheads[{{0.032371071055034006`, 0.7}}], 
      ArrowBox[{1, 2}], ArrowBox[{3, 2}], ArrowBox[{3, 4}], 
      ArrowBox[{3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
       22, 5}], ArrowBox[{4, 2}], ArrowBox[{5, 2}], ArrowBox[{5, 1}], 
      ArrowBox[{5, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
        38, 3}], ArrowBox[{5, 4}], ArrowBox[{6, 2}], ArrowBox[{6, 3}], 
      ArrowBox[{6, 4}], ArrowBox[{6, 5}]}, {InsetBox[
       FrameBox["\<\"PolyvinylAlcohol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 1], InsetBox[
       FrameBox["\<\"Methanol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 2], InsetBox[
       FrameBox["\<\"Ethanol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 3], InsetBox[
       FrameBox["\<\"PropargylAlcohol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 4], InsetBox[
       FrameBox["\<\"AllylAlcohol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 5], InsetBox[
       FrameBox["\<\"1Propanol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 6]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{0., 0.5574486444638633}, {1.1230515170943034`, 
     0.2394232503873422}, {1.8779427145170946`, 0.}, {1.8794418044400274`, 
     1.1140739589114177`}, {1.1225335535855185`, 0.8756073242974399}, {
     2.259796378706297, 0.5571955075710557}}]& ],
  AspectRatio->Automatic,
  FrameTicks->None,
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{3.462664403289618*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat", "=", " ", 
   RowBox[{"Outer", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#1", " ", "!=", " ", "#2"}], " ", ",", " ", 
        RowBox[{"BondSimilarity", "[", 
         RowBox[{"#1", ",", " ", "#2"}], "]"}], ",", "0"}], "]"}], " ", "&"}],
      ",", " ", "methanolNeighbors", ",", " ", "methanolNeighbors"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"mat", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f_", "/;", 
       RowBox[{"f", "<", "0.85"}]}], "\[Rule]", "0"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"mat", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.4626644127006273`*^9, 3.462664478139135*^9}, {
  3.462664586394767*^9, 3.462664593019882*^9}, {3.4626646283367243`*^9, 
  3.4626646766432467`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1", "1", "1", "1", "1"},
     {"0", "0", "0", "0", "1", "0"},
     {"0", "0", "0", "0", "1", "1"},
     {"0", "0", 
      FractionBox["6", "7"], "0", 
      FractionBox["6", "7"], 
      FractionBox["6", "7"]},
     {"0", "0", 
      FractionBox["8", "9"], "0", "0", 
      FractionBox["8", "9"]},
     {"0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4626646773686333`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{"methanolNeighbors", "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ChemicalData", "[", 
     RowBox[{"#", ",", "\"\<CompoundFormulaString\>\""}], "]"}], "&"}], ",", 
   "%"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"N", "@", "mat"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eigenvectors", "[", 
   RowBox[{"N", "@", "mat"}], "]"}], "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]}], "Input",
 CellChangeTimes->{{3.462664573246921*^9, 3.462664577350624*^9}, {
  3.46266468885583*^9, 3.4626647402249928`*^9}, {3.462664796395105*^9, 
  3.462664799829204*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Methanol\"\>", ",", "\<\"PolyvinylAlcohol\"\>", 
   ",", "\<\"Ethanol\"\>", ",", "\<\"PropargylAlcohol\"\>", 
   ",", "\<\"AllylAlcohol\"\>", ",", "\<\"1Propanol\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.462664696066043*^9, 3.462664740863303*^9}, 
   3.462664800593894*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"CH4O\"\>", ",", "\<\"C2H4O\"\>", ",", "\<\"C2H6O\"\>", 
   ",", "\<\"C3H4O\"\>", ",", "\<\"C3H6O\"\>", ",", "\<\"C3H8O\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.462664696066043*^9, 3.462664740863303*^9}, 
   3.462664800599407*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9428090415820634`", ",", 
   RowBox[{"-", "0.9428090415820632`"}], ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.462664696066043*^9, 3.462664740863303*^9}, 
   3.462664800604061*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8977183195832578`", ",", "0.17973262228840753`", ",", 
   "0.17973262228840753`", ",", "0.3174581625593722`", ",", 
   "0.1694535413607645`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.462664696066043*^9, 3.462664740863303*^9}, 
   3.4626648006124783`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Using substring matching for similarity", "Subsubsection",
 CellChangeTimes->{{3.46301034868738*^9, 3.4630103739986153`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FormulaSimilarity", "[", 
    RowBox[{"cname1_String", ",", "cname2_String"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t1", "=", 
        RowBox[{"ChemicalData", "[", 
         RowBox[{"cname1", ",", "\"\<CompoundFormulaString\>\""}], "]"}]}], 
       ",", 
       RowBox[{"t2", "=", 
        RowBox[{"ChemicalData", "[", 
         RowBox[{"cname2", ",", "\"\<CompoundFormulaString\>\""}], "]"}]}], 
       ",", "t"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", "=", 
       RowBox[{"LongestCommonSubsequence", "[", 
        RowBox[{"t1", ",", "t2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringMatchQ", "[", 
          RowBox[{"t1", ",", 
           RowBox[{"t", "~~", "___"}]}], "]"}], "&&", 
         RowBox[{"StringMatchQ", "[", 
          RowBox[{"t2", ",", 
           RowBox[{"t", "~~", "___"}]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"StringLength", "[", "t", "]"}], "/", 
         RowBox[{"StringLength", "[", "t1", "]"}]}], ",", "0"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.446518947350966*^9, 3.446518978959939*^9}, {
   3.446519153043489*^9, 3.446519156482747*^9}, 3.4624892423321037`*^9, {
   3.4630004413346987`*^9, 3.4630004761760283`*^9}, {3.463000559137813*^9, 
   3.463000590303755*^9}, {3.463000735795649*^9, 3.463000801688686*^9}, {
   3.4630014397020073`*^9, 3.46300151985736*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaSimilarity", "[", 
  RowBox[{"\"\<AllylAlcohol\>\"", ",", "\"\<Methanol\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.462753867321322*^9, 3.462753912058539*^9}, {
  3.4630007176950417`*^9, 3.4630007232477617`*^9}}],

Cell[BoxData[
 FractionBox["1", "5"]], "Output",
 CellChangeTimes->{
  3.463000723730399*^9, {3.463000767805352*^9, 3.463000804379634*^9}, 
   3.463001528206394*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"methanolNeighbors", "=", 
  RowBox[{"Nearest", "[", 
   RowBox[{
    RowBox[{"ChemicalData", "[", "\"\<Alcohols\>\"", "]"}], ",", 
    "\"\<Methanol\>\"", ",", "12", ",", 
    RowBox[{"DistanceFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1", "-", 
        RowBox[{"FormulaSimilarity", "[", "##", "]"}]}], "&"}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.446519194908532*^9, 3.446519254927981*^9}, {
   3.446519316124261*^9, 3.44651932952135*^9}, {3.4465194367391148`*^9, 
   3.4465194604813757`*^9}, {3.462477209018773*^9, 3.462477216577326*^9}, {
   3.462477307508833*^9, 3.462477323271891*^9}, 3.462478538642087*^9, {
   3.4624830119563217`*^9, 3.462483030249115*^9}, {3.46248333719376*^9, 
   3.4624833472625732`*^9}, {3.462483628490834*^9, 3.462483628669826*^9}, {
   3.462489135216371*^9, 3.462489135437173*^9}, {3.4624898177127733`*^9, 
   3.46248982761229*^9}, {3.4624899446722517`*^9, 3.462489952935227*^9}, {
   3.462490128530511*^9, 3.462490129549774*^9}, {3.462490229247254*^9, 
   3.462490316684949*^9}, {3.4624927295594053`*^9, 3.462492736397943*^9}, {
   3.462656606056999*^9, 3.462656609302095*^9}, {3.4626566686898193`*^9, 
   3.462656733255452*^9}, {3.462656909256349*^9, 3.462656914744454*^9}, {
   3.462657001068911*^9, 3.462657007840495*^9}, {3.462657041931365*^9, 
   3.4626571205791903`*^9}, {3.4630005976481113`*^9, 3.463000605055386*^9}, {
   3.46300102180066*^9, 3.463001021858335*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Methanol\"\>", ",", "\<\"MethoxylamineHydrochloride\"\>", 
   ",", "\<\"Ethanol\"\>", ",", "\<\"AllylAlcohol\"\>", 
   ",", "\<\"1Propanol\"\>", ",", "\<\"2Propanol\"\>", 
   ",", "\<\"Ethanolamine\"\>", ",", "\<\"AllylAlcoholD5\"\>", 
   ",", "\<\"2Fluoroethanol\"\>", ",", "\<\"RPlus3Butyn2Ol\"\>", 
   ",", "\<\"SMinus3Butyn2Ol\"\>", ",", "\<\"CrotylAlcohol\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.463000605667347*^9, 3.463000859270179*^9, 
  3.463001022868683*^9, 3.463001531831648*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ChemicalData", "[", 
    RowBox[{"#", ",", " ", "\"\<CompoundFormulaString\>\""}], "]"}], "&"}], "/@",
   "methanolNeighbors"}]], "Input",
 CellChangeTimes->{{3.463001208396092*^9, 3.463001214563569*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"CH4O\"\>", ",", "\<\"C2H4O\"\>", ",", "\<\"C3H4O\"\>", 
   ",", "\<\"C6H4O4\"\>", ",", "\<\"C2H4\"\>", ",", "\<\"CH6ClNO\"\>", 
   ",", "\<\"C6H14O\"\>", ",", "\<\"C6H14O\"\>", ",", "\<\"C6H14O\"\>", 
   ",", "\<\"C6H14O\"\>", ",", "\<\"C6H14O\"\>", ",", "\<\"C6H14O\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4630012154552393`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Outer", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FormulaSimilarity", "[", 
       RowBox[{"#1", ",", " ", "#2"}], "]"}], " ", "&"}], ",", " ", 
     "methanolNeighbors", ",", " ", "methanolNeighbors"}], "]"}], "//", "N"}],
   "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.463000687000594*^9, 3.46300070327076*^9}, {
  3.463000991763653*^9, 3.463000995573456*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "0.5`", "0.25`", "0.25`", "0.25`", "0.25`", "0.25`", "0.25`", 
      "0.25`", "0.25`", "0.25`", "0.25`"},
     {"0.2857142857142857`", "1.`", "0.`", "0.`", "0.14285714285714285`", 
      "0.14285714285714285`", "0.`", "0.14285714285714285`", 
      "0.14285714285714285`", "0.`", "0.`", "0.14285714285714285`"},
     {"0.2`", "0.`", "1.`", "0.`", "0.2`", "0.2`", "0.6`", "0.2`", "0.6`", 
      "0.`", "0.`", "0.2`"},
     {"0.2`", "0.`", "0.`", "1.`", "0.6`", "0.6`", "0.2`", "0.6`", "0.2`", 
      "0.`", "0.`", "0.2`"},
     {"0.2`", "0.2`", "0.2`", "0.6`", "1.`", "1.`", "0.2`", "0.6`", "0.2`", 
      "0.2`", "0.2`", "0.`"},
     {"0.2`", "0.2`", "0.2`", "0.6`", "1.`", "1.`", "0.2`", "0.6`", "0.2`", 
      "0.2`", "0.2`", "0.`"},
     {"0.16666666666666666`", "0.`", "0.5`", "0.16666666666666666`", 
      "0.16666666666666666`", "0.16666666666666666`", "1.`", 
      "0.16666666666666666`", "0.5`", "0.16666666666666666`", 
      "0.16666666666666666`", "0.16666666666666666`"},
     {"0.16666666666666666`", "0.16666666666666666`", "0.16666666666666666`", 
      "0.5`", "0.5`", "0.5`", "0.16666666666666666`", "1.`", 
      "0.16666666666666666`", "0.16666666666666666`", "0.16666666666666666`", 
      "0.16666666666666666`"},
     {"0.16666666666666666`", "0.16666666666666666`", "0.5`", 
      "0.16666666666666666`", "0.16666666666666666`", "0.16666666666666666`", 
      "0.5`", "0.16666666666666666`", "1.`", "0.16666666666666666`", 
      "0.16666666666666666`", "0.16666666666666666`"},
     {"0.2`", "0.`", "0.`", "0.`", "0.2`", "0.2`", "0.2`", "0.2`", "0.2`", 
      "1.`", "1.`", "0.6`"},
     {"0.2`", "0.`", "0.`", "0.`", "0.2`", "0.2`", "0.2`", "0.2`", "0.2`", 
      "1.`", "1.`", "0.6`"},
     {"0.2`", "0.2`", "0.2`", "0.2`", "0.`", "0.`", "0.2`", "0.2`", "0.2`", 
      "0.6`", "0.6`", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.46300069525954*^9, 3.463000704222271*^9}, 
   3.463000811736189*^9, 3.463000863669129*^9, 3.4630009961940527`*^9, 
   3.4630010278658667`*^9, 3.463001537523183*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"Outer", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "\[NotEqual]", "#2"}], "&&", 
         RowBox[{
          RowBox[{"FormulaSimilarity", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "\[GreaterEqual]", "0.25"}]}], 
        ",", 
        RowBox[{"#2", "\[Rule]", "#1"}], ",", "Null"}], "]"}], "&"}], ",", 
     "methanolNeighbors", ",", "methanolNeighbors"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"rules", ",", "1"}], "]"}], ",", "Null"}], "]"}]}], ";"}], "\n", 
 RowBox[{"GraphPlot", "[", 
  RowBox[{"rules", ",", 
   RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", 
   RowBox[{"VertexLabeling", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.462477499836434*^9, 3.462477645004376*^9}, {
   3.46247768127007*^9, 3.462477706085121*^9}, {3.4624831546993217`*^9, 
   3.4624831670659313`*^9}, {3.462483217788911*^9, 3.462483220343244*^9}, {
   3.462483251492422*^9, 3.4624832570965033`*^9}, {3.4624836171842527`*^9, 
   3.462483617478259*^9}, {3.462489056088006*^9, 3.462489122797963*^9}, {
   3.4624891903659697`*^9, 3.462489190775127*^9}, {3.462489251750237*^9, 
   3.462489264918539*^9}, {3.462489295472949*^9, 3.462489296646193*^9}, {
   3.462489906367814*^9, 3.462489917453909*^9}, {3.4624899710269613`*^9, 
   3.462489990557666*^9}, 3.46249068165779*^9, {3.462492767559925*^9, 
   3.462492768415805*^9}, {3.462492959800376*^9, 3.462492969960431*^9}, {
   3.462493000128035*^9, 3.462493045320302*^9}, {3.462493132496602*^9, 
   3.462493133854639*^9}, {3.462493258591243*^9, 3.4624933253012123`*^9}, {
   3.462493363703146*^9, 3.462493523328047*^9}, {3.4624935649978724`*^9, 
   3.462493622249537*^9}, 3.462493664688175*^9, {3.462493759371806*^9, 
   3.4624937655418243`*^9}, {3.462496514414342*^9, 3.462496529325223*^9}, {
   3.462496571553021*^9, 3.462496573935259*^9}, 3.462496617210816*^9, {
   3.46249668489744*^9, 3.4624967159987783`*^9}, {3.462496795193961*^9, 
   3.462496796670764*^9}, {3.46265694512355*^9, 3.462656948979602*^9}, {
   3.462657130955701*^9, 3.462657155636394*^9}, {3.462657243736792*^9, 
   3.462657244032722*^9}, {3.462657440173531*^9, 3.462657441468525*^9}, {
   3.462657837482297*^9, 3.462657837875965*^9}, {3.4626578791976557`*^9, 
   3.4626579845817947`*^9}, {3.462661201413855*^9, 3.462661211786454*^9}, {
   3.462661976286438*^9, 3.462661986172861*^9}, {3.462663299783944*^9, 
   3.46266330118715*^9}, {3.463000624135129*^9, 3.463000670195469*^9}, {
   3.46300082213118*^9, 3.463000904008654*^9}, {3.4630010472670918`*^9, 
   3.463001072513595*^9}, {3.463001543056982*^9, 3.463001612732518*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[CompressedData["
1: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
    "], {
     {RGBColor[0.5, 0., 0.], Arrowheads[{{0.02939615324163349, 0.7}}], 
      ArrowBox[{1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
        28, 2}], 
      ArrowBox[{2, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
        44, 1}], ArrowBox[{3, 2}], 
      ArrowBox[{3, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
        60, 7}], 
      ArrowBox[{3, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
        76, 9}], ArrowBox[{4, 2}], 
      ArrowBox[{4, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
        92, 5}], 
      ArrowBox[{4, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 
       106, 107, 108, 6}], 
      ArrowBox[{4, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
        121, 122, 123, 124, 8}], ArrowBox[{5, 2}], 
      ArrowBox[{5, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
        137, 138, 139, 140, 4}], 
      ArrowBox[{5, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
        153, 154, 155, 156, 6}], 
      ArrowBox[{5, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
        169, 170, 171, 172, 8}], ArrowBox[{6, 2}], 
      ArrowBox[{6, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
        185, 186, 187, 188, 4}], 
      ArrowBox[{6, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
        201, 202, 203, 204, 5}], 
      ArrowBox[{6, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
        217, 218, 219, 220, 8}], ArrowBox[{7, 2}], 
      ArrowBox[{7, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
        233, 234, 235, 236, 3}], 
      ArrowBox[{7, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
        249, 250, 251, 252, 9}], ArrowBox[{8, 2}], 
      ArrowBox[{8, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
        265, 266, 267, 268, 4}], 
      ArrowBox[{8, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
        281, 282, 283, 284, 5}], 
      ArrowBox[{8, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296,
        297, 298, 299, 300, 6}], ArrowBox[{9, 2}], 
      ArrowBox[{9, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312,
        313, 314, 315, 316, 3}], 
      ArrowBox[{9, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328,
        329, 330, 331, 332, 7}], ArrowBox[{10, 2}], 
      ArrowBox[{10, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 
       344, 345, 346, 347, 348, 11}], 
      ArrowBox[{10, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 
       360, 361, 362, 363, 364, 12}], ArrowBox[{11, 2}], 
      ArrowBox[{11, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 
       376, 377, 378, 379, 380, 10}], 
      ArrowBox[{11, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 
       392, 393, 394, 395, 396, 12}], ArrowBox[{12, 2}], 
      ArrowBox[{12, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 
       408, 409, 410, 411, 412, 10}], 
      ArrowBox[{12, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 
       424, 425, 426, 427, 428, 11}]}, {InsetBox[
       FrameBox["\<\"MethoxylamineHydrochloride\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 1], InsetBox[
       FrameBox["\<\"Methanol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 2], InsetBox[
       FrameBox["\<\"Ethanol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 3], InsetBox[
       FrameBox["\<\"AllylAlcohol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 4], InsetBox[
       FrameBox["\<\"1Propanol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 5], InsetBox[
       FrameBox["\<\"2Propanol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 6], InsetBox[
       FrameBox["\<\"Ethanolamine\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 7], InsetBox[
       FrameBox["\<\"AllylAlcoholD5\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 8], InsetBox[
       FrameBox["\<\"2Fluoroethanol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 9], InsetBox[
       FrameBox["\<\"RPlus3Butyn2Ol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 10], InsetBox[
       FrameBox["\<\"SMinus3Butyn2Ol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 11], InsetBox[
       FrameBox["\<\"CrotylAlcohol\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 12]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{2.88806299882451, 1.370558096772665}, {
     1.481732451318666, 1.369341194811693}, {2.048177677607194, 0.}, {0., 
     1.3758099474680543`}, {0.3148272297422101, 1.8351182290898773`}, {
     0.5821782416967367, 1.3642568001604356`}, {2.2520818361686983`, 
     0.48367553053589885`}, {0.30639164439102884`, 0.905891660542111}, {
     1.5375735756420699`, 0.16008297783518577`}, {2.251006936492923, 
     2.2550315860592036`}, {2.050053859563457, 2.7390990428240354`}, {
     1.537516626349338, 2.579245266480294}}]& ],
  AspectRatio->Automatic,
  FrameTicks->None,
  ImageSize->{479.9999999999996, Automatic},
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{{3.46300104950149*^9, 3.463001072871737*^9}, {
  3.463001540548306*^9, 3.463001613125928*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["random walk", "Subsubsection",
 CellChangeTimes->{{3.4676833599698668`*^9, 3.4676833630019913`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["methanolNeighbors"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Methanol\"\>", ",", "\<\"PolyvinylAlcohol\"\>", 
   ",", "\<\"Ethanol\"\>", ",", "\<\"PropargylAlcohol\"\>", 
   ",", "\<\"AllylAlcohol\"\>", ",", "\<\"1Propanol\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.467681578944892*^9, 3.467919400433043*^9, 
  3.467919826897687*^9, 3.467920283469482*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nrules", "=", 
  RowBox[{"rules", "/.", 
   RowBox[{"Thread", "[", 
    RowBox[{"methanolNeighbors", "\[Rule]", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "methanolNeighbors", "]"}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.467681589605134*^9, 3.46768166922707*^9}, {
  3.467920848670065*^9, 3.467920849077436*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", "\[Rule]", "1"}], ",", 
   RowBox[{"3", "\[Rule]", "1"}], ",", 
   RowBox[{"4", "\[Rule]", "1"}], ",", 
   RowBox[{"5", "\[Rule]", "1"}], ",", 
   RowBox[{"6", "\[Rule]", "1"}], ",", 
   RowBox[{"5", "\[Rule]", "2"}], ",", 
   RowBox[{"5", "\[Rule]", "3"}], ",", 
   RowBox[{"6", "\[Rule]", "3"}], ",", 
   RowBox[{"3", "\[Rule]", "4"}], ",", 
   RowBox[{"5", "\[Rule]", "4"}], ",", 
   RowBox[{"6", "\[Rule]", "4"}], ",", 
   RowBox[{"3", "\[Rule]", "5"}], ",", 
   RowBox[{"6", "\[Rule]", "5"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.467681371532745*^9, {3.467681622427822*^9, 3.467681632228829*^9}, {
   3.4676816627440767`*^9, 3.467681669744439*^9}, 3.4679185424102583`*^9, 
   3.467919402342461*^9, 3.467919828449705*^9, 3.4679202836513243`*^9, 
   3.467920850514722*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"arules", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"List", "@@@", "nrules"}], ")"}], "\[Rule]", "1"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4676816834433117`*^9, 3.4676817259429626`*^9}, {
  3.4679208528155622`*^9, 3.467920853531727*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "1"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "1"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "1"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"6", ",", "1"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "2"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "3"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"6", ",", "3"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "4"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"6", ",", "4"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "5"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"6", ",", "5"}], "}"}], "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4676816997442017`*^9, 3.467681726362193*^9}, 
   3.467918559206243*^9, 3.4679194038940563`*^9, 3.467919830024447*^9, 
   3.4679202837316628`*^9, 3.467920854105873*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"SparseArray", "[", "arules", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "mat", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Append", "[", 
      RowBox[{"#", ",", "0"}], "]"}], "&"}], "/@", "mat"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"L", "=", 
  RowBox[{"Total", "/@", "mat"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#1", "==", "0"}], ",", 
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", 
           RowBox[{"Length", "[", "#2", "]"}]}], "]"}], "/", 
         RowBox[{"Length", "[", "#2", "]"}]}], ",", 
        RowBox[{"#2", "/", "#1"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"L", ",", "mat"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"mat", "/.", 
    RowBox[{"{", 
     RowBox[{"0", "\[Rule]", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"Length", "[", "mat", "]"}], ")"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "/", 
       RowBox[{"Total", "[", "#", "]"}]}], "&"}], ",", "mat"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"Transpose", "[", "mat", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.467681738709908*^9, 3.467681764554921*^9}, {
   3.467682080739793*^9, 3.467682099921372*^9}, {3.467682631932317*^9, 
   3.467682632587306*^9}, {3.4676842383471527`*^9, 3.467684259499716*^9}, {
   3.467684475685096*^9, 3.4676844983415413`*^9}, {3.4676849540934*^9, 
   3.467684954744336*^9}, {3.4676851527917624`*^9, 3.467685168141389*^9}, {
   3.4676855951811647`*^9, 3.467685596804563*^9}, {3.467685651878314*^9, 
   3.4676856802309713`*^9}, {3.467685875273993*^9, 3.4676858850620813`*^9}, {
   3.4676859719609528`*^9, 3.467686059760397*^9}, {3.467919526392003*^9, 
   3.467919531993881*^9}, {3.4679199128157*^9, 3.4679199199167852`*^9}, {
   3.467920298597064*^9, 3.467920300542039*^9}, {3.467923103605114*^9, 
   3.467923108277299*^9}, {3.467923228146359*^9, 3.467923314145499*^9}, {
   3.467923347110917*^9, 3.467923351428966*^9}, {3.467923713677431*^9, 
   3.467923715793425*^9}, {3.467923753346984*^9, 3.46792377298597*^9}, {
   3.467923826086985*^9, 3.467924011929744*^9}, 3.4679240488211184`*^9, {
   3.467924309147087*^9, 3.467924335573741*^9}, 3.467924448913733*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{{3.4676856763284197`*^9, 3.467685681465877*^9}, {
   3.4676860553152323`*^9, 3.467686060749116*^9}, {3.467918544648653*^9, 
   3.467918560562771*^9}, 3.467919405259021*^9, 3.467919532607203*^9, 
   3.467919831704693*^9, 3.467919920795268*^9, {3.467920283794855*^9, 
   3.467920301284697*^9}, {3.4679232836492147`*^9, 3.467923314778904*^9}, 
   3.467923352582897*^9, 3.467923723537796*^9, {3.467923759859189*^9, 
   3.467923774521331*^9}, 3.4679238280913363`*^9, {3.467923862558372*^9, 
   3.4679239023016644`*^9}, {3.4679239443005543`*^9, 3.4679239722211723`*^9}, 
   3.4679240138360157`*^9, 3.4679240495212793`*^9, {3.467924310379031*^9, 
   3.467924336294359*^9}, 3.4679244501654263`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "3", ",", "1", ",", "4", ",", "4"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.4676856763284197`*^9, 3.467685681465877*^9}, {
   3.4676860553152323`*^9, 3.467686060749116*^9}, {3.467918544648653*^9, 
   3.467918560562771*^9}, 3.467919405259021*^9, 3.467919532607203*^9, 
   3.467919831704693*^9, 3.467919920795268*^9, {3.467920283794855*^9, 
   3.467920301284697*^9}, {3.4679232836492147`*^9, 3.467923314778904*^9}, 
   3.467923352582897*^9, 3.467923723537796*^9, {3.467923759859189*^9, 
   3.467923774521331*^9}, 3.4679238280913363`*^9, {3.467923862558372*^9, 
   3.4679239023016644`*^9}, {3.4679239443005543`*^9, 3.4679239722211723`*^9}, 
   3.4679240138360157`*^9, 3.4679240495212793`*^9, {3.467924310379031*^9, 
   3.467924336294359*^9}, 3.4679244501693172`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.467682637876623*^9, 3.467682643609703*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "6"], 
      FractionBox["6", "11"], 
      FractionBox["2", "9"], 
      FractionBox["6", "11"], 
      FractionBox["3", "16"], 
      FractionBox["3", "16"]},
     {
      FractionBox["1", "6"], 
      FractionBox["1", "11"], 
      FractionBox["1", "9"], 
      FractionBox["1", "11"], 
      FractionBox["3", "16"], 
      FractionBox["1", "8"]},
     {
      FractionBox["1", "6"], 
      FractionBox["1", "11"], 
      FractionBox["1", "9"], 
      FractionBox["1", "11"], 
      FractionBox["3", "16"], 
      FractionBox["3", "16"]},
     {
      FractionBox["1", "6"], 
      FractionBox["1", "11"], 
      FractionBox["2", "9"], 
      FractionBox["1", "11"], 
      FractionBox["3", "16"], 
      FractionBox["3", "16"]},
     {
      FractionBox["1", "6"], 
      FractionBox["1", "11"], 
      FractionBox["2", "9"], 
      FractionBox["1", "11"], 
      FractionBox["1", "8"], 
      FractionBox["3", "16"]},
     {
      FractionBox["1", "6"], 
      FractionBox["1", "11"], 
      FractionBox["1", "9"], 
      FractionBox["1", "11"], 
      FractionBox["1", "8"], 
      FractionBox["1", "8"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.467682644062709*^9, 3.467684269148975*^9, 3.4676845002821693`*^9, 
   3.467684708999401*^9, 3.467684956632721*^9, {3.467685161565151*^9, 
   3.467685170881174*^9}, 3.4676860619520903`*^9, 3.467918562851684*^9, 
   3.467919407946847*^9, 3.4679195366496077`*^9, 3.467919833071601*^9, 
   3.4679199232348137`*^9, {3.467920283880178*^9, 3.4679203042250977`*^9}, 
   3.467923318234166*^9, 3.467923368899694*^9, 3.467923725438856*^9, {
   3.467923761663886*^9, 3.4679237772102947`*^9}, 3.467923830915361*^9, {
   3.4679238642129307`*^9, 3.467923903588681*^9}, {3.467923945486827*^9, 
   3.467923974094282*^9}, 3.46792401548969*^9, 3.4679240512262707`*^9, 
   3.467924312217279*^9, 3.467924451939917*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetNextIndex", "[", 
    RowBox[{
     RowBox[{"mat_", "?", "MatrixQ"}], ",", "ind_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RandomSample", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"mat", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "ind"}], "\[RightDoubleBracket]"}], "->", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "mat", "]"}], "]"}]}], ",", "1"}], "]"}], "//",
     "First"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.467682679096374*^9, 3.4676827081867247`*^9}, {
  3.4676827940617447`*^9, 3.46768280229926*^9}, {3.4676832344281893`*^9, 
  3.467683307971325*^9}, {3.467684688094121*^9, 3.467684688708902*^9}, {
  3.467686192829955*^9, 3.467686243302435*^9}, {3.467924372455039*^9, 
  3.467924372981361*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetNextIndex", "[", 
    RowBox[{
     RowBox[{"mat_", "?", "MatrixQ"}], ",", "ind_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RandomSample", "[", 
     RowBox[{
      RowBox[{"Flatten", "@", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"mat", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "ind"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"s_", "/;", 
          RowBox[{"s", ">", "0"}]}]}], "]"}]}], ",", "1"}], "]"}], "//", 
    "First"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.467682679096374*^9, 3.4676827081867247`*^9}, {
  3.4676827940617447`*^9, 3.46768280229926*^9}, {3.4676832344281893`*^9, 
  3.467683307971325*^9}, {3.467684688094121*^9, 3.467684688708902*^9}, {
  3.467686192829955*^9, 3.467686243302435*^9}, {3.4676867331727133`*^9, 
  3.467686767940647*^9}, {3.467686798563641*^9, 3.467686823589509*^9}, {
  3.467920085113027*^9, 3.467920086239912*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetNextIndex", "[", 
  RowBox[{"mat", ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.467683290692069*^9, 3.467683294882627*^9}, 
   3.467684943487109*^9}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{{3.467683295254849*^9, 3.467683318361149*^9}, {
   3.467684272796774*^9, 3.467684277761294*^9}, 3.467684503511642*^9, 
   3.467684711530773*^9, {3.467684915297152*^9, 3.467684943663328*^9}, 
   3.46768610458009*^9, 3.467918535698243*^9, 3.46791856738979*^9, 
   3.4679194138072157`*^9, 3.46792028404727*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nodeSequence", "=", 
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GetNextIndex", "[", 
       RowBox[{"mat", ",", "#"}], "]"}], "&"}], ",", "1", ",", "400"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodeSequenceList", "=", 
   RowBox[{"FoldList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Append", "[", 
       RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
     RowBox[{"{", "}"}], ",", "nodeSequence"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"visitCountsList", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "ns", "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{"ns", ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"Length", "[", "methanolNeighbors", "]"}]}], "]"}]}]}], 
      "]"}], ",", "nodeSequenceList"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nodeCounts", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{"nodeSequence", ",", "#"}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Length", "[", "methanolNeighbors", "]"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"eVec", "=", 
  RowBox[{
   RowBox[{"nodeCounts", "/", 
    RowBox[{"Norm", "[", "nodeCounts", "]"}]}], "//", "N"}]}]}], "Input",
 CellChangeTimes->{{3.467683400675002*^9, 3.467683480651231*^9}, 
   3.467683528853256*^9, 3.467684344870871*^9, 3.467684508244389*^9, {
   3.4676845476192493`*^9, 3.467684547987097*^9}, {3.467684593779655*^9, 
   3.467684657524598*^9}, {3.4676862496686153`*^9, 3.4676862510368357`*^9}, {
   3.467686302160054*^9, 3.467686316508884*^9}, {3.467686368405561*^9, 
   3.467686386950704*^9}, {3.4676864506710052`*^9, 3.467686451778693*^9}, {
   3.467919423248967*^9, 3.467919440371007*^9}, {3.467921049843771*^9, 
   3.467921088895042*^9}, {3.4679211848721867`*^9, 3.467921186951124*^9}, {
   3.4679220501964912`*^9, 3.467922213019004*^9}, {3.467922440666746*^9, 
   3.467922441397463*^9}, {3.467922497321775*^9, 3.467922505503869*^9}, 
   3.467922840030081*^9, 3.467922921670066*^9, {3.467923611930295*^9, 
   3.467923614549218*^9}, {3.467924485840798*^9, 3.467924486084643*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"126", ",", "42", ",", "44", ",", "60", ",", "68", ",", "61"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.467684648721298*^9, 3.46768465774797*^9}, {
   3.4676846916459312`*^9, 3.467684695162941*^9}, {3.467686245554338*^9, 
   3.467686251545432*^9}, {3.467686302728607*^9, 3.467686316784812*^9}, {
   3.467686378129113*^9, 3.4676863876976624`*^9}, 3.467686452053565*^9, 
   3.4676868258129063`*^9, 3.467686871968911*^9, 3.467918568457201*^9, {
   3.4679194151318007`*^9, 3.4679194413723707`*^9}, 3.467919542782813*^9, 
   3.4679198405945873`*^9, 3.467920091627748*^9, {3.4679202841461897`*^9, 
   3.467920308013023*^9}, 3.4679210902698727`*^9, 3.467921187389052*^9, 
   3.467922214705305*^9, 3.467922442562663*^9, {3.467922497771061*^9, 
   3.467922506471504*^9}, 3.467922843678046*^9, 3.467922922480589*^9, {
   3.4679233727032223`*^9, 3.4679233808385572`*^9}, 3.467923415705998*^9, 
   3.467923615428995*^9, {3.46792372841195*^9, 3.467923730750005*^9}, {
   3.467923764734777*^9, 3.467923787242696*^9}, {3.46792401882722*^9, 
   3.467924064131144*^9}, {3.467924315553227*^9, 3.467924384455819*^9}, 
   3.467924454673077*^9, 3.467924487098937*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7096930490365297`", ",", "0.23656434967884324`", ",", 
   "0.24782931871116912`", ",", "0.33794907096977606`", ",", 
   "0.38300894709907957`", ",", "0.343581555485939`"}], "}"}]], "Output",
 CellChangeTimes->{{3.467684648721298*^9, 3.46768465774797*^9}, {
   3.4676846916459312`*^9, 3.467684695162941*^9}, {3.467686245554338*^9, 
   3.467686251545432*^9}, {3.467686302728607*^9, 3.467686316784812*^9}, {
   3.467686378129113*^9, 3.4676863876976624`*^9}, 3.467686452053565*^9, 
   3.4676868258129063`*^9, 3.467686871968911*^9, 3.467918568457201*^9, {
   3.4679194151318007`*^9, 3.4679194413723707`*^9}, 3.467919542782813*^9, 
   3.4679198405945873`*^9, 3.467920091627748*^9, {3.4679202841461897`*^9, 
   3.467920308013023*^9}, 3.4679210902698727`*^9, 3.467921187389052*^9, 
   3.467922214705305*^9, 3.467922442562663*^9, {3.467922497771061*^9, 
   3.467922506471504*^9}, 3.467922843678046*^9, 3.467922922480589*^9, {
   3.4679233727032223`*^9, 3.4679233808385572`*^9}, 3.467923415705998*^9, 
   3.467923615428995*^9, {3.46792372841195*^9, 3.467923730750005*^9}, {
   3.467923764734777*^9, 3.467923787242696*^9}, {3.46792401882722*^9, 
   3.467924064131144*^9}, {3.467924315553227*^9, 3.467924384455819*^9}, 
   3.467924454673077*^9, 3.467924487103071*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GetNextIndex", "[", 
       RowBox[{"mat", ",", "#"}], "]"}], "&"}], ",", "2", ",", "80000"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"t", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{"t", ",", "#"}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Length", "[", "methanolNeighbors", "]"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "/", 
   RowBox[{"Norm", "[", "t", "]"}]}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.467683400675002*^9, 3.467683480651231*^9}, 
   3.467683528853256*^9, 3.467684344870871*^9, 3.467684508244389*^9, {
   3.4676845476192493`*^9, 3.467684547987097*^9}, {3.467684593779655*^9, 
   3.467684657524598*^9}, {3.4676862496686153`*^9, 3.4676862510368357`*^9}, {
   3.467686302160054*^9, 3.467686316508884*^9}, {3.467686368405561*^9, 
   3.467686386950704*^9}, {3.467686444948346*^9, 3.4676864619021482`*^9}, {
   3.467686542232366*^9, 3.467686550085153*^9}, {3.467919446435314*^9, 
   3.467919448553046*^9}, {3.467920004109853*^9, 3.467920011133544*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "23336", ",", "10757", ",", "11377", ",", "12555", ",", "12037", ",", 
   "9939"}], "}"}]], "Output",
 CellChangeTimes->{{3.467686454391073*^9, 3.4676864629467*^9}, {
   3.467686543160516*^9, 3.467686551348477*^9}, 3.467686831900655*^9, 
   3.467686874549774*^9, 3.4679185707209387`*^9, 3.467919449472382*^9, 
   3.467919551327771*^9, 3.467919842836652*^9, {3.467920007005445*^9, 
   3.467920014976849*^9}, 3.467920104633741*^9, {3.467920286141149*^9, 
   3.4679203115243196`*^9}, 3.46792338436707*^9, 3.467923738248467*^9, 
   3.467923793980234*^9, 3.467924025475053*^9, 3.467924345298612*^9, 
   3.467924463600812*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6761873422127326`", ",", "0.3116964021332861`", ",", 
   "0.32966161263088184`", ",", "0.36379551257631376`", ",", 
   "0.3487858689670322`", ",", "0.28799391473484526`"}], "}"}]], "Output",
 CellChangeTimes->{{3.467686454391073*^9, 3.4676864629467*^9}, {
   3.467686543160516*^9, 3.467686551348477*^9}, 3.467686831900655*^9, 
   3.467686874549774*^9, 3.4679185707209387`*^9, 3.467919449472382*^9, 
   3.467919551327771*^9, 3.467919842836652*^9, {3.467920007005445*^9, 
   3.467920014976849*^9}, 3.467920104633741*^9, {3.467920286141149*^9, 
   3.4679203115243196`*^9}, 3.46792338436707*^9, 3.467923738248467*^9, 
   3.467923793980234*^9, 3.467924025475053*^9, 3.467924345298612*^9, 
   3.467924463604808*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixQ", "[", "mat", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "mat", "]"}]}], "Input",
 CellChangeTimes->{{3.467919576156378*^9, 3.467919579142418*^9}, {
  3.4679198706246223`*^9, 3.467919884393498*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.467919579647151*^9, {3.467919844594514*^9, 3.467919885007168*^9}, {
   3.4679202863374357`*^9, 3.467920311722492*^9}, 3.467923741287634*^9, 
   3.4679237993182077`*^9, 3.467924025757966*^9, 3.467924464693164*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{
  3.467919579647151*^9, {3.467919844594514*^9, 3.467919885007168*^9}, {
   3.4679202863374357`*^9, 3.467920311722492*^9}, 3.467923741287634*^9, 
   3.4679237993182077`*^9, 3.467924025757966*^9, 3.467924464730348*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Eigenvalues", "[", 
   RowBox[{"N", "@", "mat"}], "]"}], "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{
    RowBox[{"Eigenvectors", "[", 
     RowBox[{"N", "@", "mat"}], "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"v", "/", 
  RowBox[{"Norm", "[", "v", "]"}]}]}], "Input",
 CellChangeTimes->{{3.467686332472172*^9, 3.467686355355459*^9}, {
  3.467686413726122*^9, 3.467686415739277*^9}, {3.467686500219933*^9, 
  3.4676865204675903`*^9}, {3.467686846785158*^9, 3.467686855579995*^9}, {
  3.467923587318904*^9, 3.4679235886081867`*^9}}],

Cell[BoxData["0.9999999999999997`"], "Output",
 CellChangeTimes->{{3.467686346340946*^9, 3.467686356072176*^9}, 
   3.467686416114996*^9, {3.467686508695155*^9, 3.467686520845977*^9}, {
   3.467686835981598*^9, 3.467686855714526*^9}, 3.467918575310296*^9, 
   3.467919453526039*^9, 3.467919933973048*^9, {3.467920286485955*^9, 
   3.4679203127382317`*^9}, 3.467923589391169*^9, 3.467923800734612*^9, 
   3.467924028661413*^9, 3.46792434945539*^9, 3.467924466896722*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6751874559964766`", ",", "0.3119036124249574`", ",", 
   "0.3300493474033007`", ",", "0.3667214971147787`", ",", 
   "0.3451496443433209`", ",", "0.2903317596534997`"}], "}"}]], "Output",
 CellChangeTimes->{{3.467686346340946*^9, 3.467686356072176*^9}, 
   3.467686416114996*^9, {3.467686508695155*^9, 3.467686520845977*^9}, {
   3.467686835981598*^9, 3.467686855714526*^9}, 3.467918575310296*^9, 
   3.467919453526039*^9, 3.467919933973048*^9, {3.467920286485955*^9, 
   3.4679203127382317`*^9}, 3.467923589391169*^9, 3.467923800734612*^9, 
   3.467924028661413*^9, 3.46792434945539*^9, 3.46792446690058*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Norm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"v", "/", 
     RowBox[{"Norm", "[", "v", "]"}]}], "-", 
    RowBox[{"eVec", "/", 
     RowBox[{"Norm", "[", "eVec", "]"}]}]}], ",", "1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Norm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"v", "/", 
     RowBox[{"Norm", "[", "v", "]"}]}], "-", 
    RowBox[{"eVec", "/", 
     RowBox[{"Norm", "[", "eVec", "]"}]}]}], ",", "\[Infinity]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Norm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"v", "/", 
     RowBox[{"Norm", "[", "v", "]"}]}], "-", 
    RowBox[{"eVec", "/", 
     RowBox[{"Norm", "[", "eVec", "]"}]}]}], ",", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.467919957332189*^9, 3.467919987609901*^9}, {
  3.467923602179978*^9, 3.467923603634293*^9}, {3.467923808857048*^9, 
  3.46792381096087*^9}, {3.46792435515816*^9, 3.467924356508876*^9}, {
  3.4679243948817177`*^9, 3.467924405074655*^9}, {3.467924470484515*^9, 
  3.467924473947029*^9}}],

Cell[BoxData["0.225120278221465`"], "Output",
 CellChangeTimes->{{3.467919969469407*^9, 3.467919988257337*^9}, 
   3.46792002056982*^9, {3.467920096434699*^9, 3.4679201085409307`*^9}, {
   3.4679202867326803`*^9, 3.467920314376397*^9}, {3.467923591145811*^9, 
   3.467923604487475*^9}, {3.4679238024876413`*^9, 3.467923811690668*^9}, {
   3.467924350805105*^9, 3.467924357267188*^9}, {3.4679243881295853`*^9, 
   3.467924406165086*^9}, {3.467924468182911*^9, 3.467924474712421*^9}}],

Cell[BoxData["0.09758502221039597`"], "Output",
 CellChangeTimes->{{3.467919969469407*^9, 3.467919988257337*^9}, 
   3.46792002056982*^9, {3.467920096434699*^9, 3.4679201085409307`*^9}, {
   3.4679202867326803`*^9, 3.467920314376397*^9}, {3.467923591145811*^9, 
   3.467923604487475*^9}, {3.4679238024876413`*^9, 3.467923811690668*^9}, {
   3.467924350805105*^9, 3.467924357267188*^9}, {3.4679243881295853`*^9, 
   3.467924406165086*^9}, {3.467924468182911*^9, 3.467924474715992*^9}}],

Cell[BoxData["0.133772207316021`"], "Output",
 CellChangeTimes->{{3.467919969469407*^9, 3.467919988257337*^9}, 
   3.46792002056982*^9, {3.467920096434699*^9, 3.4679201085409307`*^9}, {
   3.4679202867326803`*^9, 3.467920314376397*^9}, {3.467923591145811*^9, 
   3.467923604487475*^9}, {3.4679238024876413`*^9, 3.467923811690668*^9}, {
   3.467924350805105*^9, 3.467924357267188*^9}, {3.4679243881295853`*^9, 
   3.467924406165086*^9}, {3.467924468182911*^9, 3.4679244747192307`*^9}}]
}, Closed]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"VRFunc", ",", "GraphPlotHighlightNodePair"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VRFunc", "[", 
    RowBox[{"coords_", ",", "v_", ",", "color_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"color", ",", 
     RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
     RowBox[{"Disk", "[", 
      RowBox[{"coords", ",", ".05"}], "]"}], ",", "White", ",", 
     RowBox[{"Text", "[", 
      RowBox[{"v", ",", "coords"}], "]"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"GraphPlotHighlightNodePair", "[", 
    RowBox[{"nrules_", ",", 
     RowBox[{"pair", ":", 
      RowBox[{"{", 
       RowBox[{"_", ",", "_"}], "}"}]}], ",", 
     RowBox[{"visitCounts_", "?", "VectorQ"}], ",", "maxVisitCounts_"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nvcounts", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Max", "[", "visitCounts", "]"}], ">", "0"}], ",", 
         RowBox[{"visitCounts", "/", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"maxVisitCounts", "===", "Automatic"}], ",", 
            RowBox[{"Max", "[", "visitCounts", "]"}], ",", "maxVisitCounts"}],
            "]"}]}], ",", "visitCounts"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GraphPlot", "[", 
      RowBox[{"nrules", ",", 
       RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", 
       RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgeRenderingFunction", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#2", "\[Equal]", "pair"}], ",", "Red", ",", "Black"}], 
             "]"}], ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"#1", ",", "0.05"}], "]"}]}], "}"}], "&"}], ")"}]}], ",", 
       RowBox[{"VertexRenderingFunction", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"VRFunc", "[", 
           RowBox[{"#1", ",", "#2", ",", 
            RowBox[{"RGBColor", "[", 
             RowBox[{
              RowBox[{
              "nvcounts", "\[LeftDoubleBracket]", "#2", 
               "\[RightDoubleBracket]"}], ",", "0", ",", 
              RowBox[{"1", "-", 
               RowBox[{
               "nvcounts", "\[LeftDoubleBracket]", "#2", 
                "\[RightDoubleBracket]"}]}]}], "]"}]}], "]"}], "&"}], ")"}]}],
        ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4679204644606867`*^9, 3.467920488372686*^9}, {
  3.467920701633503*^9, 3.4679207619313583`*^9}, {3.467920839320323*^9, 
  3.46792101372579*^9}, {3.467921101294795*^9, 3.467921173553721*^9}, {
  3.467921304082458*^9, 3.4679213108948*^9}, {3.46792180008645*^9, 
  3.4679218487962513`*^9}, {3.4679219622723503`*^9, 3.467922013682756*^9}, {
  3.467922373549654*^9, 3.467922397455182*^9}, {3.467922540826152*^9, 
  3.467922541377159*^9}, {3.4679227819401083`*^9, 3.4679228281719303`*^9}, {
  3.467922895675846*^9, 3.467922902816846*^9}, {3.467923397721925*^9, 
  3.467923403103438*^9}, {3.46792347073358*^9, 3.4679235076922903`*^9}, {
  3.467924172702879*^9, 3.467924172995758*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"VRFunc", ",", "GraphPlotHighlightNodePair"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VRFunc", "[", 
    RowBox[{"coords_", ",", "v_", ",", "color_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"color", ",", 
     RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
     RowBox[{"Disk", "[", 
      RowBox[{"coords", ",", ".05"}], "]"}], ",", "White", ",", 
     RowBox[{"Text", "[", 
      RowBox[{"v", ",", "coords"}], "]"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"GraphPlotHighlightNodePair", "[", 
    RowBox[{"nrules_", ",", 
     RowBox[{"pairs", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "_"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"visitCounts_", "?", "VectorQ"}], ",", "maxVisitCounts_"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nvcounts", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Max", "[", "visitCounts", "]"}], ">", "0"}], ",", 
         RowBox[{"visitCounts", "/", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"maxVisitCounts", "===", "Automatic"}], ",", 
            RowBox[{"Max", "[", "visitCounts", "]"}], ",", "maxVisitCounts"}],
            "]"}]}], ",", "visitCounts"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GraphPlot", "[", 
      RowBox[{"nrules", ",", 
       RowBox[{"DirectedEdges", "\[Rule]", "False"}], ",", 
       RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"EdgeRenderingFunction", "\[Rule]", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Which", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"#2", "==", 
             RowBox[{
             "pairs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "\[Equal]", 
             RowBox[{"Reverse", "[", 
              RowBox[{
              "pairs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
               "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"Arrow", "[", 
               RowBox[{
                RowBox[{"Sort", "[", "#1", "]"}], ",", "0.05"}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"#2", "==", 
             RowBox[{
             "pairs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "\[Equal]", 
             RowBox[{"Reverse", "[", 
              RowBox[{
              "pairs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
               "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"RGBColor", "[", 
               RowBox[{"0.7", ",", "0", ",", "0.3"}], "]"}], ",", 
              RowBox[{"Arrow", "[", 
               RowBox[{
                RowBox[{"Reverse", "@", 
                 RowBox[{"Sort", "@", "#1"}]}], ",", "0.05"}], "]"}]}], "}"}],
             ",", "\[IndentingNewLine]", 
            RowBox[{"#2", "\[Equal]", 
             RowBox[{
             "pairs", "\[LeftDoubleBracket]", "2", 
              "\[RightDoubleBracket]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"Arrow", "[", 
               RowBox[{"#1", ",", "0.05"}], "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"#2", "\[Equal]", 
             RowBox[{
             "pairs", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"RGBColor", "[", 
               RowBox[{"0.7", ",", "0", ",", "0.3"}], "]"}], ",", 
              RowBox[{"Arrow", "[", 
               RowBox[{"#1", ",", "0.05"}], "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"#2", "\[Equal]", 
             RowBox[{"Reverse", "[", 
              RowBox[{
              "pairs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
               "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"Arrow", "[", 
               RowBox[{
                RowBox[{"Reverse", "[", "#1", "]"}], ",", "0.05"}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"#2", "\[Equal]", 
             RowBox[{"Reverse", "[", 
              RowBox[{
              "pairs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
               "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"RGBColor", "[", 
               RowBox[{"0.7", ",", "0", ",", "0.3"}], "]"}], ",", 
              RowBox[{"Arrow", "[", 
               RowBox[{
                RowBox[{"Reverse", "[", "#1", "]"}], ",", "0.05"}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", "True", ",", 
            RowBox[{"{", 
             RowBox[{"Black", ",", 
              RowBox[{"Line", "[", "#1", "]"}]}], "}"}]}], "]"}], "&"}], 
         ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"VertexRenderingFunction", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"VRFunc", "[", 
           RowBox[{"#1", ",", "#2", ",", 
            RowBox[{"RGBColor", "[", 
             RowBox[{
              RowBox[{
              "nvcounts", "\[LeftDoubleBracket]", "#2", 
               "\[RightDoubleBracket]"}], ",", "0", ",", 
              RowBox[{"1", "-", 
               RowBox[{
               "nvcounts", "\[LeftDoubleBracket]", "#2", 
                "\[RightDoubleBracket]"}]}]}], "]"}]}], "]"}], "&"}], ")"}]}],
        ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4679204644606867`*^9, 3.467920488372686*^9}, {
   3.467920701633503*^9, 3.4679207619313583`*^9}, {3.467920839320323*^9, 
   3.46792101372579*^9}, {3.467921101294795*^9, 3.467921173553721*^9}, {
   3.467921304082458*^9, 3.4679213108948*^9}, {3.46792180008645*^9, 
   3.4679218487962513`*^9}, {3.4679219622723503`*^9, 3.467922013682756*^9}, {
   3.467922373549654*^9, 3.467922397455182*^9}, {3.467922540826152*^9, 
   3.467922541377159*^9}, {3.4679227819401083`*^9, 3.4679228281719303`*^9}, {
   3.467922895675846*^9, 3.467922902816846*^9}, {3.467923397721925*^9, 
   3.467923403103438*^9}, {3.46792347073358*^9, 3.4679235076922903`*^9}, {
   3.467924172702879*^9, 3.467924172995758*^9}, 3.467930016539462*^9, {
   3.4679310618828907`*^9, 3.4679310983225193`*^9}, {3.4679311744054127`*^9, 
   3.467931190634094*^9}, {3.467931616490631*^9, 3.46793164107445*^9}, {
   3.467931843931653*^9, 3.4679318684149113`*^9}, {3.467932014447785*^9, 
   3.46793201498281*^9}, {3.4679320480851583`*^9, 3.46793212455632*^9}, {
   3.467932159726658*^9, 3.4679321598202257`*^9}, {3.467932450618946*^9, 
   3.467932486986343*^9}, {3.467932519281632*^9, 3.467932524349386*^9}, {
   3.4679325702854548`*^9, 3.467932614751247*^9}, {3.4679335050064907`*^9, 
   3.4679335380314627`*^9}, {3.467933752632697*^9, 3.467933896307707*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pairedPairs", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"Partition", "[", 
        RowBox[{"nodeSequence", ",", "2", ",", "1"}], "]"}]}], "]"}], ",", 
     "2", ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.467931680214512*^9, 3.4679316885224047`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"grList", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GraphPlotHighlightNodePair", "[", 
       RowBox[{"nrules", ",", "#1", ",", "#2", ",", 
        RowBox[{"Max", "[", "nodeCounts", "]"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"pairedPairs", ",", "visitCountsList"}], "}"}], ",", "1"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.467921179347416*^9, 3.467921264165224*^9}, {
   3.467921861497882*^9, 3.467921878814705*^9}, {3.467922019984973*^9, 
   3.4679220325849543`*^9}, {3.467922250420946*^9, 3.46792225061569*^9}, {
   3.46792233450313*^9, 3.467922340112956*^9}, {3.467922552606922*^9, 
   3.467922612180385*^9}, {3.467922649564808*^9, 3.467922708020577*^9}, {
   3.467922861820222*^9, 3.4679228630320044`*^9}, {3.4679235145338907`*^9, 
   3.467923536737879*^9}, {3.4679241030630302`*^9, 3.467924109122406*^9}, {
   3.467924263618325*^9, 3.4679242706290913`*^9}, {3.467931104894178*^9, 
   3.467931120763702*^9}, {3.467931358121093*^9, 3.467931365513795*^9}, {
   3.467931496283229*^9, 3.467931509139679*^9}, 3.467931675726815*^9, 
   3.467931890507597*^9}],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"grList", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.467921179347416*^9, 3.467921264165224*^9}, {
   3.467921861497882*^9, 3.467921878814705*^9}, {3.467922019984973*^9, 
   3.4679220325849543`*^9}, {3.467922250420946*^9, 3.46792225061569*^9}, {
   3.46792233450313*^9, 3.467922340112956*^9}, {3.467922552606922*^9, 
   3.467922612180385*^9}, {3.467922649564808*^9, 3.467922708020577*^9}, {
   3.467922861820222*^9, 3.4679228630320044`*^9}, {3.4679235145338907`*^9, 
   3.467923536737879*^9}, {3.4679241030630302`*^9, 3.467924109122406*^9}, {
   3.467924263618325*^9, 3.4679242706290913`*^9}, {3.467931104894178*^9, 
   3.467931120763702*^9}, {3.467931358121093*^9, 3.467931365513795*^9}, {
   3.4679314076532993`*^9, 3.4679314104429607`*^9}, {3.467931451131158*^9, 
   3.46793145150003*^9}, 3.467932682823748*^9, 3.467932716467826*^9, 
   3.4679342373963833`*^9}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Molecule rank model", "Section",
 CellChangeTimes->{{3.441484372896103*^9, 3.4414843841097603`*^9}, {
  3.459990484503503*^9, 3.4599904861991873`*^9}, {3.466286205692135*^9, 
  3.4662862190897017`*^9}}],

Cell[TextData[{
 "As it was postulated above, we can assume that if we have seen and studied \
a molecule we would be interested to see molecules that have similar, \
slightly different structures. Changing slightly the notation, we will say \
that the molecule ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " links to the molecule ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]]],
 ", if large part of chemical bonds of ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]]],
 " are also found in ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 ". In this way the molecules are connected in a directed graph."
}], "Text",
 CellChangeTimes->{{3.441503428248461*^9, 3.441503557086754*^9}, {
  3.441504605684226*^9, 3.441504691766577*^9}, {3.441562696604349*^9, 
  3.441562703185645*^9}, {3.441616600072953*^9, 3.4416167008728533`*^9}, {
  3.441616754594408*^9, 3.4416167936968718`*^9}, {3.44457423098031*^9, 
  3.444574304833066*^9}, {3.466548245887454*^9, 3.46654846589999*^9}, {
  3.4670637700984297`*^9, 3.467063785041997*^9}, {3.467064073505308*^9, 
  3.467064086045603*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["adjacency matrix",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]]],
 " of the molecule connection graph is defined in the following way: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", 
     RowBox[{"i", " ", "j"}]], "=", "1"}], TraditionalForm]]],
 " if the molecule ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " links to molecule ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", 
     RowBox[{"i", " ", "j"}]], "=", "0"}], TraditionalForm]]],
 " otherwise. Obviously, with this definition",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", "A"}], TraditionalForm]]],
 " is asymmetric, because in general ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", 
     RowBox[{"i", " ", "j"}]], "\[NotEqual]", 
    SubscriptBox["A", 
     RowBox[{"j", " ", "i"}]]}], TraditionalForm]]],
 ". Note, that the total number of molecules to which molecule ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " links to is given by the sum of the ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 "-th row of the matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.441503428248461*^9, 3.441503557086754*^9}, {
   3.441504605684226*^9, 3.441504691766577*^9}, {3.441562696604349*^9, 
   3.441562703185645*^9}, {3.441616600072953*^9, 3.4416167008728533`*^9}, {
   3.441616754594408*^9, 3.441616810312389*^9}, {3.44161691956365*^9, 
   3.441617082634873*^9}, {3.441617142484735*^9, 3.441617154046604*^9}, {
   3.4416196279342537`*^9, 3.4416197917366657`*^9}, 3.444574364077495*^9, {
   3.444575112413319*^9, 3.444575115881179*^9}, 3.445012629941053*^9, {
   3.466548474194137*^9, 3.466548579956769*^9}, {3.467063802581608*^9, 
   3.4670638171434*^9}, {3.467064059588142*^9, 3.4670641053022137`*^9}, {
   3.467064689608837*^9, 3.467064744209732*^9}, {3.467584268958708*^9, 
   3.467584268958856*^9}, {3.4675934723341703`*^9, 3.467593479180005*^9}}],

Cell["\<\
Let us consider first the model of molecule prestige which is similar to \
molecule rank but it allows easier formulation.\
\>", "Text",
 CellChangeTimes->{{3.44156322324115*^9, 3.441563304672426*^9}, {
  3.466548586806551*^9, 3.4665486171053867`*^9}}],

Cell["\<\
The general idea for computing the molecule prestige, is to postulate that \
the prestige of a molecule depends on the prestige of the molecules that link \
to it.\
\>", "Text",
 CellChangeTimes->{{3.441562516144837*^9, 3.441562547748333*^9}, {
   3.441562664927171*^9, 3.441562673611019*^9}, {3.441563033375104*^9, 
   3.441563133632105*^9}, {3.441617188787301*^9, 3.4416172549930573`*^9}, 
   3.44162056681922*^9, {3.441620718254552*^9, 3.441620730561429*^9}, {
   3.4665487176881247`*^9, 3.466548753763566*^9}, 3.4698251993570137`*^9}],

Cell[TextData[{
 "For each molecule ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", " "}], TraditionalForm]]],
 "the ",
 StyleBox["prestige score",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", "i", ")"}], TraditionalForm]]],
 " is defined to be"
}], "Text",
 CellChangeTimes->{{3.441616529196516*^9, 3.441616565376315*^9}, {
  3.441619037912442*^9, 3.441619039042245*^9}, {3.4416207521606913`*^9, 
  3.4416207609615393`*^9}, {3.466548771750711*^9, 3.466548774042273*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"p", "(", "i", ")"}], "=", 
   RowBox[{"\[Lambda]", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["A", 
       RowBox[{"j", " ", "i"}]], 
      RowBox[{
       RowBox[{"p", "(", "j", ")"}], "."}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.441563147527086*^9, 3.441563179577313*^9}, {
   3.44161590417299*^9, 3.441615962418707*^9}, {3.441616332725081*^9, 
   3.4416163576587057`*^9}, {3.441619250084305*^9, 3.441619251668764*^9}, 
   3.441619347766745*^9, {3.441620234594145*^9, 3.44162023495175*^9}, {
   3.467064022893572*^9, 3.467064029857744*^9}, {3.4670641179418592`*^9, 
   3.467064160153455*^9}}],

Cell[TextData[{
 "Where ",
 Cell[BoxData[
  FormBox["\[Lambda]", TraditionalForm]]],
 " is a scaling coefficient that is the same of all ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.441620239696847*^9, 3.441620287489689*^9}, {
  3.4449684106700277`*^9, 3.444968472689909*^9}, {3.4665487880509872`*^9, 
  3.466548788730298*^9}, {3.467059764545466*^9, 3.4670597649504433`*^9}}],

Cell[TextData[{
 "If we re-write the Equation 1 with the matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]]],
 " transposed"
}], "Text",
 CellChangeTimes->{{3.467061773356249*^9, 3.467061833719624*^9}, {
  3.467062002652752*^9, 3.4670620030574503`*^9}, {3.4698252184108753`*^9, 
  3.469825220785281*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"p", "(", "i", ")"}], "=", 
    RowBox[{"\[Lambda]", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox[
        SuperscriptBox["A", "T"], 
        RowBox[{"i", " ", "j"}]], 
       RowBox[{"p", "(", "j", ")"}]}]}]}]}], " ", ","}], 
  TraditionalForm]], "Equation",
 CellChangeTimes->{{3.467061865664947*^9, 3.467061883009838*^9}, {
  3.46706416304609*^9, 3.467064175297711*^9}}],

Cell["\<\
we can easily see in matrix notation that the Equation 1 can be written as\
\>", "Text",
 CellChangeTimes->{{3.467061835590912*^9, 3.467061897848296*^9}, {
  3.469825229746089*^9, 3.469825231032998*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   OverscriptBox["p", "\[Rule]"], "=", " ", 
   RowBox[{"\[Lambda]", " ", 
    SuperscriptBox["A", "T"], 
    RowBox[{
     OverscriptBox["p", "\[Rule]"], "."}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.4416192993068523`*^9, 3.441619340962009*^9}, {
  3.4416193837806807`*^9, 3.441619423453794*^9}, {3.441619856693966*^9, 
  3.4416198608272676`*^9}, {3.441620535656706*^9, 3.441620540730939*^9}, {
  3.4670604992536716`*^9, 3.4670605027822113`*^9}}],

Cell[TextData[{
 "Instead of looking at the prestige of a molecule, we can say that while \
studying the molecule ",
 Cell[BoxData[
  FormBox[
   RowBox[{"j", "  "}], TraditionalForm]]],
 "we go to study the molecule ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", " "}], TraditionalForm]]],
 " to which ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]]],
 " links to, with probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    SubscriptBox["L", "j"]}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", "j"], TraditionalForm]]],
 " is the total number of molecules the molecule ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]]],
 " links to. We can define the ",
 StyleBox["rank",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "(", "i", ")"}], TraditionalForm]]],
 " of a molecule ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " with a formula similar to (1):"
}], "Text",
 CellChangeTimes->{{3.4416208844831333`*^9, 3.441620924497294*^9}, {
   3.441621091289454*^9, 3.441621157734706*^9}, {3.441621222665794*^9, 
   3.441621352219329*^9}, {3.441622387070388*^9, 3.441622405041278*^9}, {
   3.441622513974818*^9, 3.44162257270151*^9}, {3.441977605937372*^9, 
   3.441977606454863*^9}, 3.444590445904855*^9, {3.444592390245053*^9, 
   3.444592403615739*^9}, 3.445012644931944*^9, {3.466549176762334*^9, 
   3.466549247480955*^9}, {3.467062034533841*^9, 3.467062068029408*^9}, {
   3.467062249316455*^9, 3.467062263710951*^9}, {3.467062451656527*^9, 
   3.467062524593081*^9}, {3.467064234821786*^9, 3.467064238462249*^9}, {
   3.467064361412717*^9, 3.4670643624390697`*^9}, {3.467077445117424*^9, 
   3.4670774487229843`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"r", "(", "i", ")"}], "=", 
   RowBox[{"\[Lambda]", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "n"], 
     RowBox[{
      FractionBox[
       SubscriptBox[
        SuperscriptBox["A", "T"], 
        RowBox[{"i", " ", "j"}]], 
       SubscriptBox["L", "j"]], 
      RowBox[{
       RowBox[{"r", "(", "j", ")"}], " ", "."}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.441563147527086*^9, 3.441563179577313*^9}, {
   3.44161590417299*^9, 3.441615962418707*^9}, {3.441616332725081*^9, 
   3.4416163576587057`*^9}, {3.441619250084305*^9, 3.441619251668764*^9}, 
   3.441619347766745*^9, {3.441620234594145*^9, 3.44162023495175*^9}, {
   3.441622427237789*^9, 3.441622450211609*^9}, {3.467062194642022*^9, 
   3.4670622017274513`*^9}, {3.467062528828103*^9, 3.467062529650166*^9}, {
   3.467064563644207*^9, 3.467064574994939*^9}}],

Cell[TextData[{
 "In order to write the last equation in matrix notation let us define the \
matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", ":"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.441622628659298*^9, 3.441622660376791*^9}, {
   3.441622693050391*^9, 3.4416227338763247`*^9}, 3.4698252621496553`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"j", " ", "i"}]], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      SubscriptBox["A", 
       RowBox[{"j", " ", "i"}]], 
      SubscriptBox["L", "j"]], "\[DoubleLongLeftRightArrow]", 
     SubscriptBox[
      SuperscriptBox["P", "T"], 
      RowBox[{"i", " ", "j"}]]}], "=", 
    RowBox[{
     FractionBox[
      SubscriptBox[
       SuperscriptBox["A", "T"], 
       RowBox[{"i", " ", "j"}]], 
      SubscriptBox["L", "j"]], "."}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.441622748310665*^9, 3.441622756211164*^9}, {
  3.441622842700508*^9, 3.441622968467018*^9}, {3.467062535994813*^9, 
  3.467062536809223*^9}, {3.46706330538309*^9, 3.4670633971726913`*^9}}],

Cell["Then we have", "Text",
 CellChangeTimes->{{3.441622978403865*^9, 3.441622981705263*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   OverscriptBox["r", "\[Rule]"], "=", 
   RowBox[{"\[Lambda]", " ", 
    SuperscriptBox["P", "T"], 
    RowBox[{
     OverscriptBox["r", "\[Rule]"], "."}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.441622997267446*^9, 3.441623098460074*^9}}],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", "j"], TraditionalForm]]],
 " is the sum of the of the ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]]],
 "-th row of ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]]],
 " we note that the elements of each column of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["P", "T"], TraditionalForm]]],
 " have the sum ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]]],
 ":"
}], "Text",
 CellChangeTimes->{{3.467063035812354*^9, 3.467063102053155*^9}, {
  3.4670647764024277`*^9, 3.467064826718854*^9}, {3.4698252738318453`*^9, 
  3.4698252744365883`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox[
     SuperscriptBox["P", "T"], 
     RowBox[{"i", " ", "j"}]]}], "=", 
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     FractionBox[
      SubscriptBox[
       SuperscriptBox["A", "T"], 
       RowBox[{"i", " ", "j"}]], 
      SubscriptBox["L", "j"]]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SubscriptBox["L", "j"]], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       SubscriptBox[
        SuperscriptBox["A", "T"], 
        RowBox[{"i", " ", "j"}]]}]}], "=", 
     RowBox[{
      FractionBox[
       SubscriptBox["L", "j"], 
       SubscriptBox["L", "j"]], "=", "1."}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.467063130133788*^9, 3.467063259220907*^9}, {
  3.4670634799211903`*^9, 3.4670635481571817`*^9}, {3.467063579068261*^9, 
  3.467063603841855*^9}, {3.4675842322385693`*^9, 3.4675842455718813`*^9}, {
  3.467628447032858*^9, 3.4676284512269087`*^9}}],

Cell[TextData[{
 "Matrices the columns of which have sum 1 are called column-stochastic. Let \
us contemplate on the product of the column-stochastic matrix ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["P", "T"], TraditionalForm]]],
 " with a stochastic vector ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[Rule]"], TraditionalForm]]],
 " characterized with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SubscriptBox["x", "i"]}], "=", "1"}], TraditionalForm]]],
 ". Consider first the case when the ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]]],
 "-th coordinate of ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[Rule]"], TraditionalForm]]],
 " is ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]]],
 " and the rest of the coordinates are ",
 Cell[BoxData[
  FormBox["0", TraditionalForm]]],
 ". The resulting vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["P", "T"], 
     OverscriptBox["x", "\[Rule]"]}], "=", 
    OverscriptBox["r", "\[Rule]"]}], TraditionalForm]]],
 " has non-zero values at the set of indices ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "k"], TraditionalForm]]],
 " characterized as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"i", " ", "\[Element]", 
       SubscriptBox["I", 
        RowBox[{"k", " "}]]}], "|", 
      SubscriptBox[
       SuperscriptBox["P", "T"], 
       RowBox[{"i", " ", "k"}]]}], "=", 
     RowBox[{"1", "/", 
      SubscriptBox["L", "k"]}]}], "}"}], TraditionalForm]]],
 ". We can interpret this result in the following way: if we wander randomly \
over the nodes of the graph and if we are at node ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]]],
 " with probability ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]]],
 " then we would go to the each of the nodes in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "k"], TraditionalForm]]],
 " with probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    SubscriptBox["L", "k"]}], TraditionalForm]]],
 ". If ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[Rule]"], TraditionalForm]]],
 " has two non-zero coordinates ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "k"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "l"], TraditionalForm]]],
 " then for a node ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", "\[Element]", 
    RowBox[{
     SubscriptBox["I", "k"], "\[Intersection]", 
     SubscriptBox["I", "l"]}]}], TraditionalForm]]],
 " the probability to go to ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "k"], "/", 
     SubscriptBox["L", "k"]}], "+", 
    RowBox[{
     SubscriptBox["x", "l"], "/", 
     SubscriptBox["L", "l"]}]}], TraditionalForm]]],
 ". (See exercise ...)"
}], "Text",
 CellChangeTimes->{{3.467064865082795*^9, 3.4670648883789377`*^9}, {
   3.467078811828216*^9, 3.467078901232499*^9}, {3.4670791759582787`*^9, 
   3.467079324721633*^9}, {3.467079421794652*^9, 3.467079638578712*^9}, {
   3.467079920068014*^9, 3.467079931691677*^9}, {3.467080040764731*^9, 
   3.467080128094338*^9}, 3.467080183611787*^9, {3.467080798482136*^9, 
   3.467080834322379*^9}, {3.467081141029194*^9, 3.467081172824046*^9}, {
   3.467081204031999*^9, 3.467081232456313*^9}, {3.467081289185833*^9, 
   3.467081345427438*^9}, {3.467081986656885*^9, 3.467082078316382*^9}, {
   3.467082115015799*^9, 3.46708219086089*^9}, 3.467083312037917*^9, {
   3.467083344839987*^9, 3.467083354312056*^9}, {3.467083391237419*^9, 
   3.4670833984325314`*^9}, {3.467084739327663*^9, 3.4670848261822643`*^9}, {
   3.467084922564591*^9, 3.467084934319014*^9}, {3.4670850701248426`*^9, 
   3.46708523340211*^9}, {3.4670853075433693`*^9, 3.4670853326024*^9}, {
   3.467085489308899*^9, 3.467085552827042*^9}, {3.46708563279561*^9, 
   3.4670857007305813`*^9}, {3.4670873541888742`*^9, 
   3.4670874108794203`*^9}, {3.467087447195553*^9, 3.4670875011471987`*^9}, {
   3.467087566023107*^9, 3.4670875692755547`*^9}, {3.467087599838132*^9, 
   3.467087601923139*^9}, 3.467226871353985*^9, {3.467227161656281*^9, 
   3.467227259384427*^9}, {3.4672273183642607`*^9, 3.467227362975873*^9}, {
   3.467227415588057*^9, 3.467227528649605*^9}, {3.467227755904648*^9, 
   3.467227764000514*^9}, {3.467582659918437*^9, 3.467582679773789*^9}, {
   3.467584223674591*^9, 3.4675842253604603`*^9}, {3.467628457903541*^9, 
   3.467628483034994*^9}, {3.469825373780838*^9, 3.4698253742309017`*^9}, {
   3.469825441035446*^9, 3.4698254629333687`*^9}, {3.469825501148575*^9, 
   3.4698255304325943`*^9}, 3.62518017539542*^9}],

Cell[TextData[{
 "If the number of molecules and hence the number of nodes in the molecule \
graph is ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 ", the ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 "-th coordinate of a stochastic vector ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[Rule]"], TraditionalForm]]],
 " of dimension ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " can be interpreted as the probability to pick node ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " in the graph. Or if we consider a random walk in the molecule graph during \
which at each step if we are at node ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]]],
 " we choose to go any of the nodes ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "k"], TraditionalForm]]],
 " then ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]]],
 " is the probability be at node ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " after a certain number of steps. With the interpretation of the column \
stochastic matrix ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["P", "T"], TraditionalForm]]],
 " with the stochastic vector ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[Rule]"], TraditionalForm]]],
 " it should be clear that  \[Ellipsis]"
}], "Text",
 CellChangeTimes->{{3.467064865082795*^9, 3.4670648883789377`*^9}, {
   3.467078811828216*^9, 3.467078901232499*^9}, {3.4670791759582787`*^9, 
   3.467079324721633*^9}, {3.467079421794652*^9, 3.467079638578712*^9}, {
   3.467079920068014*^9, 3.467079931691677*^9}, {3.467080040764731*^9, 
   3.467080128094338*^9}, 3.467080183611787*^9, {3.467080798482136*^9, 
   3.467080834322379*^9}, {3.467081141029194*^9, 3.467081172824046*^9}, {
   3.467081204031999*^9, 3.467081232456313*^9}, {3.467081289185833*^9, 
   3.467081345427438*^9}, {3.467081986656885*^9, 3.467082078316382*^9}, {
   3.467082115015799*^9, 3.46708219086089*^9}, 3.467083312037917*^9, {
   3.467083344839987*^9, 3.467083354312056*^9}, {3.467083391237419*^9, 
   3.4670833984325314`*^9}, {3.467084739327663*^9, 3.4670848261822643`*^9}, {
   3.467084922564591*^9, 3.467084934319014*^9}, {3.4670850701248426`*^9, 
   3.46708523340211*^9}, {3.4670853075433693`*^9, 3.4670853326024*^9}, {
   3.467085489308899*^9, 3.467085552827042*^9}, {3.46708563279561*^9, 
   3.4670857007305813`*^9}, {3.4670873541888742`*^9, 
   3.4670874108794203`*^9}, {3.467087447195553*^9, 3.4670875011471987`*^9}, {
   3.467087566023107*^9, 3.4670875692755547`*^9}, {3.467087599838132*^9, 
   3.467087601923139*^9}, 3.467226871353985*^9, {3.467227161656281*^9, 
   3.467227259384427*^9}, {3.4672273183642607`*^9, 3.467227362975873*^9}, {
   3.467227415588057*^9, 3.467227528640147*^9}, {3.467228382177807*^9, 
   3.46722858113008*^9}, {3.467582687755494*^9, 3.467582691379785*^9}, {
   3.467582854278982*^9, 3.467582854279098*^9}, {3.467628488012097*^9, 
   3.467628495978006*^9}, {3.6253103488911963`*^9, 3.625310349360095*^9}, {
   3.625310385521934*^9, 3.625310421091692*^9}}],

Cell[TextData[{
 "From this matrix-vector product interpretation we can say that the matrix \
",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["P", "T"], TraditionalForm]]],
 " transforms vectors the coordinates of which \[Ellipsis]"
}], "Text",
 CellChangeTimes->{{3.467064865082795*^9, 3.4670648883789377`*^9}, {
   3.467078811828216*^9, 3.467078901232499*^9}, {3.4670791759582787`*^9, 
   3.467079324721633*^9}, {3.467079421794652*^9, 3.467079638578712*^9}, {
   3.467079920068014*^9, 3.467079931691677*^9}, {3.467080040764731*^9, 
   3.467080128094338*^9}, 3.467080183611787*^9, {3.467080798482136*^9, 
   3.467080834322379*^9}, {3.467081141029194*^9, 3.467081172824046*^9}, {
   3.467081204031999*^9, 3.467081232456313*^9}, {3.467081289185833*^9, 
   3.467081345427438*^9}, {3.467081986656885*^9, 3.467082078316382*^9}, {
   3.467082115015799*^9, 3.46708219086089*^9}, 3.467083312037917*^9, {
   3.467083344839987*^9, 3.467083354312056*^9}, {3.467083391237419*^9, 
   3.4670833984325314`*^9}, {3.467084739327663*^9, 3.4670848261822643`*^9}, {
   3.467084922564591*^9, 3.467084934319014*^9}, {3.4670850701248426`*^9, 
   3.46708523340211*^9}, {3.4670853075433693`*^9, 3.4670853326024*^9}, {
   3.467085489308899*^9, 3.467085552827042*^9}, {3.46708563279561*^9, 
   3.4670857007305813`*^9}, {3.4670873541888742`*^9, 
   3.4670874108794203`*^9}, {3.467087447195553*^9, 3.4670875011471987`*^9}, {
   3.467087566023107*^9, 3.4670875692755547`*^9}, {3.467087599838132*^9, 
   3.467087601923139*^9}, 3.467226871353985*^9, {3.467227161656281*^9, 
   3.467227259384427*^9}, {3.4672273183642607`*^9, 3.467227362975873*^9}, {
   3.467227415588057*^9, 3.467227528640147*^9}, {3.467228382177807*^9, 
   3.467228383214981*^9}, 3.625180180168065*^9, {3.625310438002809*^9, 
   3.625310445110784*^9}}],

Cell["Equations (2) and (4) can be written in the form", "Text",
 CellChangeTimes->{{3.4670612102114487`*^9, 3.467061220690576*^9}, {
  3.4670615153512993`*^9, 3.467061538058958*^9}, {3.4670616118636427`*^9, 
  3.467061622835333*^9}, {3.46706276527768*^9, 3.467062770605978*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"M", " ", 
     OverscriptBox["x", "\[Rule]"]}], " ", "=", " ", 
    RowBox[{"\[Lambda]", " ", 
     OverscriptBox["x", "\[Rule]"]}]}], ","}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.46706123569248*^9, 3.467061286637104*^9}, {
  3.4670613323768387`*^9, 3.467061338420959*^9}, {3.4675826995497913`*^9, 
  3.467582703473337*^9}}],

Cell[TextData[{
 "in which ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]]],
 " is a matrix, ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[Rule]"], TraditionalForm]]],
 " is a vector and ",
 Cell[BoxData[
  FormBox["\[Lambda]", TraditionalForm]]],
 " is scalar. The problems of finding vectors and scalars that satisfy \
Equation 6 for a given matrix are called respectively eigenvector finding \
problem and eigenvalue problem finding problem. "
}], "Text",
 CellChangeTimes->{{3.467061340064005*^9, 3.4670614854430513`*^9}, 
   3.467061544022222*^9, {3.467061658410151*^9, 3.46706165873997*^9}, {
   3.467062801108728*^9, 3.4670628431396303`*^9}, 3.4670629985381804`*^9, {
   3.4675827067562237`*^9, 3.467582706756329*^9}}],

Cell[TextData[{
 "To solve equations (2) and (5) we need find the eigenvectors and \
eigenvalues of ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.467061340064005*^9, 3.4670614854430513`*^9}, 
   3.467061544022222*^9, {3.467061658410151*^9, 3.46706165873997*^9}, {
   3.467062801108728*^9, 3.467062953220756*^9}, 3.467063002438732*^9}],

Cell["\<\
To this end, we have cast the problem of finding molecule ranks to the \
computation of the eigenvectors of the connectivity matrix of a directed \
graph which has the molecules as nodes. The matrix for the molecule ranks is \
derived considering all possible random walks on a that graph. Several groups \
of questions have to be answered with detail:\
\>", "Text",
 CellChangeTimes->{{3.441977758925523*^9, 3.441977833662142*^9}, {
   3.441977865335579*^9, 3.44197810461559*^9}, {3.441978526185375*^9, 
   3.44197853148053*^9}, {3.444593075371871*^9, 3.444593099032374*^9}, 
   3.445012662963756*^9, {3.4665493061904182`*^9, 3.4665493522232428`*^9}}],

Cell[CellGroupData[{

Cell["\<\
How adequate is our connection of the molecules in the graph? Can the \
rationale for these connections be justified or proved in some way?\
\>", "Item",
 CellChangeTimes->{{3.4419780731284227`*^9, 3.441978086103191*^9}, {
  3.441978245070479*^9, 3.4419782682070637`*^9}, {3.4419784963798656`*^9, 
  3.4419788484388866`*^9}, {3.4419788866291*^9, 3.441979006195043*^9}, {
  3.44459314150361*^9, 3.444593149017139*^9}, {3.444593209866238*^9, 
  3.444593219906639*^9}, {3.444866671584765*^9, 3.444866685453699*^9}, {
  3.466549475952941*^9, 3.4665495863323097`*^9}, {3.469826401581593*^9, 
  3.469826405744814*^9}}],

Cell["How the choice of a similarity threshold should be made?", "Item",
 CellChangeTimes->{{3.4419780731284227`*^9, 3.441978086103191*^9}, {
  3.441978245070479*^9, 3.4419782682070637`*^9}, {3.4419784963798656`*^9, 
  3.4419788484388866`*^9}, {3.4419788866291*^9, 3.441979006195043*^9}, {
  3.44459314150361*^9, 3.444593149017139*^9}, {3.444593209866238*^9, 
  3.444593219906639*^9}, {3.444866671584765*^9, 3.444866685453699*^9}, {
  3.466549475952941*^9, 3.466549589296589*^9}, {3.4698265401837893`*^9, 
  3.469826567191782*^9}, {3.62531050065628*^9, 3.625310500911944*^9}}],

Cell["\<\
Which eigenvector should we take? The one with the largest eigenvalue? Is the \
existence of an eigenvector with all positive coordinates guaranteed? How do \
we compute this eigenvector?\
\>", "Item",
 CellChangeTimes->{{3.441978271286501*^9, 3.441978382683707*^9}, 
   3.441978426201234*^9, 3.4448668034481163`*^9, {3.62531051830834*^9, 
   3.625310518810932*^9}}],

Cell["\<\
Can we utilize the chemical or physical properties of the molecules in this \
model?\
\>", "Item",
 CellChangeTimes->{{3.441979152819961*^9, 3.441979172703953*^9}, {
   3.4419792120819197`*^9, 3.441979222735774*^9}, {3.4419793721698923`*^9, 
   3.441979409511853*^9}, 3.445012681112153*^9, {3.466549408487409*^9, 
   3.46654943013974*^9}, {3.466549637045211*^9, 3.466549637387623*^9}}],

Cell["\<\
Should the manner in which the search is conducted be included in the model? \
Should we find the most probable search completions? (I.e. should we find the \
rank of each search completion.)\
\>", "Item",
 CellChangeTimes->{{3.441979225495963*^9, 3.441979341184019*^9}, {
  3.444866837218343*^9, 3.4448668379544153`*^9}, {3.445012685689693*^9, 
  3.445012695217876*^9}, {3.466549436363842*^9, 3.466549436531567*^9}}]
}, Open  ]],

Cell["Let us answer these questions in turn.", "Text",
 CellChangeTimes->{{3.470179128702746*^9, 3.470179142376302*^9}}],

Cell["Connection between molecules", "Subsubsubsection",
 CellChangeTimes->{{3.469826419609228*^9, 3.469826446552993*^9}}],

Cell["Eigenvector calculation", "Subsubsubsection",
 CellChangeTimes->{{3.470182144134584*^9, 3.470182150243738*^9}}],

Cell["Nearest neighbors", "Subsubsubsection",
 CellChangeTimes->{{3.470182157307942*^9, 3.470182163195387*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inherent prestige", "Section",
 CellChangeTimes->{{3.444869784829794*^9, 3.444869790985693*^9}}],

Cell[TextData[{
 "For a large amount of molecules it might happen that the number of \
inter-links based on sharing common molecule structure is too small and the \
graph is not connected, or the graph can be easily made disconnected by \
removing few vertices or edges. This kind of graph sparsity can be overcome \
if we include a background probability to switch from a molecule to any other \
molecule. (In other words, in our model we also consider that a chemistry \
student would randomly open a page of a molecule for any or no reason.) The \
background probability can be uniform for all molecules or to be related to \
molecules popularity or ",
 StyleBox["prestige",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.444873160763672*^9, 3.4448732009139423`*^9}, {
   3.4449073781907463`*^9, 3.444907401280326*^9}, {3.444907650268379*^9, 
   3.444907653051944*^9}, {3.444907800652892*^9, 3.444907810035843*^9}, {
   3.444908216756426*^9, 3.444908242528348*^9}, {3.4449086786357737`*^9, 
   3.4449087049606867`*^9}, {3.444909530827465*^9, 3.444909547672802*^9}, {
   3.444912148523589*^9, 3.4449122338898287`*^9}, {3.444966185203086*^9, 
   3.4449662085542192`*^9}, {3.444966248658856*^9, 3.444966269282433*^9}, {
   3.4449663678679457`*^9, 3.444966392913529*^9}, {3.4449665010828543`*^9, 
   3.444966584416667*^9}, {3.444966642525119*^9, 3.444966672081538*^9}, {
   3.4449667185658712`*^9, 3.444966740729208*^9}, {3.4449667844496193`*^9, 
   3.44496678521747*^9}, {3.444966825796997*^9, 3.444966951722014*^9}, {
   3.444967013909737*^9, 3.4449670303857594`*^9}, {3.444967443949326*^9, 
   3.444967452385974*^9}, {3.444967509358324*^9, 3.444967520618143*^9}, 
   3.445012718999206*^9, {3.468347881774672*^9, 3.468347915769434*^9}, {
   3.4683479819238567`*^9, 3.468348017668187*^9}, {3.469313433828534*^9, 
   3.469313504311441*^9}, {3.6251643819299583`*^9, 3.625164412196024*^9}, {
   3.6251797537955027`*^9, 3.625179838474951*^9}, {3.625179884773301*^9, 
   3.625180045027742*^9}, 3.625180190655394*^9}],

Cell[TextData[{
 "If we have data about the inherent prestige about the nodes (molecules) \
then we can use that data as an initial prestige for the recursive rank \
calculations specified by formulas (1) and (3). We can either use the \
prestige perspective and assign the initial (inherent) prestige to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "(", 
    RowBox[{"i", ",", "i"}], ")"}], TraditionalForm]]],
 ", or if we work with the ranking matrix that comes from the \"random \
molecule surfer\" perspective, we can increase the probability the surfers to \
choose the molecules with larger initial prestige. "
}], "Text",
 CellChangeTimes->{{3.4449678788430157`*^9, 3.4449678953299026`*^9}, {
   3.444967961836204*^9, 3.4449679888335247`*^9}, {3.4449682299381313`*^9, 
   3.444968331909911*^9}, {3.4449687963742228`*^9, 3.444968898506199*^9}, {
   3.4449691165811768`*^9, 3.444969118522566*^9}, {3.444969150047069*^9, 
   3.4449691910817833`*^9}, {3.444969292328086*^9, 3.44496931085478*^9}, {
   3.444969555413144*^9, 3.4449696022181387`*^9}, {3.44496970684925*^9, 
   3.444969718474402*^9}, {3.4449699558033524`*^9, 3.444969960779418*^9}, {
   3.444970105844582*^9, 3.444970115025813*^9}, {3.4449702610768433`*^9, 
   3.4449703095781813`*^9}, {3.444971585261428*^9, 3.444971616426795*^9}, 
   3.444971666898905*^9, {3.625164426470387*^9, 3.625164435787737*^9}, {
   3.625164470013556*^9, 3.6251644858505383`*^9}}],

Cell[TextData[{
 "For example, assume that many of the molecules have known number of \
popularity votes assigned to them, and the vote for the molecule ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "i"], TraditionalForm]]],
 ". Let us designate with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["1", "\[RightVector]"], " "}], TraditionalForm]]],
 "the vector ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "1", ",", "...", ",", "1"}], "]"}], "T"], 
   TraditionalForm]]],
 " of length ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "m"], TraditionalForm]]],
 " (the total number of molecules). Then we construct the matrix ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 " as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"[", 
       RowBox[{
        SubscriptBox["v", "1"], ",", 
        SubscriptBox["v", "2"], ",", "...", ",", 
        SubscriptBox["v", "n"]}], "]"}], "T"], "\[CenterDot]", 
     SuperscriptBox[
      OverscriptBox["1", "\[RightVector]"], "T"]}]}], TraditionalForm]]],
 ", and we change the ranking matrix to be  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["P", "T"], "+", "V"}], TraditionalForm]]],
 " instead of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["P", "T"], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.4449678788430157`*^9, 3.4449678953299026`*^9}, {
   3.444967961836204*^9, 3.4449679888335247`*^9}, {3.4449682299381313`*^9, 
   3.444968331909911*^9}, {3.4449687963742228`*^9, 3.444968898506199*^9}, {
   3.4449691165811768`*^9, 3.444969118522566*^9}, {3.444969150047069*^9, 
   3.4449691910817833`*^9}, {3.444969292328086*^9, 3.44496931085478*^9}, {
   3.444969555413144*^9, 3.4449696022181387`*^9}, {3.44496970684925*^9, 
   3.444969718474402*^9}, {3.4449699558033524`*^9, 3.444969960779418*^9}, {
   3.444970105844582*^9, 3.444970115025813*^9}, {3.4449702610768433`*^9, 
   3.444970382258765*^9}, {3.44497051218666*^9, 3.4449705302109823`*^9}, 
   3.444970561087372*^9, {3.444970597235991*^9, 3.444970608617578*^9}, 
   3.444970674478512*^9, {3.444970721923863*^9, 3.444970845699326*^9}, {
   3.444971128609171*^9, 3.444971129125008*^9}, {3.4449711775584307`*^9, 
   3.444971215791382*^9}, {3.444971250821541*^9, 3.4449713310949078`*^9}, 
   3.4449717212534437`*^9, {3.4449717703229027`*^9, 3.444971794926065*^9}, 
   3.444971843428117*^9, {3.4667380913360367`*^9, 3.466738093502098*^9}, {
   3.4667382966336517`*^9, 3.466738301964004*^9}, {3.466738333802252*^9, 
   3.4667383674602747`*^9}, {3.467060088575162*^9, 3.4670600964301167`*^9}, {
   3.467583806129026*^9, 3.467583806410129*^9}, {3.467583978730076*^9, 
   3.467584033285754*^9}, {3.467584070612874*^9, 3.467584071999648*^9}, {
   3.467584104390242*^9, 3.467584117330904*^9}, {3.625164504338352*^9, 
   3.625164534878394*^9}, {3.62531063864098*^9, 3.625310646085185*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"1", "/", 
       RowBox[{"Array", "[", 
        RowBox[{"v", ",", "4"}], "]"}]}], "}"}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", "4"}], "]"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"t", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.466738031951468*^9, 3.466738082233815*^9}, {
  3.466738118491918*^9, 3.466738131192618*^9}, {3.466738173757875*^9, 
  3.466738192944972*^9}, {3.466738418836585*^9, 3.466738436993431*^9}, {
  3.4675838307995157`*^9, 3.4675838364704638`*^9}, {3.467583926570993*^9, 
  3.467583934381971*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       RowBox[{"v", "[", "1", "]"}]], 
      FractionBox["1", 
       RowBox[{"v", "[", "1", "]"}]], 
      FractionBox["1", 
       RowBox[{"v", "[", "1", "]"}]], 
      FractionBox["1", 
       RowBox[{"v", "[", "1", "]"}]]},
     {
      FractionBox["1", 
       RowBox[{"v", "[", "2", "]"}]], 
      FractionBox["1", 
       RowBox[{"v", "[", "2", "]"}]], 
      FractionBox["1", 
       RowBox[{"v", "[", "2", "]"}]], 
      FractionBox["1", 
       RowBox[{"v", "[", "2", "]"}]]},
     {
      FractionBox["1", 
       RowBox[{"v", "[", "3", "]"}]], 
      FractionBox["1", 
       RowBox[{"v", "[", "3", "]"}]], 
      FractionBox["1", 
       RowBox[{"v", "[", "3", "]"}]], 
      FractionBox["1", 
       RowBox[{"v", "[", "3", "]"}]]},
     {
      FractionBox["1", 
       RowBox[{"v", "[", "4", "]"}]], 
      FractionBox["1", 
       RowBox[{"v", "[", "4", "]"}]], 
      FractionBox["1", 
       RowBox[{"v", "[", "4", "]"}]], 
      FractionBox["1", 
       RowBox[{"v", "[", "4", "]"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.466738054843224*^9, 3.466738071440765*^9}, 
   3.4667381358150043`*^9, {3.4667381758684464`*^9, 3.46673819433887*^9}, {
   3.466738428870963*^9, 3.466738437945821*^9}, 3.467583935358383*^9, 
   3.625180083595619*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"Array", "[", 
       RowBox[{"v", ",", "4"}], "]"}], "}"}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", "4"}], "]"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"t", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.466738031951468*^9, 3.466738082233815*^9}, {
  3.466738118491918*^9, 3.466738131192618*^9}, {3.466738173757875*^9, 
  3.466738192944972*^9}, {3.466738418836585*^9, 3.466738436993431*^9}, {
  3.4675838307995157`*^9, 3.467583868135458*^9}, {3.4675839101138487`*^9, 
  3.4675839169934998`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"v", "[", "1", "]"}], 
      RowBox[{"v", "[", "1", "]"}], 
      RowBox[{"v", "[", "1", "]"}], 
      RowBox[{"v", "[", "1", "]"}]},
     {
      RowBox[{"v", "[", "2", "]"}], 
      RowBox[{"v", "[", "2", "]"}], 
      RowBox[{"v", "[", "2", "]"}], 
      RowBox[{"v", "[", "2", "]"}]},
     {
      RowBox[{"v", "[", "3", "]"}], 
      RowBox[{"v", "[", "3", "]"}], 
      RowBox[{"v", "[", "3", "]"}], 
      RowBox[{"v", "[", "3", "]"}]},
     {
      RowBox[{"v", "[", "4", "]"}], 
      RowBox[{"v", "[", "4", "]"}], 
      RowBox[{"v", "[", "4", "]"}], 
      RowBox[{"v", "[", "4", "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.467583868901966*^9, 3.4675839129620943`*^9, 
  3.625180084824368*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Existence and convergence ", "Section",
 CellChangeTimes->{{3.4449558311459637`*^9, 3.4449558497678337`*^9}, {
   3.444955895650701*^9, 3.444955898963249*^9}, 3.444956337632559*^9}],

Cell[TextData[{
 "If for any two nodes in a graph there is a path connecting them, then that \
graph is called ",
 StyleBox["strongly connected",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". The graph we are dealing with is strongly connected, because it is \
un-plausible that there will be molecule which does not at share at least one \
bond with another molecule.  Hence the matrix representing the graph is ",
 StyleBox["irreducible",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.44501182843071*^9, 3.445011938174463*^9}, {
  3.445012010114054*^9, 3.445012099971465*^9}, {3.44501213267404*^9, 
  3.445012214403125*^9}, {3.445012318244991*^9, 3.445012332564854*^9}, {
  3.44501274827725*^9, 3.445012753845206*^9}, {3.6251781559199743`*^9, 
  3.625178201121106*^9}, {3.689691346381669*^9, 3.689691346774344*^9}}],

Cell["\<\
For a positive, irreducible matrix the existence of an eigenvector with all \
positive components which also is the one with the largest eigenvalue is \
guaranteed by Perron-Frobenious theory; see Meyer [3]. \
\>", "Text",
 CellChangeTimes->{{3.445011637710041*^9, 3.445011695178551*^9}, {
  3.445011785884414*^9, 3.445011818764769*^9}, {3.445012200579977*^9, 
  3.445012200642854*^9}, {3.445012395430086*^9, 3.445012438390809*^9}, {
  3.445012497660778*^9, 3.445012506712083*^9}, {3.4667385078099737`*^9, 
  3.466738525127296*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Geometric interpretation of eigenvectors and eigenvalues", "Section",
 CellChangeTimes->{{3.467305832764021*^9, 3.4673058626189547`*^9}, {
  3.467307239442658*^9, 3.467307256169965*^9}}],

Cell[TextData[{
 "Given a matrix ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]]],
 " let us consider the equation"
}], "Text",
 CellChangeTimes->{{3.4673060631330757`*^9, 3.4673061486725073`*^9}, 
   3.467307123356387*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Lambda]", " ", 
    OverscriptBox["x", "\[Rule]"]}], "=", 
   RowBox[{"M", " ", 
    OverscriptBox["x", "\[Rule]"]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.467306152545576*^9, 3.4673061954137697`*^9}, 
   3.4673062369781218`*^9, {3.467307126067391*^9, 3.467307144659318*^9}, {
   3.467582716981406*^9, 3.46758271925675*^9}}],

Cell[TextData[{
 "and give interpretation of the vectors and scalars that are solutions of \
it. If we multiply the matrix ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]]],
 " with a vector that is a solution of the equation the resulting vector has \
the same direction but possibly different orientation or an different length. \
Let us consider as concrete example "
}], "Text",
 CellChangeTimes->{{3.467306197527919*^9, 3.467306258464108*^9}, {
   3.467307070525589*^9, 3.4673071194658957`*^9}, {3.4673071503891582`*^9, 
   3.467307235865484*^9}, {3.467307352176605*^9, 3.4673073555334787`*^9}, 
   3.625180197489891*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "1"},
      {"1", 
       RowBox[{"5", "/", "2"}]}
     },
     GridBoxDividers->{
      "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4673073664160233`*^9, 3.467307450800027*^9}, {
  3.4673088476579103`*^9, 3.467308886790305*^9}, {3.4673202261734753`*^9, 
  3.467320233106388*^9}}],

Cell[TextData[{
 "If we multiply this matrix with vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], TraditionalForm]]],
 " we get ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"3", ",", "6"}], "}"}], TraditionalForm]]],
 " which is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], TraditionalForm]]],
 " multiplied by ",
 Cell[BoxData[
  FormBox["3", TraditionalForm]]],
 ":"
}], "Text",
 CellChangeTimes->{{3.467307502998468*^9, 3.467307559526778*^9}, {
  3.467320245788725*^9, 3.4673202524506073`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M", ".", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4673074570101643`*^9, 3.467307495386518*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{{3.4673074667366037`*^9, 3.467307495926403*^9}, 
   3.4673088641199512`*^9, 3.467319999903317*^9, 3.467320082239756*^9, 
   3.467320241661941*^9}]
}, Closed]],

Cell[TextData[{
 "Therefore ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "\[Rule]"], "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "=", "3"}], TraditionalForm]]],
 "  are solution of Equation (8) for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "1"},
       {"1", 
        RowBox[{"5", "/", "2"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
   TraditionalForm]]],
 ". Another solution of this equation is the vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "\[Rule]"], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "1"}], "}"}]}], TraditionalForm]]],
 " and the scalar ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "=", 
    RowBox[{"1", "/", "2"}]}], TraditionalForm]]],
 ":"
}], "Text",
 CellChangeTimes->{{3.46730756336619*^9, 3.4673076778862123`*^9}, {
   3.4673088421465816`*^9, 3.467308842347032*^9}, {3.467308903235289*^9, 
   3.467308919726259*^9}, {3.467320254979134*^9, 3.467320261692319*^9}, 
   3.4673202974701967`*^9, {3.467320925356062*^9, 3.467320957087208*^9}, {
   3.467321007897394*^9, 3.4673210287202873`*^9}, {3.4675827229864473`*^9, 
   3.467582724874769*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M", ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "2"}], ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4673074570101643`*^9, 3.467307495386518*^9}, {
  3.467320983287756*^9, 3.467320998504717*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.467320985321824*^9, 3.467320999301959*^9}}]
}, Closed]],

Cell[TextData[{
 "To get an idea how the matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "1"},
       {"1", 
        RowBox[{"5", "/", "2"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
   TraditionalForm]]],
 " transforms the points in the plane let us see how it transforms the points \
that lie on the unit circle. The black arrows show the eigenvectors ",
 Cell[BoxData[
  FormBox[Cell[TextData[Cell[BoxData[
    FormBox[
     RowBox[{"(", GridBox[{
        {"1"},
        {"2"}
       }], ")"}], TraditionalForm]]]]], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", "2"}]},
      {"1"}
     }], ")"}], TraditionalForm]]],
 ". In the plot below the gray arrows indicate which blue points on the unit \
circle are transformed into which red points after a multiplication with ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]]],
 ". "
}], "Text",
 CellChangeTimes->{{3.4673077377708683`*^9, 3.467307806426948*^9}, {
  3.467307911022094*^9, 3.467307985150326*^9}, {3.467308745121139*^9, 
  3.467308833349513*^9}, {3.467308890227511*^9, 3.4673088992327433`*^9}, {
  3.467319889923584*^9, 3.46731993541323*^9}, {3.467320265791444*^9, 
  3.4673202713909407`*^9}, {3.467321080400416*^9, 3.467321092606696*^9}, {
  3.467321227987453*^9, 3.46732123363175*^9}, {3.467323926761222*^9, 
  3.467324016471624*^9}, {3.4673240579143476`*^9, 3.467324102583604*^9}, {
  3.625310918783341*^9, 3.625310982973806*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cpoints", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}], ",", 
       RowBox[{"2", 
        RowBox[{"\[Pi]", "/", "60"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"Blue", ",", 
     RowBox[{"Point", "[", "cpoints", "]"}], ",", "\[IndentingNewLine]", 
     "Red", ",", 
     RowBox[{"Point", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"M", ".", "#"}], "&"}], "/@", "cpoints"}], "]"}], ",", 
     "\[IndentingNewLine]", "Gray", ",", 
     RowBox[{"Arrowheads", "[", "0.02", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"cpoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"M", ".", "#"}], "&"}], "/@", "cpoints"}]}], "}"}]}], 
      "]"}], ",", "\[IndentingNewLine]", "Black", ",", "\[IndentingNewLine]", 
     
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.467258582135038*^9, 3.467258765939044*^9}, {
  3.467258820141706*^9, 3.4672588502999697`*^9}, {3.467258940882806*^9, 
  3.4672589474764833`*^9}, {3.467286184752606*^9, 3.467286191688211*^9}, {
  3.467308156823097*^9, 3.467308164341156*^9}, {3.467308297946464*^9, 
  3.4673082984001017`*^9}, {3.4673083566641617`*^9, 3.467308365146636*^9}, {
  3.467308930735231*^9, 3.467308932979163*^9}, {3.467319722754963*^9, 
  3.467319794356083*^9}, {3.467320017510931*^9, 3.467320020357884*^9}, {
  3.467321050184424*^9, 3.467321055982423*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], 
    PointBox[NCache[{{1, 0}, {
       Cos[Rational[1, 30] Pi], Sin[Rational[1, 30] Pi]}, {
       Cos[Rational[1, 15] Pi], Sin[
        Rational[1, 15] Pi]}, {(Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
       Cos[Rational[2, 15] Pi], Sin[Rational[2, 15] Pi]}, {
       Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}, {
       Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       Cos[Rational[7, 30] Pi], Sin[Rational[7, 30] Pi]}, {
       Sin[Rational[7, 30] Pi], Cos[
        Rational[7, 30] Pi]}, {(Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (1 + 5^Rational[1, 2])}, {
       Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
       Sin[Rational[2, 15] Pi], Cos[Rational[2, 15] Pi]}, {
       Rational[1, 4] (-1 + 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       Sin[Rational[1, 15] Pi], Cos[Rational[1, 15] Pi]}, {
       Sin[Rational[1, 30] Pi], Cos[Rational[1, 30] Pi]}, {0, 
       1}, {-Sin[Rational[1, 30] Pi], Cos[Rational[1, 30] Pi]}, {-
        Sin[Rational[1, 15] Pi], Cos[Rational[1, 15] Pi]}, {
       Rational[1, 4] (1 - 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {-
        Sin[Rational[2, 15] Pi], Cos[Rational[2, 15] Pi]}, {
       Rational[-1, 2], Rational[1, 2] 
        3^Rational[1, 2]}, {-(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (1 + 5^Rational[1, 2])}, {-Sin[Rational[7, 30] Pi], 
        Cos[Rational[7, 30] Pi]}, {-Cos[Rational[7, 30] Pi], Sin[
        Rational[7, 30] Pi]}, {
       Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}, {-
        Cos[Rational[2, 15] Pi], Sin[
        Rational[2, 15] 
         Pi]}, {-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[1, 2], Rational[1, 4] (-1 + 5^Rational[1, 2])}, {-
        Cos[Rational[1, 15] Pi], Sin[Rational[1, 15] Pi]}, {-
        Cos[Rational[1, 30] Pi], Sin[Rational[1, 30] Pi]}, {-1, 
       0}, {-Cos[Rational[1, 30] Pi], -Sin[Rational[1, 30] Pi]}, {-
        Cos[Rational[1, 15] Pi], -
        Sin[Rational[1, 15] Pi]}, {-(Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (1 - 5^Rational[1, 2])}, {-Cos[Rational[2, 15] Pi], -
        Sin[Rational[2, 15] Pi]}, {
       Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {
       Rational[1, 4] (-1 - 5^
         Rational[1, 2]), -(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {-
        Cos[Rational[7, 30] Pi], -Sin[Rational[7, 30] Pi]}, {-
        Sin[Rational[7, 30] Pi], -
        Cos[Rational[7, 30] Pi]}, {-(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
       Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {-
        Sin[Rational[2, 15] Pi], -Cos[Rational[2, 15] Pi]}, {
       Rational[1, 4] (1 - 5^
         Rational[1, 2]), -(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[1, 2]}, {-Sin[Rational[1, 15] Pi], -
        Cos[Rational[1, 15] Pi]}, {-Sin[Rational[1, 30] Pi], -
        Cos[Rational[1, 30] Pi]}, {0, -1}, {
       Sin[Rational[1, 30] Pi], -Cos[Rational[1, 30] Pi]}, {
       Sin[Rational[1, 15] Pi], -Cos[Rational[1, 15] Pi]}, {
       Rational[1, 4] (-1 + 
         5^Rational[1, 2]), -(Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       Sin[Rational[2, 15] Pi], -Cos[Rational[2, 15] Pi]}, {
       Rational[1, 2], Rational[-1, 2] 
        3^Rational[1, 2]}, {(Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
       Sin[Rational[7, 30] Pi], -Cos[Rational[7, 30] Pi]}, {
       Cos[Rational[7, 30] Pi], -Sin[Rational[7, 30] Pi]}, {
       Rational[1, 4] (1 + 
         5^Rational[1, 2]), -(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {
       Cos[Rational[2, 15] Pi], -
        Sin[Rational[2, 15] Pi]}, {(Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (1 - 5^Rational[1, 2])}, {
       Cos[Rational[1, 15] Pi], -Sin[Rational[1, 15] Pi]}, {
       Cos[Rational[1, 30] Pi], -Sin[Rational[1, 30] Pi]}, {1, 0}}, {{1, 0}, {
       0.9945218953682733, 0.10452846326765346`}, {0.9781476007338057, 
       0.20791169081775931`}, {0.9510565162951535, 0.30901699437494745`}, {
       0.9135454576426009, 0.40673664307580015`}, {0.8660254037844386, 0.5}, {
       0.8090169943749475, 0.5877852522924731}, {0.7431448254773942, 
       0.6691306063588582}, {0.6691306063588582, 0.7431448254773942}, {
       0.5877852522924731, 0.8090169943749475}, {0.5, 0.8660254037844386}, {
       0.40673664307580015`, 0.9135454576426009}, {0.30901699437494745`, 
       0.9510565162951535}, {0.20791169081775931`, 0.9781476007338057}, {
       0.10452846326765346`, 0.9945218953682733}, {0, 
       1}, {-0.10452846326765346`, 
       0.9945218953682733}, {-0.20791169081775931`, 
       0.9781476007338057}, {-0.30901699437494745`, 
       0.9510565162951535}, {-0.40673664307580015`, 
       0.9135454576426009}, {-0.5, 0.8660254037844386}, {-0.5877852522924731, 
       0.8090169943749475}, {-0.6691306063588582, 
       0.7431448254773942}, {-0.7431448254773942, 
       0.6691306063588582}, {-0.8090169943749475, 
       0.5877852522924731}, {-0.8660254037844386, 0.5}, {-0.9135454576426009, 
       0.40673664307580015`}, {-0.9510565162951535, 
       0.30901699437494745`}, {-0.9781476007338057, 
       0.20791169081775931`}, {-0.9945218953682733, 
       0.10452846326765346`}, {-1, 
       0}, {-0.9945218953682733, -0.10452846326765346`}, \
{-0.9781476007338057, -0.20791169081775931`}, {-0.9510565162951535, \
-0.30901699437494745`}, {-0.9135454576426009, -0.40673664307580015`}, \
{-0.8660254037844386, -0.5}, {-0.8090169943749475, -0.5877852522924731}, \
{-0.7431448254773942, -0.6691306063588582}, {-0.6691306063588582, \
-0.7431448254773942}, {-0.5877852522924731, -0.8090169943749475}, {-0.5, \
-0.8660254037844386}, {-0.40673664307580015`, -0.9135454576426009}, \
{-0.30901699437494745`, -0.9510565162951535}, {-0.20791169081775931`, \
-0.9781476007338057}, {-0.10452846326765346`, -0.9945218953682733}, {0, -1}, {
       0.10452846326765346`, -0.9945218953682733}, {
       0.20791169081775931`, -0.9781476007338057}, {
       0.30901699437494745`, -0.9510565162951535}, {
       0.40673664307580015`, -0.9135454576426009}, {
       0.5, -0.8660254037844386}, {0.5877852522924731, -0.8090169943749475}, {
       0.6691306063588582, -0.7431448254773942}, {
       0.7431448254773942, -0.6691306063588582}, {
       0.8090169943749475, -0.5877852522924731}, {0.8660254037844386, -0.5}, {
       0.9135454576426009, -0.40673664307580015`}, {
       0.9510565162951535, -0.30901699437494745`}, {
       0.9781476007338057, -0.20791169081775931`}, {
       0.9945218953682733, -0.10452846326765346`}, {1, 0}}]]}, 
   {RGBColor[1, 0, 0], 
    PointBox[NCache[{{1, 1}, {
       Cos[Rational[1, 30] Pi] + Sin[Rational[1, 30] Pi], 
        Cos[Rational[1, 30] Pi] + Rational[5, 2] Sin[Rational[1, 30] Pi]}, {
       Cos[Rational[1, 15] Pi] + Sin[Rational[1, 15] Pi], 
        Cos[Rational[1, 15] Pi] + 
        Rational[5, 2] 
         Sin[Rational[1, 15] Pi]}, {(Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), (Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
        Rational[5, 8] (-1 + 5^Rational[1, 2])}, {
       Cos[Rational[2, 15] Pi] + Sin[Rational[2, 15] Pi], 
        Cos[Rational[2, 15] Pi] + Rational[5, 2] Sin[Rational[2, 15] Pi]}, {
       Rational[1, 2] + Rational[1, 2] 3^Rational[1, 2], Rational[5, 4] + 
        Rational[1, 2] 
         3^Rational[1, 2]}, {(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
        Rational[1, 4] (1 + 5^Rational[1, 2]), 
        Rational[5, 2] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[1, 4] (1 + 5^Rational[1, 2])}, {
       Cos[Rational[7, 30] Pi] + Sin[Rational[7, 30] Pi], 
        Cos[Rational[7, 30] Pi] + Rational[5, 2] Sin[Rational[7, 30] Pi]}, {
       Cos[Rational[7, 30] Pi] + Sin[Rational[7, 30] Pi], 
        Rational[5, 2] Cos[Rational[7, 30] Pi] + 
        Sin[Rational[7, 30] Pi]}, {(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
        Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
        Rational[5, 8] (1 + 5^Rational[1, 2])}, {
       Rational[1, 2] + Rational[1, 2] 3^Rational[1, 2], Rational[1, 2] + 
        Rational[5, 4] 3^Rational[1, 2]}, {
       Cos[Rational[2, 15] Pi] + Sin[Rational[2, 15] Pi], 
        Rational[5, 2] Cos[Rational[2, 15] Pi] + 
        Sin[Rational[2, 15] Pi]}, {(Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), 
        Rational[5, 2] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
       Cos[Rational[1, 15] Pi] + Sin[Rational[1, 15] Pi], 
        Rational[5, 2] Cos[Rational[1, 15] Pi] + Sin[Rational[1, 15] Pi]}, {
       Cos[Rational[1, 30] Pi] + Sin[Rational[1, 30] Pi], 
        Rational[5, 2] Cos[Rational[1, 30] Pi] + Sin[Rational[1, 30] Pi]}, {
       1, Rational[5, 2]}, {
       Cos[Rational[1, 30] Pi] - Sin[Rational[1, 30] Pi], 
        Rational[5, 2] Cos[Rational[1, 30] Pi] - Sin[Rational[1, 30] Pi]}, {
       Cos[Rational[1, 15] Pi] - Sin[Rational[1, 15] Pi], 
        Rational[5, 2] Cos[Rational[1, 15] Pi] - Sin[Rational[1, 15] Pi]}, {
       Rational[1, 4] (1 - 5^Rational[1, 2]) + (Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (1 - 5^Rational[1, 2]) + 
        Rational[5, 2] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
       Cos[Rational[2, 15] Pi] - Sin[Rational[2, 15] Pi], 
        Rational[5, 2] Cos[Rational[2, 15] Pi] - Sin[Rational[2, 15] Pi]}, {
       Rational[-1, 2] + Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2] + 
        Rational[5, 4] 
         3^Rational[1, 2]}, {-(Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
        Rational[1, 4] (1 + 
          5^Rational[1, 2]), -(Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
        Rational[5, 8] (1 + 5^Rational[1, 2])}, {
       Cos[Rational[7, 30] Pi] - Sin[Rational[7, 30] Pi], 
        Rational[5, 2] Cos[Rational[7, 30] Pi] - Sin[
        Rational[7, 30] Pi]}, {-Cos[Rational[7, 30] Pi] + 
        Sin[Rational[7, 30] Pi], -Cos[Rational[7, 30] Pi] + 
        Rational[5, 2] Sin[Rational[7, 30] Pi]}, {
       Rational[1, 4] (-1 - 5^Rational[1, 2]) + (Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
        Rational[5, 2] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
       Rational[1, 2] + Rational[-1, 2] 3^Rational[1, 2], Rational[5, 4] + 
        Rational[-1, 2] 3^Rational[1, 2]}, {-Cos[Rational[2, 15] Pi] + 
        Sin[Rational[2, 15] Pi], -Cos[Rational[2, 15] Pi] + 
        Rational[5, 2] 
         Sin[Rational[2, 15] Pi]}, {-(Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
        Rational[1, 4] (-1 + 
          5^Rational[1, 2]), -(Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
        Rational[5, 8] (-1 + 5^Rational[1, 2])}, {-Cos[Rational[1, 15] Pi] + 
        Sin[Rational[1, 15] Pi], -Cos[Rational[1, 15] Pi] + 
        Rational[5, 2] Sin[Rational[1, 15] Pi]}, {-Cos[Rational[1, 30] Pi] + 
        Sin[Rational[1, 30] Pi], -Cos[Rational[1, 30] Pi] + 
        Rational[5, 2] Sin[Rational[1, 30] Pi]}, {-1, -1}, {-
         Cos[Rational[1, 30] Pi] - Sin[
        Rational[1, 30] Pi], -Cos[Rational[1, 30] Pi] + 
        Rational[-5, 2] Sin[Rational[1, 30] Pi]}, {-Cos[Rational[1, 15] Pi] - 
        Sin[Rational[1, 15] Pi], -Cos[Rational[1, 15] Pi] + 
        Rational[-5, 2] Sin[Rational[1, 15] Pi]}, {
       Rational[1, 4] (1 - 5^Rational[1, 2]) - (Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[5, 8] (1 - 5^Rational[1, 2]) - (Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^
        Rational[1, 2]}, {-Cos[Rational[2, 15] Pi] - Sin[
        Rational[2, 15] Pi], -Cos[Rational[2, 15] Pi] + 
        Rational[-5, 2] Sin[Rational[2, 15] Pi]}, {
       Rational[-1, 2] + Rational[-1, 2] 3^Rational[1, 2], Rational[-5, 4] + 
        Rational[-1, 2] 3^Rational[1, 2]}, {
       Rational[1, 4] (-1 - 5^Rational[1, 2]) - (Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
        Rational[-5, 2] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {-Cos[Rational[7, 30] Pi] - Sin[
        Rational[7, 30] Pi], -Cos[Rational[7, 30] Pi] + 
        Rational[-5, 2] Sin[Rational[7, 30] Pi]}, {-Cos[Rational[7, 30] Pi] - 
        Sin[Rational[7, 30] Pi], Rational[-5, 2] Cos[Rational[7, 30] Pi] - 
        Sin[Rational[7, 30] Pi]}, {
       Rational[1, 4] (-1 - 5^Rational[1, 2]) - (Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[5, 8] (-1 - 5^Rational[1, 2]) - (Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       Rational[-1, 2] + Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2] + 
        Rational[-5, 4] 3^Rational[1, 2]}, {-Cos[Rational[2, 15] Pi] - Sin[
        Rational[2, 15] Pi], Rational[-5, 2] Cos[Rational[2, 15] Pi] - Sin[
        Rational[2, 15] Pi]}, {
       Rational[1, 4] (1 - 5^Rational[1, 2]) - (Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (1 - 5^Rational[1, 2]) + 
        Rational[-5, 2] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {-Cos[Rational[1, 15] Pi] - Sin[
        Rational[1, 15] Pi], Rational[-5, 2] Cos[Rational[1, 15] Pi] - Sin[
        Rational[1, 15] Pi]}, {-Cos[Rational[1, 30] Pi] - Sin[
        Rational[1, 30] Pi], Rational[-5, 2] Cos[Rational[1, 30] Pi] - Sin[
        Rational[1, 30] Pi]}, {-1, 
        Rational[-5, 2]}, {-Cos[Rational[1, 30] Pi] + Sin[Rational[1, 30] Pi],
         Rational[-5, 2] Cos[Rational[1, 30] Pi] + 
        Sin[Rational[1, 30] Pi]}, {-Cos[Rational[1, 15] Pi] + 
        Sin[Rational[1, 15] Pi], Rational[-5, 2] Cos[Rational[1, 15] Pi] + 
        Sin[Rational[1, 15] 
          Pi]}, {-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[1, 4] (-1 + 5^Rational[1, 2]), 
        Rational[-5, 2] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + 
        Rational[1, 4] (-1 + 5^Rational[1, 2])}, {-Cos[Rational[2, 15] Pi] + 
        Sin[Rational[2, 15] Pi], Rational[-5, 2] Cos[Rational[2, 15] Pi] + 
        Sin[Rational[2, 15] Pi]}, {
       Rational[1, 2] + Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2] + 
        Rational[-5, 4] 3^Rational[1, 2]}, {
       Rational[1, 4] (-1 - 5^Rational[1, 2]) + (Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[5, 8] (-1 - 5^Rational[1, 2]) + (Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {-
         Cos[Rational[7, 30] Pi] + Sin[Rational[7, 30] Pi], 
        Rational[-5, 2] Cos[Rational[7, 30] Pi] + Sin[Rational[7, 30] Pi]}, {
       Cos[Rational[7, 30] Pi] - Sin[Rational[7, 30] Pi], 
        Cos[Rational[7, 30] Pi] + 
        Rational[-5, 2] 
         Sin[Rational[7, 30] Pi]}, {-(Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
        Rational[1, 4] (1 + 5^Rational[1, 2]), 
        Rational[-5, 2] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[1, 4] (1 + 5^Rational[1, 2])}, {
       Rational[-1, 2] + Rational[1, 2] 3^Rational[1, 2], Rational[-5, 4] + 
        Rational[1, 2] 3^Rational[1, 2]}, {
       Cos[Rational[2, 15] Pi] - Sin[Rational[2, 15] Pi], 
        Cos[Rational[2, 15] Pi] + Rational[-5, 2] Sin[Rational[2, 15] Pi]}, {
       Rational[1, 4] (1 - 5^Rational[1, 2]) + (Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[5, 8] (1 - 5^Rational[1, 2]) + (Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       Cos[Rational[1, 15] Pi] - Sin[Rational[1, 15] Pi], 
        Cos[Rational[1, 15] Pi] + Rational[-5, 2] Sin[Rational[1, 15] Pi]}, {
       Cos[Rational[1, 30] Pi] - Sin[Rational[1, 30] Pi], 
        Cos[Rational[1, 30] Pi] + Rational[-5, 2] Sin[Rational[1, 30] Pi]}, {
       1, 1}}, {{1, 1}, {1.0990503586359268`, 1.255843053537407}, {
       1.186059291551565, 1.4979268277782039`}, {1.260073510670101, 
       1.7235990022325223`}, {1.320282100718401, 1.9303870653321011`}, {
       1.3660254037844386`, 2.1160254037844384`}, {1.3968022466674206`, 
       2.2784801251061304`}, {1.4122754318362525`, 2.41597134137454}, {
       1.4122754318362525`, 2.5269926700523437`}, {1.3968022466674206`, 
       2.6103277382298415`}, {1.3660254037844386`, 2.6650635094610964`}, {
       1.320282100718401, 2.6906002871823023`}, {1.260073510670101, 
       2.686658285112831}, {1.186059291551565, 2.6532806926522734`}, {
       1.0990503586359268`, 2.5908332016883366`}, {1, 2.5}, {
       0.8899934321006199, 2.38177627515303}, {0.7702359099160464, 
       2.237457311016755}, {0.6420395219202061, 2.068624296362936}, {
       0.5068088145668007, 1.877127001030702}, {0.3660254037844386, 
       1.6650635094610964`}, {0.22123174208247431`, 1.4347572336448955`}, {
       0.074014219118536, 1.1887314573346273`}, {-0.074014219118536, 
       0.9296816904197513}, {-0.22123174208247431`, 
       0.6604461363562355}, {-0.3660254037844386, 
       0.3839745962155614}, {-0.5068088145668007, 
       0.10329615004689952`}, {-0.6420395219202061, -0.1785140303577849}, \
{-0.7702359099160464, -0.4583683736894074}, {-0.8899934321006199, \
-0.7332007371991396}, {-1, -1}, {-1.0990503586359268`, -1.255843053537407}, \
{-1.186059291551565, -1.4979268277782039`}, {-1.260073510670101, \
-1.7235990022325223`}, {-1.320282100718401, -1.9303870653321011`}, \
{-1.3660254037844386`, -2.1160254037844384`}, {-1.3968022466674206`, \
-2.2784801251061304`}, {-1.4122754318362525`, -2.41597134137454}, \
{-1.4122754318362525`, -2.5269926700523437`}, {-1.3968022466674206`, \
-2.6103277382298415`}, {-1.3660254037844386`, -2.6650635094610964`}, \
{-1.320282100718401, -2.6906002871823023`}, {-1.260073510670101, \
-2.686658285112831}, {-1.186059291551565, -2.6532806926522734`}, \
{-1.0990503586359268`, -2.5908332016883366`}, {-1, -2.5}, \
{-0.8899934321006199, -2.38177627515303}, {-0.7702359099160464, \
-2.237457311016755}, {-0.6420395219202061, -2.068624296362936}, \
{-0.5068088145668007, -1.877127001030702}, {-0.3660254037844386, \
-1.6650635094610964`}, {-0.22123174208247431`, -1.4347572336448955`}, \
{-0.074014219118536, -1.1887314573346273`}, {
       0.074014219118536, -0.9296816904197513}, {
       0.22123174208247431`, -0.6604461363562355}, {
       0.3660254037844386, -0.3839745962155614}, {
       0.5068088145668007, -0.10329615004689952`}, {0.6420395219202061, 
       0.1785140303577849}, {0.7702359099160464, 0.4583683736894074}, {
       0.8899934321006199, 0.7332007371991396}, {1, 1}}]]}, 
   {GrayLevel[0.5], Arrowheads[
    0.02], {ArrowBox[{{1, 0}, {1, 1}}], 
     ArrowBox[NCache[{{Cos[Rational[1, 30] Pi], Sin[Rational[1, 30] Pi]}, {
        Cos[Rational[1, 30] Pi] + Sin[Rational[1, 30] Pi], 
         Cos[Rational[1, 30] Pi] + 
         Rational[5, 2] Sin[Rational[1, 30] Pi]}}, {{0.9945218953682733, 
       0.10452846326765346`}, {1.0990503586359268`, 1.255843053537407}}]], 
     ArrowBox[NCache[{{Cos[Rational[1, 15] Pi], Sin[Rational[1, 15] Pi]}, {
        Cos[Rational[1, 15] Pi] + Sin[Rational[1, 15] Pi], 
         Cos[Rational[1, 15] Pi] + 
         Rational[5, 2] Sin[Rational[1, 15] Pi]}}, {{0.9781476007338057, 
       0.20791169081775931`}, {1.186059291551565, 1.4979268277782039`}}]], 
     ArrowBox[NCache[{{(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[1, 2], 
         Rational[1, 4] (-1 + 
          5^Rational[1, 2])}, {(Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
         Rational[1, 4] (-1 + 5^Rational[1, 2]), (Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
         Rational[5, 8] (-1 + 5^Rational[1, 2])}}, {{0.9510565162951535, 
       0.30901699437494745`}, {1.260073510670101, 1.7235990022325223`}}]], 
     ArrowBox[NCache[{{Cos[Rational[2, 15] Pi], Sin[Rational[2, 15] Pi]}, {
        Cos[Rational[2, 15] Pi] + Sin[Rational[2, 15] Pi], 
         Cos[Rational[2, 15] Pi] + 
         Rational[5, 2] Sin[Rational[2, 15] Pi]}}, {{0.9135454576426009, 
       0.40673664307580015`}, {1.320282100718401, 1.9303870653321011`}}]], 
     ArrowBox[NCache[{{Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}, {
        Rational[1, 2] + Rational[1, 2] 3^Rational[1, 2], Rational[5, 4] + 
         Rational[1, 2] 3^Rational[1, 2]}}, {{0.8660254037844386, 0.5}, {
       1.3660254037844386`, 2.1160254037844384`}}]], 
     ArrowBox[NCache[{{
        Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^
         Rational[
          1, 2]}, {(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[1, 4] (1 + 5^Rational[1, 2]), 
         Rational[5, 2] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2] + Rational[1, 4] (1 + 5^Rational[1, 2])}}, {{
       0.8090169943749475, 0.5877852522924731}, {1.3968022466674206`, 
       2.2784801251061304`}}]], 
     ArrowBox[NCache[{{Cos[Rational[7, 30] Pi], Sin[Rational[7, 30] Pi]}, {
        Cos[Rational[7, 30] Pi] + Sin[Rational[7, 30] Pi], 
         Cos[Rational[7, 30] Pi] + 
         Rational[5, 2] Sin[Rational[7, 30] Pi]}}, {{0.7431448254773942, 
       0.6691306063588582}, {1.4122754318362525`, 2.41597134137454}}]], 
     ArrowBox[NCache[{{Sin[Rational[7, 30] Pi], Cos[Rational[7, 30] Pi]}, {
        Cos[Rational[7, 30] Pi] + Sin[Rational[7, 30] Pi], 
         Rational[5, 2] Cos[Rational[7, 30] Pi] + 
         Sin[Rational[7, 30] Pi]}}, {{0.6691306063588582, 
       0.7431448254773942}, {1.4122754318362525`, 2.5269926700523437`}}]], 
     ArrowBox[NCache[{{(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
         Rational[1, 2], 
         Rational[1, 4] (1 + 
          5^Rational[1, 2])}, {(Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
         Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
         Rational[5, 8] (1 + 5^Rational[1, 2])}}, {{0.5877852522924731, 
       0.8090169943749475}, {1.3968022466674206`, 2.6103277382298415`}}]], 
     ArrowBox[NCache[{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[1, 2] + Rational[1, 2] 3^Rational[1, 2], Rational[1, 2] + 
         Rational[5, 4] 3^Rational[1, 2]}}, {{0.5, 0.8660254037844386}, {
       1.3660254037844386`, 2.6650635094610964`}}]], 
     ArrowBox[NCache[{{Sin[Rational[2, 15] Pi], Cos[Rational[2, 15] Pi]}, {
        Cos[Rational[2, 15] Pi] + Sin[Rational[2, 15] Pi], 
         Rational[5, 2] Cos[Rational[2, 15] Pi] + 
         Sin[Rational[2, 15] Pi]}}, {{0.40673664307580015`, 
       0.9135454576426009}, {1.320282100718401, 2.6906002871823023`}}]], 
     ArrowBox[NCache[{{
        Rational[1, 4] (-1 + 5^Rational[1, 2]), (Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^
         Rational[1, 2]}, {(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[1, 4] (-1 + 5^Rational[1, 2]), 
         Rational[5, 2] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2] + Rational[1, 4] (-1 + 5^Rational[1, 2])}}, {{
       0.30901699437494745`, 0.9510565162951535}, {1.260073510670101, 
       2.686658285112831}}]], 
     ArrowBox[NCache[{{Sin[Rational[1, 15] Pi], Cos[Rational[1, 15] Pi]}, {
        Cos[Rational[1, 15] Pi] + Sin[Rational[1, 15] Pi], 
         Rational[5, 2] Cos[Rational[1, 15] Pi] + 
         Sin[Rational[1, 15] Pi]}}, {{0.20791169081775931`, 
       0.9781476007338057}, {1.186059291551565, 2.6532806926522734`}}]], 
     ArrowBox[NCache[{{Sin[Rational[1, 30] Pi], Cos[Rational[1, 30] Pi]}, {
        Cos[Rational[1, 30] Pi] + Sin[Rational[1, 30] Pi], 
         Rational[5, 2] Cos[Rational[1, 30] Pi] + 
         Sin[Rational[1, 30] Pi]}}, {{0.10452846326765346`, 
       0.9945218953682733}, {1.0990503586359268`, 2.5908332016883366`}}]], 
     ArrowBox[NCache[{{0, 1}, {1, Rational[5, 2]}}, {{0, 1}, {1, 2.5}}]], 
     ArrowBox[NCache[{{-Sin[Rational[1, 30] Pi], Cos[Rational[1, 30] Pi]}, {
        Cos[Rational[1, 30] Pi] - Sin[Rational[1, 30] Pi], 
         Rational[5, 2] Cos[Rational[1, 30] Pi] - Sin[
         Rational[1, 30] Pi]}}, {{-0.10452846326765346`, 
       0.9945218953682733}, {0.8899934321006199, 2.38177627515303}}]], 
     ArrowBox[NCache[{{-Sin[Rational[1, 15] Pi], Cos[Rational[1, 15] Pi]}, {
        Cos[Rational[1, 15] Pi] - Sin[Rational[1, 15] Pi], 
         Rational[5, 2] Cos[Rational[1, 15] Pi] - Sin[
         Rational[1, 15] Pi]}}, {{-0.20791169081775931`, 
       0.9781476007338057}, {0.7702359099160464, 2.237457311016755}}]], 
     ArrowBox[
      NCache[{{Rational[1, 4] (1 - 5^Rational[1, 2]), (Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
        Rational[1, 4] (1 - 5^Rational[1, 2]) + (Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (1 - 5^Rational[1, 2]) + 
         Rational[5, 2] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}}, {{-0.30901699437494745`, 0.9510565162951535}, {
       0.6420395219202061, 2.068624296362936}}]], 
     ArrowBox[NCache[{{-Sin[Rational[2, 15] Pi], Cos[Rational[2, 15] Pi]}, {
        Cos[Rational[2, 15] Pi] - Sin[Rational[2, 15] Pi], 
         Rational[5, 2] Cos[Rational[2, 15] Pi] - Sin[
         Rational[2, 15] Pi]}}, {{-0.40673664307580015`, 
       0.9135454576426009}, {0.5068088145668007, 1.877127001030702}}]], 
     ArrowBox[NCache[{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[-1, 2] + Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2] + 
         Rational[5, 4] 3^Rational[1, 2]}}, {{-0.5, 0.8660254037844386}, {
       0.3660254037844386, 1.6650635094610964`}}]], 
     ArrowBox[NCache[{{-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 
         Rational[1, 4] (1 + 
          5^Rational[1, 2])}, {-(Rational[5, 8] + 
            Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
         Rational[1, 4] (1 + 
           5^Rational[1, 2]), -(Rational[5, 8] + 
            Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
         Rational[5, 8] (1 + 5^Rational[1, 2])}}, {{-0.5877852522924731, 
       0.8090169943749475}, {0.22123174208247431`, 1.4347572336448955`}}]], 
     ArrowBox[NCache[{{-Sin[Rational[7, 30] Pi], Cos[Rational[7, 30] Pi]}, {
        Cos[Rational[7, 30] Pi] - Sin[Rational[7, 30] Pi], 
         Rational[5, 2] Cos[Rational[7, 30] Pi] - Sin[
         Rational[7, 30] Pi]}}, {{-0.6691306063588582, 0.7431448254773942}, {
       0.074014219118536, 1.1887314573346273`}}]], 
     ArrowBox[NCache[{{-Cos[Rational[7, 30] Pi], Sin[
         Rational[7, 30] Pi]}, {-Cos[Rational[7, 30] Pi] + 
         Sin[Rational[7, 30] Pi], -Cos[Rational[7, 30] Pi] + 
         Rational[5, 2] Sin[Rational[7, 30] Pi]}}, {{-0.7431448254773942, 
       0.6691306063588582}, {-0.074014219118536, 0.9296816904197513}}]], 
     ArrowBox[NCache[{{
        Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
        Rational[1, 4] (-1 - 5^Rational[1, 2]) + (Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
         Rational[5, 2] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}}, {{-0.8090169943749475, 
       0.5877852522924731}, {-0.22123174208247431`, 0.6604461363562355}}]], 
     ArrowBox[NCache[{{Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}, {
        Rational[1, 2] + Rational[-1, 2] 3^Rational[1, 2], Rational[5, 4] + 
         Rational[-1, 2] 3^Rational[1, 2]}}, {{-0.8660254037844386, 
       0.5}, {-0.3660254037844386, 0.3839745962155614}}]], 
     ArrowBox[NCache[{{-Cos[Rational[2, 15] Pi], Sin[
         Rational[2, 15] Pi]}, {-Cos[Rational[2, 15] Pi] + 
         Sin[Rational[2, 15] Pi], -Cos[Rational[2, 15] Pi] + 
         Rational[5, 2] Sin[Rational[2, 15] Pi]}}, {{-0.9135454576426009, 
       0.40673664307580015`}, {-0.5068088145668007, 0.10329615004689952`}}]], 
     ArrowBox[NCache[{{-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 
         Rational[1, 4] (-1 + 
          5^Rational[1, 2])}, {-(Rational[5, 8] + 
            Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
         Rational[1, 4] (-1 + 
           5^Rational[1, 2]), -(Rational[5, 8] + 
            Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2] + 
         Rational[5, 8] (-1 + 5^Rational[1, 2])}}, {{-0.9510565162951535, 
       0.30901699437494745`}, {-0.6420395219202061, -0.1785140303577849}}]], 
     ArrowBox[NCache[{{-Cos[Rational[1, 15] Pi], Sin[
         Rational[1, 15] Pi]}, {-Cos[Rational[1, 15] Pi] + 
         Sin[Rational[1, 15] Pi], -Cos[Rational[1, 15] Pi] + 
         Rational[5, 2] Sin[Rational[1, 15] Pi]}}, {{-0.9781476007338057, 
       0.20791169081775931`}, {-0.7702359099160464, -0.4583683736894074}}]], 
     ArrowBox[NCache[{{-Cos[Rational[1, 30] Pi], Sin[
         Rational[1, 30] Pi]}, {-Cos[Rational[1, 30] Pi] + 
         Sin[Rational[1, 30] Pi], -Cos[Rational[1, 30] Pi] + 
         Rational[5, 2] Sin[Rational[1, 30] Pi]}}, {{-0.9945218953682733, 
       0.10452846326765346`}, {-0.8899934321006199, -0.7332007371991396}}]], 
     ArrowBox[{{-1, 0}, {-1, -1}}], 
     ArrowBox[NCache[{{-Cos[Rational[1, 30] Pi], -
         Sin[Rational[1, 30] Pi]}, {-Cos[Rational[1, 30] Pi] - Sin[
         Rational[1, 30] Pi], -Cos[Rational[1, 30] Pi] + 
         Rational[-5, 2] 
          Sin[Rational[1, 30] 
            Pi]}}, {{-0.9945218953682733, -0.10452846326765346`}, \
{-1.0990503586359268`, -1.255843053537407}}]], 
     ArrowBox[NCache[{{-Cos[Rational[1, 15] Pi], -
         Sin[Rational[1, 15] Pi]}, {-Cos[Rational[1, 15] Pi] - Sin[
         Rational[1, 15] Pi], -Cos[Rational[1, 15] Pi] + 
         Rational[-5, 2] 
          Sin[Rational[1, 15] 
            Pi]}}, {{-0.9781476007338057, -0.20791169081775931`}, \
{-1.186059291551565, -1.4979268277782039`}}]], 
     ArrowBox[NCache[{{-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[1, 4] (1 - 5^Rational[1, 2])}, {
        Rational[1, 4] (1 - 5^Rational[1, 2]) - (Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[5, 8] (1 - 5^Rational[1, 2]) - (Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^
         Rational[
          1, 2]}}, {{-0.9510565162951535, -0.30901699437494745`}, \
{-1.260073510670101, -1.7235990022325223`}}]], 
     ArrowBox[NCache[{{-Cos[Rational[2, 15] Pi], -
         Sin[Rational[2, 15] Pi]}, {-Cos[Rational[2, 15] Pi] - Sin[
         Rational[2, 15] Pi], -Cos[Rational[2, 15] Pi] + 
         Rational[-5, 2] 
          Sin[Rational[2, 15] 
            Pi]}}, {{-0.9135454576426009, -0.40673664307580015`}, \
{-1.320282100718401, -1.9303870653321011`}}]], 
     ArrowBox[NCache[{{Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {
        Rational[-1, 2] + Rational[-1, 2] 3^Rational[1, 2], Rational[-5, 4] + 
         Rational[-1, 2] 
          3^Rational[
            1, 2]}}, {{-0.8660254037844386, -0.5}, {-1.3660254037844386`, \
-2.1160254037844384`}}]], 
     ArrowBox[NCache[{{
        Rational[1, 4] (-1 - 5^
          Rational[1, 2]), -(Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
        Rational[1, 4] (-1 - 5^Rational[1, 2]) - (Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
         Rational[-5, 2] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[
            1, 2]}}, {{-0.8090169943749475, -0.5877852522924731}, \
{-1.3968022466674206`, -2.2784801251061304`}}]], 
     ArrowBox[NCache[{{-Cos[Rational[7, 30] Pi], -
         Sin[Rational[7, 30] Pi]}, {-Cos[Rational[7, 30] Pi] - Sin[
         Rational[7, 30] Pi], -Cos[Rational[7, 30] Pi] + 
         Rational[-5, 2] 
          Sin[Rational[7, 30] 
            Pi]}}, {{-0.7431448254773942, -0.6691306063588582}, \
{-1.4122754318362525`, -2.41597134137454}}]], 
     ArrowBox[NCache[{{-Sin[Rational[7, 30] Pi], -
         Cos[Rational[7, 30] Pi]}, {-Cos[Rational[7, 30] Pi] - Sin[
         Rational[7, 30] Pi], Rational[-5, 2] Cos[Rational[7, 30] Pi] - Sin[
         Rational[7, 30] 
          Pi]}}, {{-0.6691306063588582, -0.7431448254773942}, \
{-1.4122754318362525`, -2.5269926700523437`}}]], 
     ArrowBox[NCache[{{-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
        Rational[1, 4] (-1 - 5^Rational[1, 2]) - (Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[5, 8] (-1 - 5^Rational[1, 2]) - (Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^
         Rational[
          1, 2]}}, {{-0.5877852522924731, -0.8090169943749475}, \
{-1.3968022466674206`, -2.6103277382298415`}}]], 
     ArrowBox[NCache[{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        Rational[-1, 2] + Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2] + 
         Rational[-5, 4] 
          3^Rational[
            1, 2]}}, {{-0.5, -0.8660254037844386}, {-1.3660254037844386`, \
-2.6650635094610964`}}]], 
     ArrowBox[NCache[{{-Sin[Rational[2, 15] Pi], -
         Cos[Rational[2, 15] Pi]}, {-Cos[Rational[2, 15] Pi] - Sin[
         Rational[2, 15] Pi], Rational[-5, 2] Cos[Rational[2, 15] Pi] - Sin[
         Rational[2, 15] 
          Pi]}}, {{-0.40673664307580015`, -0.9135454576426009}, \
{-1.320282100718401, -2.6906002871823023`}}]], 
     ArrowBox[NCache[{{
        Rational[1, 4] (1 - 5^
          Rational[1, 2]), -(Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
        Rational[1, 4] (1 - 5^Rational[1, 2]) - (Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (1 - 5^Rational[1, 2]) + 
         Rational[-5, 2] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[
            1, 2]}}, {{-0.30901699437494745`, -0.9510565162951535}, \
{-1.260073510670101, -2.686658285112831}}]], 
     ArrowBox[NCache[{{-Sin[Rational[1, 15] Pi], -
         Cos[Rational[1, 15] Pi]}, {-Cos[Rational[1, 15] Pi] - Sin[
         Rational[1, 15] Pi], Rational[-5, 2] Cos[Rational[1, 15] Pi] - Sin[
         Rational[1, 15] 
          Pi]}}, {{-0.20791169081775931`, -0.9781476007338057}, \
{-1.186059291551565, -2.6532806926522734`}}]], 
     ArrowBox[NCache[{{-Sin[Rational[1, 30] Pi], -
         Cos[Rational[1, 30] Pi]}, {-Cos[Rational[1, 30] Pi] - Sin[
         Rational[1, 30] Pi], Rational[-5, 2] Cos[Rational[1, 30] Pi] - Sin[
         Rational[1, 30] 
          Pi]}}, {{-0.10452846326765346`, -0.9945218953682733}, \
{-1.0990503586359268`, -2.5908332016883366`}}]], 
     ArrowBox[NCache[{{0, -1}, {-1, Rational[-5, 2]}}, {{
        0, -1}, {-1, -2.5}}]], 
     ArrowBox[NCache[{{
        Sin[Rational[1, 30] Pi], -
         Cos[Rational[1, 30] Pi]}, {-Cos[Rational[1, 30] Pi] + 
         Sin[Rational[1, 30] Pi], Rational[-5, 2] Cos[Rational[1, 30] Pi] + 
         Sin[Rational[1, 30] Pi]}}, {{
       0.10452846326765346`, -0.9945218953682733}, {-0.8899934321006199, \
-2.38177627515303}}]], 
     ArrowBox[NCache[{{
        Sin[Rational[1, 15] Pi], -
         Cos[Rational[1, 15] Pi]}, {-Cos[Rational[1, 15] Pi] + 
         Sin[Rational[1, 15] Pi], Rational[-5, 2] Cos[Rational[1, 15] Pi] + 
         Sin[Rational[1, 15] Pi]}}, {{
       0.20791169081775931`, -0.9781476007338057}, {-0.7702359099160464, \
-2.237457311016755}}]], 
     ArrowBox[NCache[{{
        Rational[1, 4] (-1 + 
          5^Rational[1, 2]), -(Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^
          Rational[
           1, 2]}, {-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2] + Rational[1, 4] (-1 + 5^Rational[1, 2]), 
         Rational[-5, 2] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2] + Rational[1, 4] (-1 + 5^Rational[1, 2])}}, {{
       0.30901699437494745`, -0.9510565162951535}, {-0.6420395219202061, \
-2.068624296362936}}]], 
     ArrowBox[NCache[{{
        Sin[Rational[2, 15] Pi], -
         Cos[Rational[2, 15] Pi]}, {-Cos[Rational[2, 15] Pi] + 
         Sin[Rational[2, 15] Pi], Rational[-5, 2] Cos[Rational[2, 15] Pi] + 
         Sin[Rational[2, 15] Pi]}}, {{
       0.40673664307580015`, -0.9135454576426009}, {-0.5068088145668007, \
-1.877127001030702}}]], 
     ArrowBox[NCache[{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        Rational[1, 2] + Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2] + 
         Rational[-5, 4] 3^Rational[1, 2]}}, {{
       0.5, -0.8660254037844386}, {-0.3660254037844386, \
-1.6650635094610964`}}]], 
     ArrowBox[NCache[{{(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
         Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
        Rational[1, 4] (-1 - 5^Rational[1, 2]) + (Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[5, 8] (-1 - 5^Rational[1, 2]) + (Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}}, {{
       0.5877852522924731, -0.8090169943749475}, {-0.22123174208247431`, \
-1.4347572336448955`}}]], 
     ArrowBox[NCache[{{
        Sin[Rational[7, 30] Pi], -
         Cos[Rational[7, 30] Pi]}, {-Cos[Rational[7, 30] Pi] + 
         Sin[Rational[7, 30] Pi], Rational[-5, 2] Cos[Rational[7, 30] Pi] + 
         Sin[Rational[7, 30] Pi]}}, {{
       0.6691306063588582, -0.7431448254773942}, {-0.074014219118536, \
-1.1887314573346273`}}]], 
     ArrowBox[NCache[{{Cos[Rational[7, 30] Pi], -Sin[Rational[7, 30] Pi]}, {
        Cos[Rational[7, 30] Pi] - Sin[Rational[7, 30] Pi], 
         Cos[Rational[7, 30] Pi] + 
         Rational[-5, 2] Sin[Rational[7, 30] Pi]}}, {{
       0.7431448254773942, -0.6691306063588582}, {
       0.074014219118536, -0.9296816904197513}}]], 
     ArrowBox[NCache[{{
        Rational[1, 4] (1 + 
          5^Rational[1, 2]), -(Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2])^
          Rational[
           1, 2]}, {-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2] + Rational[1, 4] (1 + 5^Rational[1, 2]), 
         Rational[-5, 2] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2] + Rational[1, 4] (1 + 5^Rational[1, 2])}}, {{
       0.8090169943749475, -0.5877852522924731}, {
       0.22123174208247431`, -0.6604461363562355}}]], 
     ArrowBox[NCache[{{Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {
        Rational[-1, 2] + Rational[1, 2] 3^Rational[1, 2], Rational[-5, 4] + 
         Rational[1, 2] 3^Rational[1, 2]}}, {{0.8660254037844386, -0.5}, {
       0.3660254037844386, -0.3839745962155614}}]], 
     ArrowBox[NCache[{{Cos[Rational[2, 15] Pi], -Sin[Rational[2, 15] Pi]}, {
        Cos[Rational[2, 15] Pi] - Sin[Rational[2, 15] Pi], 
         Cos[Rational[2, 15] Pi] + 
         Rational[-5, 2] Sin[Rational[2, 15] Pi]}}, {{
       0.9135454576426009, -0.40673664307580015`}, {
       0.5068088145668007, -0.10329615004689952`}}]], 
     ArrowBox[NCache[{{(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[1, 2], Rational[1, 4] (1 - 5^Rational[1, 2])}, {
        Rational[1, 4] (1 - 5^Rational[1, 2]) + (Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[5, 8] (1 - 5^Rational[1, 2]) + (Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}}, {{
       0.9510565162951535, -0.30901699437494745`}, {0.6420395219202061, 
       0.1785140303577849}}]], 
     ArrowBox[NCache[{{Cos[Rational[1, 15] Pi], -Sin[Rational[1, 15] Pi]}, {
        Cos[Rational[1, 15] Pi] - Sin[Rational[1, 15] Pi], 
         Cos[Rational[1, 15] Pi] + 
         Rational[-5, 2] Sin[Rational[1, 15] Pi]}}, {{
       0.9781476007338057, -0.20791169081775931`}, {0.7702359099160464, 
       0.4583683736894074}}]], 
     ArrowBox[NCache[{{Cos[Rational[1, 30] Pi], -Sin[Rational[1, 30] Pi]}, {
        Cos[Rational[1, 30] Pi] - Sin[Rational[1, 30] Pi], 
         Cos[Rational[1, 30] Pi] + 
         Rational[-5, 2] Sin[Rational[1, 30] Pi]}}, {{
       0.9945218953682733, -0.10452846326765346`}, {0.8899934321006199, 
       0.7332007371991396}}]], ArrowBox[{{1, 0}, {1, 1}}]}, 
    {GrayLevel[0], ArrowBox[{{0, 0}, {1, 2}}], ArrowBox[{{0, 0}, {-2, 1}}]}}},
  
  Axes->True,
  PlotRange->{{-3, 3}, {-3, 3}}]], "Output",
 CellChangeTimes->{{3.467307993835863*^9, 3.4673080154813347`*^9}, 
   3.467308236345512*^9, 3.467308299118874*^9, {3.467308357582438*^9, 
   3.4673083660552483`*^9}, 3.467308937274664*^9, {3.4673197660936604`*^9, 
   3.467319794969803*^9}, {3.467320006819148*^9, 3.467320020820918*^9}, 
   3.467320087644886*^9, 3.4673210569389753`*^9}]
}, Open  ]],

Cell["\<\
We can make another plot that shows the transformation of the points which \
lie on the boundary of the unit square rotated in such a way that its sides \
are parallel to the eigenvectors.\
\>", "Text",
 CellChangeTimes->{{3.467322256092284*^9, 3.467322338564734*^9}, {
  3.4673224034713783`*^9, 3.467322444052335*^9}, {3.6253110232180557`*^9, 
  3.625311029021096*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cpoints", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1", ",", "d"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1", ",", "d"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cpoints", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"RotationMatrix", "[", 
       RowBox[{"ArcTan", "[", "2", "]"}], "]"}], ".", "#"}], "&"}], "/@", 
    RowBox[{"Join", "[", 
     RowBox[{"cpoints", ",", 
      RowBox[{"Reverse", "/@", "cpoints"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"Blue", ",", 
     RowBox[{"Point", "[", "cpoints", "]"}], ",", "\[IndentingNewLine]", 
     "Red", ",", 
     RowBox[{"Point", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"M", ".", "#"}], "&"}], "/@", "cpoints"}], "]"}], ",", 
     "\[IndentingNewLine]", "Gray", ",", 
     RowBox[{"Arrowheads", "[", "0.02", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"cpoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"M", ".", "#"}], "&"}], "/@", "cpoints"}]}], "}"}]}], 
      "]"}], ",", "\[IndentingNewLine]", "Black", ",", "\[IndentingNewLine]", 
     
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.467258582135038*^9, 3.467258765939044*^9}, {
  3.467258820141706*^9, 3.4672588502999697`*^9}, {3.467258940882806*^9, 
  3.4672589474764833`*^9}, {3.467286184752606*^9, 3.467286191688211*^9}, {
  3.467308156823097*^9, 3.467308164341156*^9}, {3.467308297946464*^9, 
  3.4673082984001017`*^9}, {3.4673083566641617`*^9, 3.467308365146636*^9}, {
  3.467308930735231*^9, 3.467308932979163*^9}, {3.467319722754963*^9, 
  3.467319794356083*^9}, {3.467320017510931*^9, 3.467320020357884*^9}, {
  3.467321050184424*^9, 3.467321055982423*^9}, {3.4673222256010437`*^9, 
  3.467322244736108*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], PointBox[CompressedData["
1:eJx1kz9oU1EYxR/dCnVy6VAKKm2hFHHt9IGTXZTaQKEVCopxq5Nk0KWbg9Ch
iGAHFwt1cbRd5FOxDjqFtmmFl8T8Jam1/4y7Nvf8HvhKA+GRm3e/e+7vnHPp
7sPb93uiKMr8+54+v//yjaFXsd07uZW5k/vj2+v7Hj8uW+PZ+E7U2/HWx77i
xFjFHoxcmVl5eeLhWbWwfuzhvbptdfcdepjTsDB33yvT2fxao2nx5aVv85/a
Pvf+yc2LmZb9COteDOtWD3N89umbG1+v/dT8imuO5sU+PVW4vnDhwMrd/QUv
hHOt2X0/76OLC4MDj440/4u3g07b7f5+56udF8u52rFF+uheVg//2/DM2/7N
yd/WDPvhYGFO3l775+dXP3SsFs6Hm6U5olfvi0PB4ap5rvO8JL1ZcY7/1+vo
hXtLenVfr0rvtnzYk17x4vzEF/SKt/RUEp+a8lV+JT7iW0m+ye/EJ3zEl3Cf
auIDvsI95KYMl8Tn87hyD7jiC1zFER/haHCFI1zF0eEqjuQIjg5XfIQreuEq
juQYjg5XcaQHcHS4Mgeu4uhwFUeHK72EKxzgms5jmivc6T2+0HtxMXqvnhu9
x3d6r3taKi/kiHwYvecceo8u5qrn5JieG/lSz+kBPTfylvKbnif5U8/pIT1P
8qie0+Mz+fwLZYcHmQ==
     "]]}, 
   {RGBColor[1, 0, 0], PointBox[CompressedData["
1:eJxllFlIlFEUx0edBStfFCIqZNRcipAojYTgXCMiCYx0NLcs09ReCgKRqAgt
TEbBNhXMFjClCCsKNKg8N1coH0pjtBzLdDSjsZylccuovnO+gexhuNw7557l
///dL+Tw8aQjvhqNxvTn93d9P4Vd4TftGO+49zAx3iAPPT+dGGSaRL/0ZUVd
a3RyojJuQONvwx5ZGLfd4yv7ntjReuojlkf1LD56rZEf9ue/aR23YI1xz/nk
1EUcVPL1YvC0ISB++RwOKv+34G3srI6WbpxW9k0QVVUSvLZoGm3KvhsOcF2q
9xbUOu+UfFawct7CyLCMxrpR0KRRnjHl/gTY+V5W+d3dLzd9BTVuQMnzHbL5
/I679lrxmMO7jiv33BAWPhRojvZ41xspweb6k/NwUOlrFlaW5fg86PwF1/k8
ITPp2cgFH0H9/YQyl2vmaLOfukfey3qKx90ULzkfcj4MpXqoxtmoHzTyOffp
XftpHkyjeZDnxQKaF0dIDxwlPTD/n/MmVU9kPcHGcRbSG8ivbswjP0C9t4H8
AvKvBZrIT2C/gf0G8tMCdcQDDHJeM/EimCdgngTzBlriTTCPwDyKpXymJVt2
lAR8w0vr/OPPBRmkhfX4pNTVS+4TN1d05Nhb9XLyxYrhhI0OLGkzOo1mvVR1
7HOcKU3J0kvSx4khit56GZFxf1X/PheeSNvW0KbRS+YD2yuqt7j6dFLlOBCd
HZGNOpnr3GvKKv6BtOqk6ufj8GbbxQSdpL48yPPJW2ZH1Xj9DJoqC3TzU1ov
D5RXK9V343aGRORe1srh0CuvjrXP4c6Isy21eVovT1fTrbt6t2plpuL/AnOj
laufxhhmPy9gjKwpiB3yk0t5XMorx0MsxQvOx1xoBdcDries1A9wP0L1nfsV
2fxeeB7B8wLPK4gnD/D3RbBewHoJ1hNYT9HAnLHegt8HdJAfgv0C9kuwn0B5
9UJ95+y3+EI8QCnxINYz18yLYJ6AeRKpxBswb//x+RsGx8k+
     "]]}, 
   {GrayLevel[0.5], Arrowheads[
    0.02], {ArrowBox[{{
      0.4472135954999579, -1.3416407864998738`}, {-0.894427190999916, \
-2.906888370749727}}], 
     ArrowBox[{{
      0.4919349550499537, -1.2521980673998823`}, {-0.7602631123499286, \
-2.6385602134497517`}}], 
     ArrowBox[{{
      0.5366563145999494, -1.1627553482998907`}, {-0.6260990336999412, \
-2.3702320561497774`}}], 
     ArrowBox[{{
      0.5813776741499453, -1.073312629199899}, {-0.49193495504995355`, \
-2.1019038988498018`}}], 
     ArrowBox[{{
      0.6260990336999411, -0.9838699100999073}, {-0.3577708763999662, \
-1.833575741549827}}], 
     ArrowBox[{{
      0.6708203932499369, -0.8944271909999159}, {-0.22360679774997894`, \
-1.5652475842498528`}}], 
     ArrowBox[{{
      0.7155417527999327, -0.8049844718999242}, {-0.08944271909999146, \
-1.296919426949878}}], 
     ArrowBox[{{0.7602631123499285, -0.7155417527999326}, {
      0.0447213595499959, -1.0285912696499029`}}], 
     ArrowBox[{{0.8049844718999243, -0.626099033699941}, {
      0.17888543819998326`, -0.7602631123499283}}], 
     ArrowBox[{{0.8497058314499201, -0.5366563145999494}, {
      0.3130495168499706, -0.49193495504995355`}}], 
     ArrowBox[{{0.8944271909999159, -0.4472135954999579}, {
      0.4472135954999579, -0.22360679774997905`}}], 
     ArrowBox[{{0.9391485505499116, -0.35777087639996624`}, {
      0.5813776741499455, 0.04472135954999601}}], 
     ArrowBox[{{0.9838699100999075, -0.2683281572999746}, {0.7155417527999329,
       0.31304951684997095`}}], 
     ArrowBox[{{1.0285912696499033`, -0.17888543819998315`}, {
      0.8497058314499202, 0.5813776741499455}}], 
     ArrowBox[{{1.0733126291998991`, -0.08944271909999146}, {
      0.9838699100999077, 0.8497058314499204}}], 
     ArrowBox[{{1.118033988749895, 0.}, {1.118033988749895, 
      1.118033988749895}}], 
     ArrowBox[{{1.1627553482998907`, 0.08944271909999163}, {
      1.2521980673998823`, 1.3863621460498698`}}], 
     ArrowBox[{{1.2074767078498865`, 0.17888543819998332`}, {
      1.3863621460498698`, 1.6546903033498448`}}], 
     ArrowBox[{{1.2521980673998823`, 0.2683281572999748}, {1.520526224699857, 
      1.923018460649819}}], 
     ArrowBox[{{1.296919426949878, 0.35777087639996646`}, {
      1.6546903033498446`, 2.1913466179497942`}}], 
     ArrowBox[{{1.3416407864998738`, 0.4472135954999579}, {
      1.7888543819998317`, 2.459674775249769}}], 
     ArrowBox[{{-1.3416407864998738`, -0.4472135954999579}, \
{-1.7888543819998317`, -2.459674775249769}}], 
     ArrowBox[{{-1.296919426949878, -0.35777087639996635`}, \
{-1.6546903033498443`, -2.191346617949794}}], 
     ArrowBox[{{-1.2521980673998823`, -0.2683281572999748}, \
{-1.520526224699857, -1.923018460649819}}], 
     ArrowBox[{{-1.2074767078498865`, -0.1788854381999831}, \
{-1.3863621460498696`, -1.6546903033498443`}}], 
     ArrowBox[{{-1.1627553482998905`, -0.08944271909999152}, \
{-1.252198067399882, -1.3863621460498692`}}], 
     ArrowBox[{{-1.118033988749895, 
      0.}, {-1.118033988749895, -1.118033988749895}}], 
     ArrowBox[{{-1.073312629199899, 
      0.08944271909999169}, {-0.9838699100999072, -0.8497058314499197}}], 
     ArrowBox[{{-1.0285912696499033`, 
      0.1788854381999832}, {-0.8497058314499202, -0.5813776741499453}}], 
     ArrowBox[{{-0.9838699100999074, 
      0.26832815729997483`}, {-0.7155417527999326, -0.3130495168499704}}], 
     ArrowBox[{{-0.9391485505499116, 
      0.35777087639996635`}, {-0.5813776741499452, -0.04472135954999579}}], 
     ArrowBox[{{-0.8944271909999159, 
      0.4472135954999579}, {-0.4472135954999579, 0.22360679774997905`}}], 
     ArrowBox[{{-0.8497058314499201, 
      0.5366563145999496}, {-0.3130495168499705, 0.49193495504995377`}}], 
     ArrowBox[{{-0.8049844718999242, 
      0.6260990336999412}, {-0.17888543819998293`, 0.760263112349929}}], 
     ArrowBox[{{-0.7602631123499285, 
      0.7155417527999327}, {-0.04472135954999579, 1.0285912696499033`}}], 
     ArrowBox[{{-0.7155417527999326, 0.8049844718999244}, {0.0894427190999918,
       1.2969194269498785`}}], 
     ArrowBox[{{-0.6708203932499369, 0.8944271909999159}, {
      0.22360679774997894`, 1.5652475842498528`}}], 
     ArrowBox[{{-0.626099033699941, 0.9838699100999075}, {0.3577708763999665, 
      1.833575741549828}}], 
     ArrowBox[{{-0.5813776741499452, 1.0733126291998991`}, {
      0.4919349550499539, 2.1019038988498027`}}], 
     ArrowBox[{{-0.5366563145999494, 1.1627553482998907`}, {
      0.6260990336999412, 2.3702320561497774`}}], 
     ArrowBox[{{-0.49193495504995366`, 1.2521980673998823`}, {
      0.7602631123499286, 2.638560213449752}}], 
     ArrowBox[{{-0.4472135954999579, 1.3416407864998738`}, {0.894427190999916,
       2.906888370749727}}], 
     ArrowBox[{{
      0.4472135954999579, -1.3416407864998738`}, {-0.894427190999916, \
-2.906888370749727}}], 
     ArrowBox[{{
      0.35777087639996635`, -1.296919426949878}, {-0.9391485505499118, \
-2.884527690974729}}], 
     ArrowBox[{{
      0.2683281572999748, -1.2521980673998823`}, {-0.9838699100999075, \
-2.862167011199731}}], 
     ArrowBox[{{
      0.1788854381999831, -1.2074767078498865`}, {-1.0285912696499033`, \
-2.8398063314247333`}}], 
     ArrowBox[{{
      0.08944271909999152, -1.1627553482998905`}, {-1.073312629199899, \
-2.817445651649735}}], 
     ArrowBox[{{
      0., -1.118033988749895}, {-1.118033988749895, -2.7950849718747373`}}], 
     ArrowBox[{{-0.08944271909999169, -1.073312629199899}, \
{-1.1627553482998905`, -2.772724292099739}}], 
     ArrowBox[{{-0.1788854381999832, -1.0285912696499033`}, \
{-1.2074767078498865`, -2.7503636123247412`}}], 
     ArrowBox[{{-0.26832815729997483`, -0.9838699100999074}, \
{-1.2521980673998823`, -2.7280029325497432`}}], 
     ArrowBox[{{-0.35777087639996635`, -0.9391485505499116}, \
{-1.296919426949878, -2.7056422527747452`}}], 
     ArrowBox[{{-0.4472135954999579, -0.8944271909999159}, \
{-1.3416407864998738`, -2.6832815729997477`}}], 
     ArrowBox[{{-0.5366563145999496, -0.8497058314499201}, \
{-1.3863621460498696`, -2.6609208932247497`}}], 
     ArrowBox[{{-0.6260990336999412, -0.8049844718999242}, \
{-1.4310835055998654`, -2.638560213449752}}], 
     ArrowBox[{{-0.7155417527999327, -0.7602631123499285}, \
{-1.4758048651498612`, -2.616199533674754}}], 
     ArrowBox[{{-0.8049844718999244, -0.7155417527999326}, \
{-1.520526224699857, -2.593838853899756}}], 
     ArrowBox[{{-0.8944271909999159, -0.6708203932499369}, \
{-1.5652475842498528`, -2.571478174124758}}], 
     ArrowBox[{{-0.9838699100999075, -0.626099033699941}, \
{-1.6099689437998486`, -2.54911749434976}}], 
     ArrowBox[{{-1.0733126291998991`, -0.5813776741499452}, \
{-1.6546903033498443`, -2.526756814574762}}], 
     ArrowBox[{{-1.1627553482998907`, -0.5366563145999494}, \
{-1.6994116628998401`, -2.504396134799764}}], 
     ArrowBox[{{-1.2521980673998823`, -0.49193495504995366`}, \
{-1.744133022449836, -2.482035455024766}}], 
     ArrowBox[{{-1.3416407864998738`, -0.4472135954999579}, \
{-1.7888543819998317`, -2.459674775249769}}], 
     ArrowBox[{{1.3416407864998738`, 0.4472135954999579}, {
      1.7888543819998317`, 2.459674775249769}}], 
     ArrowBox[{{1.2521980673998823`, 0.4919349550499537}, {1.744133022449836, 
      2.4820354550247665`}}], 
     ArrowBox[{{1.1627553482998907`, 0.5366563145999494}, {
      1.6994116628998401`, 2.504396134799764}}], 
     ArrowBox[{{1.073312629199899, 0.5813776741499453}, {1.6546903033498443`, 
      2.526756814574762}}], 
     ArrowBox[{{0.9838699100999073, 0.6260990336999411}, {1.6099689437998483`,
       2.54911749434976}}], 
     ArrowBox[{{0.8944271909999159, 0.6708203932499369}, {1.5652475842498528`,
       2.571478174124758}}], 
     ArrowBox[{{0.8049844718999242, 0.7155417527999327}, {1.5205262246998568`,
       2.593838853899756}}], 
     ArrowBox[{{0.7155417527999326, 0.7602631123499285}, {1.4758048651498612`,
       2.616199533674754}}], 
     ArrowBox[{{0.626099033699941, 0.8049844718999243}, {1.4310835055998652`, 
      2.6385602134497517`}}], 
     ArrowBox[{{0.5366563145999494, 0.8497058314499201}, {1.3863621460498696`,
       2.6609208932247497`}}], 
     ArrowBox[{{0.4472135954999579, 0.8944271909999159}, {1.3416407864998738`,
       2.6832815729997477`}}], 
     ArrowBox[{{0.35777087639996624`, 0.9391485505499116}, {
      1.2969194269498778`, 2.7056422527747452`}}], 
     ArrowBox[{{0.2683281572999746, 0.9838699100999075}, {1.252198067399882, 
      2.7280029325497437`}}], 
     ArrowBox[{{0.17888543819998315`, 1.0285912696499033`}, {
      1.2074767078498865`, 2.7503636123247412`}}], 
     ArrowBox[{{0.08944271909999146, 1.0733126291998991`}, {
      1.1627553482998905`, 2.7727242920997393`}}], 
     ArrowBox[{{0., 1.118033988749895}, {1.118033988749895, 
      2.7950849718747373`}}], 
     ArrowBox[{{-0.08944271909999163, 1.1627553482998907`}, {
      1.0733126291998991`, 2.8174456516497353`}}], 
     ArrowBox[{{-0.17888543819998332`, 1.2074767078498865`}, {
      1.028591269649903, 2.8398063314247333`}}], 
     ArrowBox[{{-0.2683281572999748, 1.2521980673998823`}, {
      0.9838699100999075, 2.862167011199731}}], 
     ArrowBox[{{-0.35777087639996646`, 1.296919426949878}, {
      0.9391485505499115, 2.884527690974729}}], 
     ArrowBox[{{-0.4472135954999579, 1.3416407864998738`}, {0.894427190999916,
       2.906888370749727}}]}, 
    {GrayLevel[0], ArrowBox[{{0, 0}, {1, 2}}], ArrowBox[{{0, 0}, {-2, 1}}]}}},
  
  Axes->True,
  PlotRange->{{-3, 3}, {-3, 3}}]], "Output",
 CellChangeTimes->{3.467322246855033*^9}]
}, Open  ]],

Cell[TextData[{
 "We can see from the plots above that with the transformation matrix ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]]],
 " any geometric shape placed a the origin is stretched three times along the \
direction of the vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1"},
      {"2"}
     }], "\[NoBreak]", ")"}], TraditionalForm]]],
 " and it is contracted twice along direction of the vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", "2"}]},
      {"1"}
     }], "\[NoBreak]", ")"}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.467319695442493*^9, 3.467319698981546*^9}, {
   3.467322162120541*^9, 3.467322203829295*^9}, {3.4673225015832233`*^9, 
   3.46732260291068*^9}, 3.467323542433839*^9, {3.467323619888206*^9, 
   3.467323737763967*^9}, {3.467323837888278*^9, 3.467323871313188*^9}, {
   3.467323905123272*^9, 3.467323909808035*^9}}],

Cell[CellGroupData[{

Cell["section code", "Subsubsection",
 CellChangeTimes->{{3.46730588096376*^9, 3.467305903139089*^9}, {
  3.467307627495268*^9, 3.467307628702076*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "\[Lambda]1"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"1", "/", "2"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"a", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"A", ".", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.4672553621543503`*^9, 3.4672553711731033`*^9}, {
   3.467256037618162*^9, 3.467256053643093*^9}, {3.467285975606361*^9, 
   3.467285977245075*^9}, 3.4673199796740007`*^9, {3.467320042473724*^9, 
   3.4673200571775312`*^9}, 3.46732070562353*^9, 3.467320773032258*^9, {
   3.467323293113963*^9, 3.46732329516496*^9}, 3.467323416023432*^9, {
   3.469826780553822*^9, 3.4698268019834137`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", 
     RowBox[{"a", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "+", 
    RowBox[{"y", " ", 
     RowBox[{"a", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"x", " ", 
     RowBox[{"a", "[", 
      RowBox[{"2", ",", "1"}], "]"}]}], "+", 
    RowBox[{"y", " ", 
     RowBox[{"a", "[", 
      RowBox[{"2", ",", "2"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4672553715916758`*^9, {3.467256051147827*^9, 3.467256054114414*^9}, 
   3.4672595512991667`*^9, {3.467259640991089*^9, 3.467259704567697*^9}, {
   3.467259747983697*^9, 3.4672597579654617`*^9}, 3.4672598506806507`*^9, 
   3.4672599183305817`*^9, {3.467285960127207*^9, 3.467285977944014*^9}, 
   3.467319980862628*^9, 3.467320058197248*^9, 3.467320711499765*^9, 
   3.4673207767328176`*^9, 3.4673232989521217`*^9, 3.467323418496833*^9, 
   3.469826711124132*^9, {3.4698267653191137`*^9, 3.469826802616535*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"ToRules", "@", 
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"A", ".", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "\[Equal]", 
       RowBox[{"\[Lambda]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"Flatten", "[", "A", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.467255446600997*^9, 3.46725548430332*^9}, {
  3.4672555158248253`*^9, 3.4672555606723347`*^9}, {3.467255659738008*^9, 
  3.467255677882509*^9}, {3.467256092113997*^9, 3.4672561316401978`*^9}, {
  3.4672562260390987`*^9, 3.4672562409915953`*^9}, {3.467256290395691*^9, 
  3.467256292896831*^9}, {3.467285958471944*^9, 3.467285973062414*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["3", "2"], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{"3", "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "1"}], "]"}]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.467256241392673*^9, 3.467256293365686*^9, 3.4672595523993683`*^9, {
   3.4672596428510723`*^9, 3.467259704797304*^9}, {3.467259748963848*^9, 
   3.467259758947933*^9}, {3.4672859611257763`*^9, 3.4672859789592047`*^9}, 
   3.467319981897769*^9, 3.4673207116564913`*^9, 3.467320776891601*^9, 
   3.4673232995628633`*^9, 3.4673234186652117`*^9, 3.4698267132291307`*^9, {
   3.469826760031253*^9, 3.469826805057651*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"ToRules", "@", 
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "\[Equal]", 
         RowBox[{"\[Lambda]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "\[Equal]", 
         RowBox[{"\[Lambda]1", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "1"}], "}"}]}]}], "]"}]}], "]"}], ",", 
     RowBox[{"Flatten", "[", "A", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.467255446600997*^9, 3.46725548430332*^9}, {
  3.4672555158248253`*^9, 3.4672555606723347`*^9}, {3.467255659738008*^9, 
  3.467255677882509*^9}, {3.467256092113997*^9, 3.4672561316401978`*^9}, {
  3.4672562260390987`*^9, 3.4672562409915953`*^9}, {3.467256290395691*^9, 
  3.467256292896831*^9}, {3.467259799166246*^9, 3.467259835280575*^9}, {
  3.4672859703376703`*^9, 3.467285970591323*^9}, {3.46732006362908*^9, 
  3.4673200650105457`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", 
    FractionBox["5", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.46725983636259*^9, 3.467259852432938*^9}, 
   3.467285980027464*^9, 3.4673199835891*^9, 3.467320066809922*^9, 
   3.467320711712118*^9, 3.467320776944943*^9, 3.46732329961164*^9, 
   3.4673234187259293`*^9, 3.46982671395999*^9, {3.469826785495349*^9, 
   3.4698268062932167`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"A", "/.", "sol"}]}]], "Input",
 CellChangeTimes->{{3.46725632083827*^9, 3.467256383311702*^9}, {
   3.467256447609887*^9, 3.4672564487996902`*^9}, {3.467256489786721*^9, 
   3.467256494442408*^9}, {3.467259547378117*^9, 3.467259549719755*^9}, {
   3.467259648684039*^9, 3.467259702008152*^9}, 3.467259756282844*^9, 
   3.467259860113832*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     FractionBox["5", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.467259919479952*^9, 3.467285981358074*^9, 3.467319985426195*^9, 
   3.467320068113557*^9, 3.467320711761112*^9, 3.467320776990511*^9, 
   3.467323299694195*^9, 3.467323418770483*^9, 3.4698267190919743`*^9, {
   3.469826761628346*^9, 3.469826807914423*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Eigenvalues", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvectors", "[", "A", "]"}]}], "Input",
 CellChangeTimes->{{3.4672548766378927`*^9, 3.467254941867497*^9}, {
   3.467254999120179*^9, 3.467255026135972*^9}, 3.4672551178019447`*^9, {
   3.467255151752162*^9, 3.4672551737307787`*^9}, 3.4672552282041197`*^9, {
   3.467255262467051*^9, 3.4672553218394337`*^9}, {3.467256503167739*^9, 
   3.467256576210568*^9}, {3.467257997811864*^9, 3.467258002079451*^9}, {
   3.4672585610270767`*^9, 3.467258562672742*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.467254909549684*^9, 3.4672549422770576`*^9}, 
   3.467255026725994*^9, 3.467255123235551*^9, 3.467255175323504*^9, 
   3.467255228686882*^9, {3.467255262725831*^9, 3.467255322480844*^9}, {
   3.467256504646989*^9, 3.4672565769634867`*^9}, 3.467258002501375*^9, 
   3.4672585634510927`*^9, 3.4672595557680817`*^9, {3.4672596456315928`*^9, 
   3.46725970493978*^9}, 3.4672597608642397`*^9, 3.467259869565105*^9, {
   3.467259906631486*^9, 3.46725992146273*^9}, 3.4672859830598516`*^9, 
   3.467320396182753*^9, 3.467320711811227*^9, 3.467320777039237*^9, 
   3.467323299742865*^9, 3.4673234188253508`*^9, {3.469826716796332*^9, 
   3.469826720233322*^9}, {3.469826771053258*^9, 3.4698268092443237`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.467254909549684*^9, 3.4672549422770576`*^9}, 
   3.467255026725994*^9, 3.467255123235551*^9, 3.467255175323504*^9, 
   3.467255228686882*^9, {3.467255262725831*^9, 3.467255322480844*^9}, {
   3.467256504646989*^9, 3.4672565769634867`*^9}, 3.467258002501375*^9, 
   3.4672585634510927`*^9, 3.4672595557680817`*^9, {3.4672596456315928`*^9, 
   3.46725970493978*^9}, 3.4672597608642397`*^9, 3.467259869565105*^9, {
   3.467259906631486*^9, 3.46725992146273*^9}, 3.4672859830598516`*^9, 
   3.467320396182753*^9, 3.467320711811227*^9, 3.467320777039237*^9, 
   3.467323299742865*^9, 3.4673234188253508`*^9, {3.469826716796332*^9, 
   3.469826720233322*^9}, {3.469826771053258*^9, 3.469826809272537*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cpoints", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}], ",", 
       RowBox[{"2", 
        RowBox[{"\[Pi]", "/", "100"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Point", "[", "cpoints", "]"}], ",", "Red", ",", 
     RowBox[{"Point", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"A", ".", "#"}], "&"}], "/@", "cpoints"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.467307992896365*^9, 3.467308014634087*^9}, {
  3.4673204001073217`*^9, 3.467320400947013*^9}, {3.469826727684019*^9, 
  3.4698267284811287`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   PointBox[NCache[{{1, 0}, {
      Cos[Rational[1, 50] Pi], Sin[Rational[1, 50] Pi]}, {
      Cos[Rational[1, 25] Pi], Sin[Rational[1, 25] Pi]}, {
      Cos[Rational[3, 50] Pi], Sin[Rational[3, 50] Pi]}, {
      Cos[Rational[2, 25] Pi], Sin[
       Rational[2, 25] Pi]}, {(Rational[5, 8] + 
        Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
       Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
      Cos[Rational[3, 25] Pi], Sin[Rational[3, 25] Pi]}, {
      Cos[Rational[7, 50] Pi], Sin[Rational[7, 50] Pi]}, {
      Cos[Rational[4, 25] Pi], Sin[Rational[4, 25] Pi]}, {
      Cos[Rational[9, 50] Pi], Sin[Rational[9, 50] Pi]}, {
      Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
        Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Cos[Rational[11, 50] Pi], Sin[Rational[11, 50] Pi]}, {
      Cos[Rational[6, 25] Pi], Sin[Rational[6, 25] Pi]}, {
      Sin[Rational[6, 25] Pi], Cos[Rational[6, 25] Pi]}, {
      Sin[Rational[11, 50] Pi], Cos[
       Rational[11, 50] Pi]}, {(Rational[5, 8] + 
        Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
       Rational[1, 4] (1 + 5^Rational[1, 2])}, {
      Sin[Rational[9, 50] Pi], Cos[Rational[9, 50] Pi]}, {
      Sin[Rational[4, 25] Pi], Cos[Rational[4, 25] Pi]}, {
      Sin[Rational[7, 50] Pi], Cos[Rational[7, 50] Pi]}, {
      Sin[Rational[3, 25] Pi], Cos[Rational[3, 25] Pi]}, {
      Rational[1, 4] (-1 + 5^Rational[1, 2]), (Rational[5, 8] + 
        Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Sin[Rational[2, 25] Pi], Cos[Rational[2, 25] Pi]}, {
      Sin[Rational[3, 50] Pi], Cos[Rational[3, 50] Pi]}, {
      Sin[Rational[1, 25] Pi], Cos[Rational[1, 25] Pi]}, {
      Sin[Rational[1, 50] Pi], Cos[Rational[1, 50] Pi]}, {0, 
      1}, {-Sin[Rational[1, 50] Pi], Cos[Rational[1, 50] Pi]}, {-
       Sin[Rational[1, 25] Pi], Cos[Rational[1, 25] Pi]}, {-
       Sin[Rational[3, 50] Pi], Cos[Rational[3, 50] Pi]}, {-
       Sin[Rational[2, 25] Pi], Cos[Rational[2, 25] Pi]}, {
      Rational[1, 4] (1 - 5^Rational[1, 2]), (Rational[5, 8] + 
        Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {-
       Sin[Rational[3, 25] Pi], Cos[Rational[3, 25] Pi]}, {-
       Sin[Rational[7, 50] Pi], Cos[Rational[7, 50] Pi]}, {-
       Sin[Rational[4, 25] Pi], Cos[Rational[4, 25] Pi]}, {-
       Sin[Rational[9, 50] Pi], Cos[
       Rational[9, 50] 
        Pi]}, {-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
        Rational[1, 2], Rational[1, 4] (1 + 5^Rational[1, 2])}, {-
       Sin[Rational[11, 50] Pi], Cos[Rational[11, 50] Pi]}, {-
       Sin[Rational[6, 25] Pi], Cos[Rational[6, 25] Pi]}, {-
       Cos[Rational[6, 25] Pi], Sin[Rational[6, 25] Pi]}, {-
       Cos[Rational[11, 50] Pi], Sin[Rational[11, 50] Pi]}, {
      Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
        Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {-
       Cos[Rational[9, 50] Pi], Sin[Rational[9, 50] Pi]}, {-
       Cos[Rational[4, 25] Pi], Sin[Rational[4, 25] Pi]}, {-
       Cos[Rational[7, 50] Pi], Sin[Rational[7, 50] Pi]}, {-
       Cos[Rational[3, 25] Pi], Sin[
       Rational[3, 25] 
        Pi]}, {-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
        Rational[1, 2], Rational[1, 4] (-1 + 5^Rational[1, 2])}, {-
       Cos[Rational[2, 25] Pi], Sin[Rational[2, 25] Pi]}, {-
       Cos[Rational[3, 50] Pi], Sin[Rational[3, 50] Pi]}, {-
       Cos[Rational[1, 25] Pi], Sin[Rational[1, 25] Pi]}, {-
       Cos[Rational[1, 50] Pi], Sin[Rational[1, 50] Pi]}, {-1, 
      0}, {-Cos[Rational[1, 50] Pi], -Sin[Rational[1, 50] Pi]}, {-
       Cos[Rational[1, 25] Pi], -Sin[Rational[1, 25] Pi]}, {-
       Cos[Rational[3, 50] Pi], -Sin[Rational[3, 50] Pi]}, {-
       Cos[Rational[2, 25] Pi], -
       Sin[Rational[2, 25] Pi]}, {-(Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
       Rational[1, 4] (1 - 5^Rational[1, 2])}, {-Cos[Rational[3, 25] Pi], -
       Sin[Rational[3, 25] Pi]}, {-Cos[Rational[7, 50] Pi], -
       Sin[Rational[7, 50] Pi]}, {-Cos[Rational[4, 25] Pi], -
       Sin[Rational[4, 25] Pi]}, {-Cos[Rational[9, 50] Pi], -
       Sin[Rational[9, 50] Pi]}, {
      Rational[1, 4] (-1 - 5^
        Rational[1, 2]), -(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
        Rational[1, 2]}, {-Cos[Rational[11, 50] Pi], -
       Sin[Rational[11, 50] Pi]}, {-Cos[Rational[6, 25] Pi], -
       Sin[Rational[6, 25] Pi]}, {-Sin[Rational[6, 25] Pi], -
       Cos[Rational[6, 25] Pi]}, {-Sin[Rational[11, 50] Pi], -
       Cos[Rational[11, 50] Pi]}, {-(Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
       Rational[1, 4] (-1 - 5^Rational[1, 2])}, {-Sin[Rational[9, 50] Pi], -
       Cos[Rational[9, 50] Pi]}, {-Sin[Rational[4, 25] Pi], -
       Cos[Rational[4, 25] Pi]}, {-Sin[Rational[7, 50] Pi], -
       Cos[Rational[7, 50] Pi]}, {-Sin[Rational[3, 25] Pi], -
       Cos[Rational[3, 25] Pi]}, {
      Rational[1, 4] (1 - 5^
        Rational[1, 2]), -(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
        Rational[1, 2]}, {-Sin[Rational[2, 25] Pi], -
       Cos[Rational[2, 25] Pi]}, {-Sin[Rational[3, 50] Pi], -
       Cos[Rational[3, 50] Pi]}, {-Sin[Rational[1, 25] Pi], -
       Cos[Rational[1, 25] Pi]}, {-Sin[Rational[1, 50] Pi], -
       Cos[Rational[1, 50] Pi]}, {0, -1}, {
      Sin[Rational[1, 50] Pi], -Cos[Rational[1, 50] Pi]}, {
      Sin[Rational[1, 25] Pi], -Cos[Rational[1, 25] Pi]}, {
      Sin[Rational[3, 50] Pi], -Cos[Rational[3, 50] Pi]}, {
      Sin[Rational[2, 25] Pi], -Cos[Rational[2, 25] Pi]}, {
      Rational[1, 4] (-1 + 
        5^Rational[1, 2]), -(Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Sin[Rational[3, 25] Pi], -Cos[Rational[3, 25] Pi]}, {
      Sin[Rational[7, 50] Pi], -Cos[Rational[7, 50] Pi]}, {
      Sin[Rational[4, 25] Pi], -Cos[Rational[4, 25] Pi]}, {
      Sin[Rational[9, 50] Pi], -
       Cos[Rational[9, 50] Pi]}, {(Rational[5, 8] + 
        Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
       Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
      Sin[Rational[11, 50] Pi], -Cos[Rational[11, 50] Pi]}, {
      Sin[Rational[6, 25] Pi], -Cos[Rational[6, 25] Pi]}, {
      Cos[Rational[6, 25] Pi], -Sin[Rational[6, 25] Pi]}, {
      Cos[Rational[11, 50] Pi], -Sin[Rational[11, 50] Pi]}, {
      Rational[1, 4] (1 + 
        5^Rational[1, 2]), -(Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Cos[Rational[9, 50] Pi], -Sin[Rational[9, 50] Pi]}, {
      Cos[Rational[4, 25] Pi], -Sin[Rational[4, 25] Pi]}, {
      Cos[Rational[7, 50] Pi], -Sin[Rational[7, 50] Pi]}, {
      Cos[Rational[3, 25] Pi], -
       Sin[Rational[3, 25] Pi]}, {(Rational[5, 8] + 
        Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
       Rational[1, 4] (1 - 5^Rational[1, 2])}, {
      Cos[Rational[2, 25] Pi], -Sin[Rational[2, 25] Pi]}, {
      Cos[Rational[3, 50] Pi], -Sin[Rational[3, 50] Pi]}, {
      Cos[Rational[1, 25] Pi], -Sin[Rational[1, 25] Pi]}, {
      Cos[Rational[1, 50] Pi], -Sin[Rational[1, 50] Pi]}, {1, 0}}, {{1, 0}, {
      0.9980267284282716, 0.06279051952931337}, {0.9921147013144779, 
      0.12533323356430426`}, {0.9822872507286887, 0.1873813145857246}, {
      0.9685831611286311, 0.2486898871648548}, {0.9510565162951535, 
      0.30901699437494745`}, {0.9297764858882515, 0.3681245526846779}, {
      0.9048270524660195, 0.4257792915650727}, {0.8763066800438636, 
      0.4817536741017153}, {0.8443279255020151, 0.5358267949789967}, {
      0.8090169943749475, 0.5877852522924731}, {0.7705132427757893, 
      0.6374239897486896}, {0.7289686274214116, 0.6845471059286886}, {
      0.6845471059286886, 0.7289686274214116}, {0.6374239897486896, 
      0.7705132427757893}, {0.5877852522924731, 0.8090169943749475}, {
      0.5358267949789967, 0.8443279255020151}, {0.4817536741017153, 
      0.8763066800438636}, {0.4257792915650727, 0.9048270524660195}, {
      0.3681245526846779, 0.9297764858882515}, {0.30901699437494745`, 
      0.9510565162951535}, {0.2486898871648548, 0.9685831611286311}, {
      0.1873813145857246, 0.9822872507286887}, {0.12533323356430426`, 
      0.9921147013144779}, {0.06279051952931337, 0.9980267284282716}, {0, 
      1}, {-0.06279051952931337, 0.9980267284282716}, {-0.12533323356430426`, 
      0.9921147013144779}, {-0.1873813145857246, 
      0.9822872507286887}, {-0.2486898871648548, 
      0.9685831611286311}, {-0.30901699437494745`, 
      0.9510565162951535}, {-0.3681245526846779, 
      0.9297764858882515}, {-0.4257792915650727, 
      0.9048270524660195}, {-0.4817536741017153, 
      0.8763066800438636}, {-0.5358267949789967, 
      0.8443279255020151}, {-0.5877852522924731, 
      0.8090169943749475}, {-0.6374239897486896, 
      0.7705132427757893}, {-0.6845471059286886, 
      0.7289686274214116}, {-0.7289686274214116, 
      0.6845471059286886}, {-0.7705132427757893, 
      0.6374239897486896}, {-0.8090169943749475, 
      0.5877852522924731}, {-0.8443279255020151, 
      0.5358267949789967}, {-0.8763066800438636, 
      0.4817536741017153}, {-0.9048270524660195, 
      0.4257792915650727}, {-0.9297764858882515, 
      0.3681245526846779}, {-0.9510565162951535, 
      0.30901699437494745`}, {-0.9685831611286311, 
      0.2486898871648548}, {-0.9822872507286887, 
      0.1873813145857246}, {-0.9921147013144779, 
      0.12533323356430426`}, {-0.9980267284282716, 0.06279051952931337}, {-1, 
      0}, {-0.9980267284282716, -0.06279051952931337}, {-0.9921147013144779, \
-0.12533323356430426`}, {-0.9822872507286887, -0.1873813145857246}, \
{-0.9685831611286311, -0.2486898871648548}, {-0.9510565162951535, \
-0.30901699437494745`}, {-0.9297764858882515, -0.3681245526846779}, \
{-0.9048270524660195, -0.4257792915650727}, {-0.8763066800438636, \
-0.4817536741017153}, {-0.8443279255020151, -0.5358267949789967}, \
{-0.8090169943749475, -0.5877852522924731}, {-0.7705132427757893, \
-0.6374239897486896}, {-0.7289686274214116, -0.6845471059286886}, \
{-0.6845471059286886, -0.7289686274214116}, {-0.6374239897486896, \
-0.7705132427757893}, {-0.5877852522924731, -0.8090169943749475}, \
{-0.5358267949789967, -0.8443279255020151}, {-0.4817536741017153, \
-0.8763066800438636}, {-0.4257792915650727, -0.9048270524660195}, \
{-0.3681245526846779, -0.9297764858882515}, {-0.30901699437494745`, \
-0.9510565162951535}, {-0.2486898871648548, -0.9685831611286311}, \
{-0.1873813145857246, -0.9822872507286887}, {-0.12533323356430426`, \
-0.9921147013144779}, {-0.06279051952931337, -0.9980267284282716}, {0, -1}, {
      0.06279051952931337, -0.9980267284282716}, {
      0.12533323356430426`, -0.9921147013144779}, {
      0.1873813145857246, -0.9822872507286887}, {
      0.2486898871648548, -0.9685831611286311}, {
      0.30901699437494745`, -0.9510565162951535}, {
      0.3681245526846779, -0.9297764858882515}, {
      0.4257792915650727, -0.9048270524660195}, {
      0.4817536741017153, -0.8763066800438636}, {
      0.5358267949789967, -0.8443279255020151}, {
      0.5877852522924731, -0.8090169943749475}, {
      0.6374239897486896, -0.7705132427757893}, {
      0.6845471059286886, -0.7289686274214116}, {
      0.7289686274214116, -0.6845471059286886}, {
      0.7705132427757893, -0.6374239897486896}, {
      0.8090169943749475, -0.5877852522924731}, {
      0.8443279255020151, -0.5358267949789967}, {
      0.8763066800438636, -0.4817536741017153}, {
      0.9048270524660195, -0.4257792915650727}, {
      0.9297764858882515, -0.3681245526846779}, {
      0.9510565162951535, -0.30901699437494745`}, {
      0.9685831611286311, -0.2486898871648548}, {
      0.9822872507286887, -0.1873813145857246}, {
      0.9921147013144779, -0.12533323356430426`}, {
      0.9980267284282716, -0.06279051952931337}, {1, 0}}]], 
   {RGBColor[1, 0, 0], 
    PointBox[NCache[{{Rational[7, 5], Rational[4, 5]}, {
       Rational[7, 5] Cos[Rational[1, 50] Pi] + 
        Rational[4, 5] Sin[Rational[1, 50] Pi], 
        Rational[4, 5] Cos[Rational[1, 50] Pi] + 
        Rational[13, 5] Sin[Rational[1, 50] Pi]}, {
       Rational[7, 5] Cos[Rational[1, 25] Pi] + 
        Rational[4, 5] Sin[Rational[1, 25] Pi], 
        Rational[4, 5] Cos[Rational[1, 25] Pi] + 
        Rational[13, 5] Sin[Rational[1, 25] Pi]}, {
       Rational[7, 5] Cos[Rational[3, 50] Pi] + 
        Rational[4, 5] Sin[Rational[3, 50] Pi], 
        Rational[4, 5] Cos[Rational[3, 50] Pi] + 
        Rational[13, 5] Sin[Rational[3, 50] Pi]}, {
       Rational[7, 5] Cos[Rational[2, 25] Pi] + 
        Rational[4, 5] Sin[Rational[2, 25] Pi], 
        Rational[4, 5] Cos[Rational[2, 25] Pi] + 
        Rational[13, 5] Sin[Rational[2, 25] Pi]}, {
       Rational[7, 5] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[1, 5] (-1 + 5^Rational[1, 2]), 
        Rational[4, 5] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[13, 20] (-1 + 5^Rational[1, 2])}, {
       Rational[7, 5] Cos[Rational[3, 25] Pi] + 
        Rational[4, 5] Sin[Rational[3, 25] Pi], 
        Rational[4, 5] Cos[Rational[3, 25] Pi] + 
        Rational[13, 5] Sin[Rational[3, 25] Pi]}, {
       Rational[7, 5] Cos[Rational[7, 50] Pi] + 
        Rational[4, 5] Sin[Rational[7, 50] Pi], 
        Rational[4, 5] Cos[Rational[7, 50] Pi] + 
        Rational[13, 5] Sin[Rational[7, 50] Pi]}, {
       Rational[7, 5] Cos[Rational[4, 25] Pi] + 
        Rational[4, 5] Sin[Rational[4, 25] Pi], 
        Rational[4, 5] Cos[Rational[4, 25] Pi] + 
        Rational[13, 5] Sin[Rational[4, 25] Pi]}, {
       Rational[7, 5] Cos[Rational[9, 50] Pi] + 
        Rational[4, 5] Sin[Rational[9, 50] Pi], 
        Rational[4, 5] Cos[Rational[9, 50] Pi] + 
        Rational[13, 5] Sin[Rational[9, 50] Pi]}, {
       Rational[4, 5] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[7, 20] (1 + 5^Rational[1, 2]), 
        Rational[13, 5] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[1, 5] (1 + 5^Rational[1, 2])}, {
       Rational[7, 5] Cos[Rational[11, 50] Pi] + 
        Rational[4, 5] Sin[Rational[11, 50] Pi], 
        Rational[4, 5] Cos[Rational[11, 50] Pi] + 
        Rational[13, 5] Sin[Rational[11, 50] Pi]}, {
       Rational[7, 5] Cos[Rational[6, 25] Pi] + 
        Rational[4, 5] Sin[Rational[6, 25] Pi], 
        Rational[4, 5] Cos[Rational[6, 25] Pi] + 
        Rational[13, 5] Sin[Rational[6, 25] Pi]}, {
       Rational[4, 5] Cos[Rational[6, 25] Pi] + 
        Rational[7, 5] Sin[Rational[6, 25] Pi], 
        Rational[13, 5] Cos[Rational[6, 25] Pi] + 
        Rational[4, 5] Sin[Rational[6, 25] Pi]}, {
       Rational[4, 5] Cos[Rational[11, 50] Pi] + 
        Rational[7, 5] Sin[Rational[11, 50] Pi], 
        Rational[13, 5] Cos[Rational[11, 50] Pi] + 
        Rational[4, 5] Sin[Rational[11, 50] Pi]}, {
       Rational[7, 5] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[1, 5] (1 + 5^Rational[1, 2]), 
        Rational[4, 5] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[13, 20] (1 + 5^Rational[1, 2])}, {
       Rational[4, 5] Cos[Rational[9, 50] Pi] + 
        Rational[7, 5] Sin[Rational[9, 50] Pi], 
        Rational[13, 5] Cos[Rational[9, 50] Pi] + 
        Rational[4, 5] Sin[Rational[9, 50] Pi]}, {
       Rational[4, 5] Cos[Rational[4, 25] Pi] + 
        Rational[7, 5] Sin[Rational[4, 25] Pi], 
        Rational[13, 5] Cos[Rational[4, 25] Pi] + 
        Rational[4, 5] Sin[Rational[4, 25] Pi]}, {
       Rational[4, 5] Cos[Rational[7, 50] Pi] + 
        Rational[7, 5] Sin[Rational[7, 50] Pi], 
        Rational[13, 5] Cos[Rational[7, 50] Pi] + 
        Rational[4, 5] Sin[Rational[7, 50] Pi]}, {
       Rational[4, 5] Cos[Rational[3, 25] Pi] + 
        Rational[7, 5] Sin[Rational[3, 25] Pi], 
        Rational[13, 5] Cos[Rational[3, 25] Pi] + 
        Rational[4, 5] Sin[Rational[3, 25] Pi]}, {
       Rational[4, 5] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[7, 20] (-1 + 5^Rational[1, 2]), 
        Rational[13, 5] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[1, 5] (-1 + 5^Rational[1, 2])}, {
       Rational[4, 5] Cos[Rational[2, 25] Pi] + 
        Rational[7, 5] Sin[Rational[2, 25] Pi], 
        Rational[13, 5] Cos[Rational[2, 25] Pi] + 
        Rational[4, 5] Sin[Rational[2, 25] Pi]}, {
       Rational[4, 5] Cos[Rational[3, 50] Pi] + 
        Rational[7, 5] Sin[Rational[3, 50] Pi], 
        Rational[13, 5] Cos[Rational[3, 50] Pi] + 
        Rational[4, 5] Sin[Rational[3, 50] Pi]}, {
       Rational[4, 5] Cos[Rational[1, 25] Pi] + 
        Rational[7, 5] Sin[Rational[1, 25] Pi], 
        Rational[13, 5] Cos[Rational[1, 25] Pi] + 
        Rational[4, 5] Sin[Rational[1, 25] Pi]}, {
       Rational[4, 5] Cos[Rational[1, 50] Pi] + 
        Rational[7, 5] Sin[Rational[1, 50] Pi], 
        Rational[13, 5] Cos[Rational[1, 50] Pi] + 
        Rational[4, 5] Sin[Rational[1, 50] Pi]}, {
       Rational[4, 5], Rational[13, 5]}, {
       Rational[4, 5] Cos[Rational[1, 50] Pi] + 
        Rational[-7, 5] Sin[Rational[1, 50] Pi], 
        Rational[13, 5] Cos[Rational[1, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[1, 50] Pi]}, {
       Rational[4, 5] Cos[Rational[1, 25] Pi] + 
        Rational[-7, 5] Sin[Rational[1, 25] Pi], 
        Rational[13, 5] Cos[Rational[1, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[1, 25] Pi]}, {
       Rational[4, 5] Cos[Rational[3, 50] Pi] + 
        Rational[-7, 5] Sin[Rational[3, 50] Pi], 
        Rational[13, 5] Cos[Rational[3, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[3, 50] Pi]}, {
       Rational[4, 5] Cos[Rational[2, 25] Pi] + 
        Rational[-7, 5] Sin[Rational[2, 25] Pi], 
        Rational[13, 5] Cos[Rational[2, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[2, 25] Pi]}, {
       Rational[7, 20] (1 - 5^Rational[1, 2]) + 
        Rational[4, 5] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[1, 5] (1 - 5^Rational[1, 2]) + 
        Rational[13, 5] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
       Rational[4, 5] Cos[Rational[3, 25] Pi] + 
        Rational[-7, 5] Sin[Rational[3, 25] Pi], 
        Rational[13, 5] Cos[Rational[3, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[3, 25] Pi]}, {
       Rational[4, 5] Cos[Rational[7, 50] Pi] + 
        Rational[-7, 5] Sin[Rational[7, 50] Pi], 
        Rational[13, 5] Cos[Rational[7, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[7, 50] Pi]}, {
       Rational[4, 5] Cos[Rational[4, 25] Pi] + 
        Rational[-7, 5] Sin[Rational[4, 25] Pi], 
        Rational[13, 5] Cos[Rational[4, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[4, 25] Pi]}, {
       Rational[4, 5] Cos[Rational[9, 50] Pi] + 
        Rational[-7, 5] Sin[Rational[9, 50] Pi], 
        Rational[13, 5] Cos[Rational[9, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[9, 50] Pi]}, {
       Rational[-7, 5] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[1, 5] (1 + 5^Rational[1, 2]), 
        Rational[-4, 5] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[13, 20] (1 + 5^Rational[1, 2])}, {
       Rational[4, 5] Cos[Rational[11, 50] Pi] + 
        Rational[-7, 5] Sin[Rational[11, 50] Pi], 
        Rational[13, 5] Cos[Rational[11, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[11, 50] Pi]}, {
       Rational[4, 5] Cos[Rational[6, 25] Pi] + 
        Rational[-7, 5] Sin[Rational[6, 25] Pi], 
        Rational[13, 5] Cos[Rational[6, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[6, 25] Pi]}, {
       Rational[-7, 5] Cos[Rational[6, 25] Pi] + 
        Rational[4, 5] Sin[Rational[6, 25] Pi], 
        Rational[-4, 5] Cos[Rational[6, 25] Pi] + 
        Rational[13, 5] Sin[Rational[6, 25] Pi]}, {
       Rational[-7, 5] Cos[Rational[11, 50] Pi] + 
        Rational[4, 5] Sin[Rational[11, 50] Pi], 
        Rational[-4, 5] Cos[Rational[11, 50] Pi] + 
        Rational[13, 5] Sin[Rational[11, 50] Pi]}, {
       Rational[7, 20] (-1 - 5^Rational[1, 2]) + 
        Rational[4, 5] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[1, 5] (-1 - 5^Rational[1, 2]) + 
        Rational[13, 5] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
       Rational[-7, 5] Cos[Rational[9, 50] Pi] + 
        Rational[4, 5] Sin[Rational[9, 50] Pi], 
        Rational[-4, 5] Cos[Rational[9, 50] Pi] + 
        Rational[13, 5] Sin[Rational[9, 50] Pi]}, {
       Rational[-7, 5] Cos[Rational[4, 25] Pi] + 
        Rational[4, 5] Sin[Rational[4, 25] Pi], 
        Rational[-4, 5] Cos[Rational[4, 25] Pi] + 
        Rational[13, 5] Sin[Rational[4, 25] Pi]}, {
       Rational[-7, 5] Cos[Rational[7, 50] Pi] + 
        Rational[4, 5] Sin[Rational[7, 50] Pi], 
        Rational[-4, 5] Cos[Rational[7, 50] Pi] + 
        Rational[13, 5] Sin[Rational[7, 50] Pi]}, {
       Rational[-7, 5] Cos[Rational[3, 25] Pi] + 
        Rational[4, 5] Sin[Rational[3, 25] Pi], 
        Rational[-4, 5] Cos[Rational[3, 25] Pi] + 
        Rational[13, 5] Sin[Rational[3, 25] Pi]}, {
       Rational[-7, 5] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[1, 5] (-1 + 5^Rational[1, 2]), 
        Rational[-4, 5] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[13, 20] (-1 + 5^Rational[1, 2])}, {
       Rational[-7, 5] Cos[Rational[2, 25] Pi] + 
        Rational[4, 5] Sin[Rational[2, 25] Pi], 
        Rational[-4, 5] Cos[Rational[2, 25] Pi] + 
        Rational[13, 5] Sin[Rational[2, 25] Pi]}, {
       Rational[-7, 5] Cos[Rational[3, 50] Pi] + 
        Rational[4, 5] Sin[Rational[3, 50] Pi], 
        Rational[-4, 5] Cos[Rational[3, 50] Pi] + 
        Rational[13, 5] Sin[Rational[3, 50] Pi]}, {
       Rational[-7, 5] Cos[Rational[1, 25] Pi] + 
        Rational[4, 5] Sin[Rational[1, 25] Pi], 
        Rational[-4, 5] Cos[Rational[1, 25] Pi] + 
        Rational[13, 5] Sin[Rational[1, 25] Pi]}, {
       Rational[-7, 5] Cos[Rational[1, 50] Pi] + 
        Rational[4, 5] Sin[Rational[1, 50] Pi], 
        Rational[-4, 5] Cos[Rational[1, 50] Pi] + 
        Rational[13, 5] Sin[Rational[1, 50] Pi]}, {
       Rational[-7, 5], Rational[-4, 5]}, {
       Rational[-7, 5] Cos[Rational[1, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[1, 50] Pi], 
        Rational[-4, 5] Cos[Rational[1, 50] Pi] + 
        Rational[-13, 5] Sin[Rational[1, 50] Pi]}, {
       Rational[-7, 5] Cos[Rational[1, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[1, 25] Pi], 
        Rational[-4, 5] Cos[Rational[1, 25] Pi] + 
        Rational[-13, 5] Sin[Rational[1, 25] Pi]}, {
       Rational[-7, 5] Cos[Rational[3, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[3, 50] Pi], 
        Rational[-4, 5] Cos[Rational[3, 50] Pi] + 
        Rational[-13, 5] Sin[Rational[3, 50] Pi]}, {
       Rational[-7, 5] Cos[Rational[2, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[2, 25] Pi], 
        Rational[-4, 5] Cos[Rational[2, 25] Pi] + 
        Rational[-13, 5] Sin[Rational[2, 25] Pi]}, {
       Rational[1, 5] (1 - 5^Rational[1, 2]) + 
        Rational[-7, 5] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[13, 20] (1 - 5^Rational[1, 2]) + 
        Rational[-4, 5] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
       Rational[-7, 5] Cos[Rational[3, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[3, 25] Pi], 
        Rational[-4, 5] Cos[Rational[3, 25] Pi] + 
        Rational[-13, 5] Sin[Rational[3, 25] Pi]}, {
       Rational[-7, 5] Cos[Rational[7, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[7, 50] Pi], 
        Rational[-4, 5] Cos[Rational[7, 50] Pi] + 
        Rational[-13, 5] Sin[Rational[7, 50] Pi]}, {
       Rational[-7, 5] Cos[Rational[4, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[4, 25] Pi], 
        Rational[-4, 5] Cos[Rational[4, 25] Pi] + 
        Rational[-13, 5] Sin[Rational[4, 25] Pi]}, {
       Rational[-7, 5] Cos[Rational[9, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[9, 50] Pi], 
        Rational[-4, 5] Cos[Rational[9, 50] Pi] + 
        Rational[-13, 5] Sin[Rational[9, 50] Pi]}, {
       Rational[7, 20] (-1 - 5^Rational[1, 2]) + 
        Rational[-4, 5] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[1, 5] (-1 - 5^Rational[1, 2]) + 
        Rational[-13, 5] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
       Rational[-7, 5] Cos[Rational[11, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[11, 50] Pi], 
        Rational[-4, 5] Cos[Rational[11, 50] Pi] + 
        Rational[-13, 5] Sin[Rational[11, 50] Pi]}, {
       Rational[-7, 5] Cos[Rational[6, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[6, 25] Pi], 
        Rational[-4, 5] Cos[Rational[6, 25] Pi] + 
        Rational[-13, 5] Sin[Rational[6, 25] Pi]}, {
       Rational[-4, 5] Cos[Rational[6, 25] Pi] + 
        Rational[-7, 5] Sin[Rational[6, 25] Pi], 
        Rational[-13, 5] Cos[Rational[6, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[6, 25] Pi]}, {
       Rational[-4, 5] Cos[Rational[11, 50] Pi] + 
        Rational[-7, 5] Sin[Rational[11, 50] Pi], 
        Rational[-13, 5] Cos[Rational[11, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[11, 50] Pi]}, {
       Rational[1, 5] (-1 - 5^Rational[1, 2]) + 
        Rational[-7, 5] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[13, 20] (-1 - 5^Rational[1, 2]) + 
        Rational[-4, 5] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
       Rational[-4, 5] Cos[Rational[9, 50] Pi] + 
        Rational[-7, 5] Sin[Rational[9, 50] Pi], 
        Rational[-13, 5] Cos[Rational[9, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[9, 50] Pi]}, {
       Rational[-4, 5] Cos[Rational[4, 25] Pi] + 
        Rational[-7, 5] Sin[Rational[4, 25] Pi], 
        Rational[-13, 5] Cos[Rational[4, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[4, 25] Pi]}, {
       Rational[-4, 5] Cos[Rational[7, 50] Pi] + 
        Rational[-7, 5] Sin[Rational[7, 50] Pi], 
        Rational[-13, 5] Cos[Rational[7, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[7, 50] Pi]}, {
       Rational[-4, 5] Cos[Rational[3, 25] Pi] + 
        Rational[-7, 5] Sin[Rational[3, 25] Pi], 
        Rational[-13, 5] Cos[Rational[3, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[3, 25] Pi]}, {
       Rational[7, 20] (1 - 5^Rational[1, 2]) + 
        Rational[-4, 5] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[1, 5] (1 - 5^Rational[1, 2]) + 
        Rational[-13, 5] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
       Rational[-4, 5] Cos[Rational[2, 25] Pi] + 
        Rational[-7, 5] Sin[Rational[2, 25] Pi], 
        Rational[-13, 5] Cos[Rational[2, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[2, 25] Pi]}, {
       Rational[-4, 5] Cos[Rational[3, 50] Pi] + 
        Rational[-7, 5] Sin[Rational[3, 50] Pi], 
        Rational[-13, 5] Cos[Rational[3, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[3, 50] Pi]}, {
       Rational[-4, 5] Cos[Rational[1, 25] Pi] + 
        Rational[-7, 5] Sin[Rational[1, 25] Pi], 
        Rational[-13, 5] Cos[Rational[1, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[1, 25] Pi]}, {
       Rational[-4, 5] Cos[Rational[1, 50] Pi] + 
        Rational[-7, 5] Sin[Rational[1, 50] Pi], 
        Rational[-13, 5] Cos[Rational[1, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[1, 50] Pi]}, {
       Rational[-4, 5], Rational[-13, 5]}, {
       Rational[-4, 5] Cos[Rational[1, 50] Pi] + 
        Rational[7, 5] Sin[Rational[1, 50] Pi], 
        Rational[-13, 5] Cos[Rational[1, 50] Pi] + 
        Rational[4, 5] Sin[Rational[1, 50] Pi]}, {
       Rational[-4, 5] Cos[Rational[1, 25] Pi] + 
        Rational[7, 5] Sin[Rational[1, 25] Pi], 
        Rational[-13, 5] Cos[Rational[1, 25] Pi] + 
        Rational[4, 5] Sin[Rational[1, 25] Pi]}, {
       Rational[-4, 5] Cos[Rational[3, 50] Pi] + 
        Rational[7, 5] Sin[Rational[3, 50] Pi], 
        Rational[-13, 5] Cos[Rational[3, 50] Pi] + 
        Rational[4, 5] Sin[Rational[3, 50] Pi]}, {
       Rational[-4, 5] Cos[Rational[2, 25] Pi] + 
        Rational[7, 5] Sin[Rational[2, 25] Pi], 
        Rational[-13, 5] Cos[Rational[2, 25] Pi] + 
        Rational[4, 5] Sin[Rational[2, 25] Pi]}, {
       Rational[-4, 5] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[7, 20] (-1 + 5^Rational[1, 2]), 
        Rational[-13, 5] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[1, 5] (-1 + 5^Rational[1, 2])}, {
       Rational[-4, 5] Cos[Rational[3, 25] Pi] + 
        Rational[7, 5] Sin[Rational[3, 25] Pi], 
        Rational[-13, 5] Cos[Rational[3, 25] Pi] + 
        Rational[4, 5] Sin[Rational[3, 25] Pi]}, {
       Rational[-4, 5] Cos[Rational[7, 50] Pi] + 
        Rational[7, 5] Sin[Rational[7, 50] Pi], 
        Rational[-13, 5] Cos[Rational[7, 50] Pi] + 
        Rational[4, 5] Sin[Rational[7, 50] Pi]}, {
       Rational[-4, 5] Cos[Rational[4, 25] Pi] + 
        Rational[7, 5] Sin[Rational[4, 25] Pi], 
        Rational[-13, 5] Cos[Rational[4, 25] Pi] + 
        Rational[4, 5] Sin[Rational[4, 25] Pi]}, {
       Rational[-4, 5] Cos[Rational[9, 50] Pi] + 
        Rational[7, 5] Sin[Rational[9, 50] Pi], 
        Rational[-13, 5] Cos[Rational[9, 50] Pi] + 
        Rational[4, 5] Sin[Rational[9, 50] Pi]}, {
       Rational[1, 5] (-1 - 5^Rational[1, 2]) + 
        Rational[7, 5] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[13, 20] (-1 - 5^Rational[1, 2]) + 
        Rational[4, 5] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
       Rational[-4, 5] Cos[Rational[11, 50] Pi] + 
        Rational[7, 5] Sin[Rational[11, 50] Pi], 
        Rational[-13, 5] Cos[Rational[11, 50] Pi] + 
        Rational[4, 5] Sin[Rational[11, 50] Pi]}, {
       Rational[-4, 5] Cos[Rational[6, 25] Pi] + 
        Rational[7, 5] Sin[Rational[6, 25] Pi], 
        Rational[-13, 5] Cos[Rational[6, 25] Pi] + 
        Rational[4, 5] Sin[Rational[6, 25] Pi]}, {
       Rational[7, 5] Cos[Rational[6, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[6, 25] Pi], 
        Rational[4, 5] Cos[Rational[6, 25] Pi] + 
        Rational[-13, 5] Sin[Rational[6, 25] Pi]}, {
       Rational[7, 5] Cos[Rational[11, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[11, 50] Pi], 
        Rational[4, 5] Cos[Rational[11, 50] Pi] + 
        Rational[-13, 5] Sin[Rational[11, 50] Pi]}, {
       Rational[-4, 5] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[7, 20] (1 + 5^Rational[1, 2]), 
        Rational[-13, 5] (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2] + Rational[1, 5] (1 + 5^Rational[1, 2])}, {
       Rational[7, 5] Cos[Rational[9, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[9, 50] Pi], 
        Rational[4, 5] Cos[Rational[9, 50] Pi] + 
        Rational[-13, 5] Sin[Rational[9, 50] Pi]}, {
       Rational[7, 5] Cos[Rational[4, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[4, 25] Pi], 
        Rational[4, 5] Cos[Rational[4, 25] Pi] + 
        Rational[-13, 5] Sin[Rational[4, 25] Pi]}, {
       Rational[7, 5] Cos[Rational[7, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[7, 50] Pi], 
        Rational[4, 5] Cos[Rational[7, 50] Pi] + 
        Rational[-13, 5] Sin[Rational[7, 50] Pi]}, {
       Rational[7, 5] Cos[Rational[3, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[3, 25] Pi], 
        Rational[4, 5] Cos[Rational[3, 25] Pi] + 
        Rational[-13, 5] Sin[Rational[3, 25] Pi]}, {
       Rational[1, 5] (1 - 5^Rational[1, 2]) + 
        Rational[7, 5] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[13, 20] (1 - 5^Rational[1, 2]) + 
        Rational[4, 5] (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
       Rational[7, 5] Cos[Rational[2, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[2, 25] Pi], 
        Rational[4, 5] Cos[Rational[2, 25] Pi] + 
        Rational[-13, 5] Sin[Rational[2, 25] Pi]}, {
       Rational[7, 5] Cos[Rational[3, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[3, 50] Pi], 
        Rational[4, 5] Cos[Rational[3, 50] Pi] + 
        Rational[-13, 5] Sin[Rational[3, 50] Pi]}, {
       Rational[7, 5] Cos[Rational[1, 25] Pi] + 
        Rational[-4, 5] Sin[Rational[1, 25] Pi], 
        Rational[4, 5] Cos[Rational[1, 25] Pi] + 
        Rational[-13, 5] Sin[Rational[1, 25] Pi]}, {
       Rational[7, 5] Cos[Rational[1, 50] Pi] + 
        Rational[-4, 5] Sin[Rational[1, 50] Pi], 
        Rational[4, 5] Cos[Rational[1, 50] Pi] + 
        Rational[-13, 5] Sin[Rational[1, 50] Pi]}, {
       Rational[7, 5], Rational[4, 5]}}, CompressedData["
1:eJxd1X9M1HUYB3Dg7rKWowYcGiBwpoDglAIzRH2+KguQoYGgRIxhCYf8MLDi
10IIEmGQUorAWRgsZCITKqS1Cc8nUjKEMWC409YpdiEwRBCOuxPMoL37p/f2
2bNn+/z33muP6r0PwuOtLCws4hff0kz4N3OkqV7KGHkmhalueRjJ1cccZN01
SXknVunuDhop8+CRwStj07TdVt13K8FEvaXBeSGxs2Ruds9xGzaRvLPAPrRj
jjySfgrZt9NMDdlPwiKWmYkuN9vPl5hJ56VR2Wyep17DsoyhH82U9UauZVjI
U9pjCLVvvWkmjd3uTcYdz2hF/GF9wXUzXYxq//CzMgvJ12lEFVS/+D9rszJS
bSkdeVYbuybZTKMltSnl3lbSbvcHB8JXmCnAdqdX8gMrqSXbtt2t0URNlXmn
15fKpLimF+68tMZEx54r8tnoKJdcVJ3uFceN5JCeWjZ8Vi5Neqf8sr9vjkbd
/Oq7nsolzYbGnuVWcxTT6lCSsVchVZwqvVTkbKAvfLNbakoVUtR6S2pcO0vd
2vAIq+8V0s7Q87NHV87QhsRvL+V0KqRA96ruKeM0Lb9cZWO8qpDqUh5tDbw+
RQMU5Zhbq5Bi3c3bomSP6KOaxGKPNIWkaeu+1hMzQcr3v/H2Wre4o4fenqXI
pUNjz/uXXB2hsZP+zUnvyiVrtX9w/o0/KUB5ND5zSCat/vpUdY64R3H56QE5
/jJJbxqIf3nv76R/a+Gu9UkrKWaHZ/IZyyEaP69O1fdaSr72Zb92bOulrsJK
m/Z5C0l7ob3zt2hB9Q5aVepKC0n0a1ZnbDlHh0qvFLUG/02miOgX/Vx+YIMx
1sGwa4GinHUzuk+62Kk3WNmgekJfdpwrb73Yz/Fau8THeiNlJGTtUcm0fD+o
o/mVcgO9LasuCAnQcUaX9cPMtTPUUhHJaT73WXkg7tVjDVP0pnXj1qjX/+It
7mGdB1+boBznpsQhx1FWhxQfDjGO0OzGr5TGiXFON3i6Wl4YpvHC0u/0dQ/Z
9YY649pxLW2S+51OWzXF8hH/0PzQm1R3m/rc3plm8alteHFfPTUMT9rtL3zM
9xzDUrYnC44+U63q18xwZXvbOr3TILt87F2VWzPLC2ebxe2pP3jg5xPOkZ8b
WJdypy1wn57hg9ELwwfDB8MHwwfDB8MHwwfDB8MHwwfDB8MHwwfDB8MHwwfD
B8OHgA+GDwEfDB8CPhg+BHwwfAj4YPgQ8MHwIeCD4UPAB8OHgA+GDwEfDB8C
Phg+BHwwfAj4YPgQ8MHwIeCD4UP81wN8CPhg+BDwwfAh4IPhQ8AHw4eAD4YP
AR8MHwI+GD4EfDB8MHwQfDB8EHwwfBB8MHwQfDB8EHwwfBB8MHwQfDB8EHww
fBB8MHwQfDB8EHwwfBB8MHwQfBB8EHwQfBB8EHwQfND/78c/MVo0RA==
      "]]]}},
  Axes->True,
  PlotRange->{{-3, 3}, {-3, 3}}]], "Output",
 CellChangeTimes->{
  3.467308218139419*^9, 3.4673204019630404`*^9, 3.4673207118715267`*^9, 
   3.46732077710308*^9, 3.467323299802804*^9, 3.467323418981749*^9, {
   3.469826721707519*^9, 3.469826728983198*^9}, 3.46982679002223*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cpoints", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}], ",", 
       RowBox[{"2", 
        RowBox[{"\[Pi]", "/", "100"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Blue", ",", 
     RowBox[{"Point", "[", "cpoints", "]"}], ",", "Red", ",", 
     RowBox[{"Point", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"A", ".", "#"}], "&"}], "/@", "cpoints"}], "]"}], ",", "Gray",
      ",", 
     RowBox[{"Arrowheads", "[", "0.02", "]"}], ",", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"cpoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"A", ".", "#"}], "&"}], "/@", "cpoints"}]}], "}"}]}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.467258582135038*^9, 3.467258765939044*^9}, {
  3.467258820141706*^9, 3.4672588502999697`*^9}, {3.467258940882806*^9, 
  3.4672589474764833`*^9}, {3.467286184752606*^9, 3.467286191688211*^9}, {
  3.467308156823097*^9, 3.467308164341156*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], 
    PointBox[NCache[{{1, 0}, {
       Cos[Rational[1, 50] Pi], Sin[Rational[1, 50] Pi]}, {
       Cos[Rational[1, 25] Pi], Sin[Rational[1, 25] Pi]}, {
       Cos[Rational[3, 50] Pi], Sin[Rational[3, 50] Pi]}, {
       Cos[Rational[2, 25] Pi], Sin[
        Rational[2, 25] Pi]}, {(Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
       Cos[Rational[3, 25] Pi], Sin[Rational[3, 25] Pi]}, {
       Cos[Rational[7, 50] Pi], Sin[Rational[7, 50] Pi]}, {
       Cos[Rational[4, 25] Pi], Sin[Rational[4, 25] Pi]}, {
       Cos[Rational[9, 50] Pi], Sin[Rational[9, 50] Pi]}, {
       Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       Cos[Rational[11, 50] Pi], Sin[Rational[11, 50] Pi]}, {
       Cos[Rational[6, 25] Pi], Sin[Rational[6, 25] Pi]}, {
       Sin[Rational[6, 25] Pi], Cos[Rational[6, 25] Pi]}, {
       Sin[Rational[11, 50] Pi], Cos[
        Rational[11, 50] Pi]}, {(Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (1 + 5^Rational[1, 2])}, {
       Sin[Rational[9, 50] Pi], Cos[Rational[9, 50] Pi]}, {
       Sin[Rational[4, 25] Pi], Cos[Rational[4, 25] Pi]}, {
       Sin[Rational[7, 50] Pi], Cos[Rational[7, 50] Pi]}, {
       Sin[Rational[3, 25] Pi], Cos[Rational[3, 25] Pi]}, {
       Rational[1, 4] (-1 + 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       Sin[Rational[2, 25] Pi], Cos[Rational[2, 25] Pi]}, {
       Sin[Rational[3, 50] Pi], Cos[Rational[3, 50] Pi]}, {
       Sin[Rational[1, 25] Pi], Cos[Rational[1, 25] Pi]}, {
       Sin[Rational[1, 50] Pi], Cos[Rational[1, 50] Pi]}, {0, 
       1}, {-Sin[Rational[1, 50] Pi], Cos[Rational[1, 50] Pi]}, {-
        Sin[Rational[1, 25] Pi], Cos[Rational[1, 25] Pi]}, {-
        Sin[Rational[3, 50] Pi], Cos[Rational[3, 50] Pi]}, {-
        Sin[Rational[2, 25] Pi], Cos[Rational[2, 25] Pi]}, {
       Rational[1, 4] (1 - 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {-
        Sin[Rational[3, 25] Pi], Cos[Rational[3, 25] Pi]}, {-
        Sin[Rational[7, 50] Pi], Cos[Rational[7, 50] Pi]}, {-
        Sin[Rational[4, 25] Pi], Cos[Rational[4, 25] Pi]}, {-
        Sin[Rational[9, 50] Pi], Cos[
        Rational[9, 50] 
         Pi]}, {-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
         Rational[1, 2], Rational[1, 4] (1 + 5^Rational[1, 2])}, {-
        Sin[Rational[11, 50] Pi], Cos[Rational[11, 50] Pi]}, {-
        Sin[Rational[6, 25] Pi], Cos[Rational[6, 25] Pi]}, {-
        Cos[Rational[6, 25] Pi], Sin[Rational[6, 25] Pi]}, {-
        Cos[Rational[11, 50] Pi], Sin[Rational[11, 50] Pi]}, {
       Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {-
        Cos[Rational[9, 50] Pi], Sin[Rational[9, 50] Pi]}, {-
        Cos[Rational[4, 25] Pi], Sin[Rational[4, 25] Pi]}, {-
        Cos[Rational[7, 50] Pi], Sin[Rational[7, 50] Pi]}, {-
        Cos[Rational[3, 25] Pi], Sin[
        Rational[3, 25] 
         Pi]}, {-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[1, 2], Rational[1, 4] (-1 + 5^Rational[1, 2])}, {-
        Cos[Rational[2, 25] Pi], Sin[Rational[2, 25] Pi]}, {-
        Cos[Rational[3, 50] Pi], Sin[Rational[3, 50] Pi]}, {-
        Cos[Rational[1, 25] Pi], Sin[Rational[1, 25] Pi]}, {-
        Cos[Rational[1, 50] Pi], Sin[Rational[1, 50] Pi]}, {-1, 
       0}, {-Cos[Rational[1, 50] Pi], -Sin[Rational[1, 50] Pi]}, {-
        Cos[Rational[1, 25] Pi], -Sin[Rational[1, 25] Pi]}, {-
        Cos[Rational[3, 50] Pi], -Sin[Rational[3, 50] Pi]}, {-
        Cos[Rational[2, 25] Pi], -
        Sin[Rational[2, 25] Pi]}, {-(Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (1 - 5^Rational[1, 2])}, {-Cos[Rational[3, 25] Pi], -
        Sin[Rational[3, 25] Pi]}, {-Cos[Rational[7, 50] Pi], -
        Sin[Rational[7, 50] Pi]}, {-Cos[Rational[4, 25] Pi], -
        Sin[Rational[4, 25] Pi]}, {-Cos[Rational[9, 50] Pi], -
        Sin[Rational[9, 50] Pi]}, {
       Rational[1, 4] (-1 - 5^
         Rational[1, 2]), -(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {-
        Cos[Rational[11, 50] Pi], -Sin[Rational[11, 50] Pi]}, {-
        Cos[Rational[6, 25] Pi], -Sin[Rational[6, 25] Pi]}, {-
        Sin[Rational[6, 25] Pi], -Cos[Rational[6, 25] Pi]}, {-
        Sin[Rational[11, 50] Pi], -
        Cos[Rational[11, 50] Pi]}, {-(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (-1 - 5^Rational[1, 2])}, {-Sin[Rational[9, 50] Pi], -
        Cos[Rational[9, 50] Pi]}, {-Sin[Rational[4, 25] Pi], -
        Cos[Rational[4, 25] Pi]}, {-Sin[Rational[7, 50] Pi], -
        Cos[Rational[7, 50] Pi]}, {-Sin[Rational[3, 25] Pi], -
        Cos[Rational[3, 25] Pi]}, {
       Rational[1, 4] (1 - 5^
         Rational[1, 2]), -(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[1, 2]}, {-Sin[Rational[2, 25] Pi], -
        Cos[Rational[2, 25] Pi]}, {-Sin[Rational[3, 50] Pi], -
        Cos[Rational[3, 50] Pi]}, {-Sin[Rational[1, 25] Pi], -
        Cos[Rational[1, 25] Pi]}, {-Sin[Rational[1, 50] Pi], -
        Cos[Rational[1, 50] Pi]}, {0, -1}, {
       Sin[Rational[1, 50] Pi], -Cos[Rational[1, 50] Pi]}, {
       Sin[Rational[1, 25] Pi], -Cos[Rational[1, 25] Pi]}, {
       Sin[Rational[3, 50] Pi], -Cos[Rational[3, 50] Pi]}, {
       Sin[Rational[2, 25] Pi], -Cos[Rational[2, 25] Pi]}, {
       Rational[1, 4] (-1 + 
         5^Rational[1, 2]), -(Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       Sin[Rational[3, 25] Pi], -Cos[Rational[3, 25] Pi]}, {
       Sin[Rational[7, 50] Pi], -Cos[Rational[7, 50] Pi]}, {
       Sin[Rational[4, 25] Pi], -Cos[Rational[4, 25] Pi]}, {
       Sin[Rational[9, 50] Pi], -
        Cos[Rational[9, 50] Pi]}, {(Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
       Sin[Rational[11, 50] Pi], -Cos[Rational[11, 50] Pi]}, {
       Sin[Rational[6, 25] Pi], -Cos[Rational[6, 25] Pi]}, {
       Cos[Rational[6, 25] Pi], -Sin[Rational[6, 25] Pi]}, {
       Cos[Rational[11, 50] Pi], -Sin[Rational[11, 50] Pi]}, {
       Rational[1, 4] (1 + 
         5^Rational[1, 2]), -(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       Cos[Rational[9, 50] Pi], -Sin[Rational[9, 50] Pi]}, {
       Cos[Rational[4, 25] Pi], -Sin[Rational[4, 25] Pi]}, {
       Cos[Rational[7, 50] Pi], -Sin[Rational[7, 50] Pi]}, {
       Cos[Rational[3, 25] Pi], -
        Sin[Rational[3, 25] Pi]}, {(Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (1 - 5^Rational[1, 2])}, {
       Cos[Rational[2, 25] Pi], -Sin[Rational[2, 25] Pi]}, {
       Cos[Rational[3, 50] Pi], -Sin[Rational[3, 50] Pi]}, {
       Cos[Rational[1, 25] Pi], -Sin[Rational[1, 25] Pi]}, {
       Cos[Rational[1, 50] Pi], -Sin[Rational[1, 50] Pi]}, {1, 0}}, {{1, 0}, {
       0.9980267284282716, 0.06279051952931337}, {0.9921147013144779, 
       0.12533323356430426`}, {0.9822872507286887, 0.1873813145857246}, {
       0.9685831611286311, 0.2486898871648548}, {0.9510565162951535, 
       0.30901699437494745`}, {0.9297764858882515, 0.3681245526846779}, {
       0.9048270524660195, 0.4257792915650727}, {0.8763066800438636, 
       0.4817536741017153}, {0.8443279255020151, 0.5358267949789967}, {
       0.8090169943749475, 0.5877852522924731}, {0.7705132427757893, 
       0.6374239897486896}, {0.7289686274214116, 0.6845471059286886}, {
       0.6845471059286886, 0.7289686274214116}, {0.6374239897486896, 
       0.7705132427757893}, {0.5877852522924731, 0.8090169943749475}, {
       0.5358267949789967, 0.8443279255020151}, {0.4817536741017153, 
       0.8763066800438636}, {0.4257792915650727, 0.9048270524660195}, {
       0.3681245526846779, 0.9297764858882515}, {0.30901699437494745`, 
       0.9510565162951535}, {0.2486898871648548, 0.9685831611286311}, {
       0.1873813145857246, 0.9822872507286887}, {0.12533323356430426`, 
       0.9921147013144779}, {0.06279051952931337, 0.9980267284282716}, {0, 
       1}, {-0.06279051952931337, 0.9980267284282716}, {-0.12533323356430426`,
        0.9921147013144779}, {-0.1873813145857246, 
       0.9822872507286887}, {-0.2486898871648548, 
       0.9685831611286311}, {-0.30901699437494745`, 
       0.9510565162951535}, {-0.3681245526846779, 
       0.9297764858882515}, {-0.4257792915650727, 
       0.9048270524660195}, {-0.4817536741017153, 
       0.8763066800438636}, {-0.5358267949789967, 
       0.8443279255020151}, {-0.5877852522924731, 
       0.8090169943749475}, {-0.6374239897486896, 
       0.7705132427757893}, {-0.6845471059286886, 
       0.7289686274214116}, {-0.7289686274214116, 
       0.6845471059286886}, {-0.7705132427757893, 
       0.6374239897486896}, {-0.8090169943749475, 
       0.5877852522924731}, {-0.8443279255020151, 
       0.5358267949789967}, {-0.8763066800438636, 
       0.4817536741017153}, {-0.9048270524660195, 
       0.4257792915650727}, {-0.9297764858882515, 
       0.3681245526846779}, {-0.9510565162951535, 
       0.30901699437494745`}, {-0.9685831611286311, 
       0.2486898871648548}, {-0.9822872507286887, 
       0.1873813145857246}, {-0.9921147013144779, 
       0.12533323356430426`}, {-0.9980267284282716, 0.06279051952931337}, {-1,
        0}, {-0.9980267284282716, -0.06279051952931337}, \
{-0.9921147013144779, -0.12533323356430426`}, {-0.9822872507286887, \
-0.1873813145857246}, {-0.9685831611286311, -0.2486898871648548}, \
{-0.9510565162951535, -0.30901699437494745`}, {-0.9297764858882515, \
-0.3681245526846779}, {-0.9048270524660195, -0.4257792915650727}, \
{-0.8763066800438636, -0.4817536741017153}, {-0.8443279255020151, \
-0.5358267949789967}, {-0.8090169943749475, -0.5877852522924731}, \
{-0.7705132427757893, -0.6374239897486896}, {-0.7289686274214116, \
-0.6845471059286886}, {-0.6845471059286886, -0.7289686274214116}, \
{-0.6374239897486896, -0.7705132427757893}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.5358267949789967, -0.8443279255020151}, \
{-0.4817536741017153, -0.8763066800438636}, {-0.4257792915650727, \
-0.9048270524660195}, {-0.3681245526846779, -0.9297764858882515}, \
{-0.30901699437494745`, -0.9510565162951535}, {-0.2486898871648548, \
-0.9685831611286311}, {-0.1873813145857246, -0.9822872507286887}, \
{-0.12533323356430426`, -0.9921147013144779}, {-0.06279051952931337, \
-0.9980267284282716}, {0, -1}, {0.06279051952931337, -0.9980267284282716}, {
       0.12533323356430426`, -0.9921147013144779}, {
       0.1873813145857246, -0.9822872507286887}, {
       0.2486898871648548, -0.9685831611286311}, {
       0.30901699437494745`, -0.9510565162951535}, {
       0.3681245526846779, -0.9297764858882515}, {
       0.4257792915650727, -0.9048270524660195}, {
       0.4817536741017153, -0.8763066800438636}, {
       0.5358267949789967, -0.8443279255020151}, {
       0.5877852522924731, -0.8090169943749475}, {
       0.6374239897486896, -0.7705132427757893}, {
       0.6845471059286886, -0.7289686274214116}, {
       0.7289686274214116, -0.6845471059286886}, {
       0.7705132427757893, -0.6374239897486896}, {
       0.8090169943749475, -0.5877852522924731}, {
       0.8443279255020151, -0.5358267949789967}, {
       0.8763066800438636, -0.4817536741017153}, {
       0.9048270524660195, -0.4257792915650727}, {
       0.9297764858882515, -0.3681245526846779}, {
       0.9510565162951535, -0.30901699437494745`}, {
       0.9685831611286311, -0.2486898871648548}, {
       0.9822872507286887, -0.1873813145857246}, {
       0.9921147013144779, -0.12533323356430426`}, {
       0.9980267284282716, -0.06279051952931337}, {1, 0}}]]}, 
   {RGBColor[1, 0, 0], PointBox[CompressedData["
1:eJxd1WtM1QUYBnCU0EmUTY0Na4gGstRExZVY7dEMQdBCRdAG2SjwEgG6dCt1
CsI03RDzgmLoKYaFLGWoaKQ8rMMslKmgB8TkIne5nj8c/hlOl9bzqWd79+z9
/O63d2JM4rLY4U5OTrFP51lnHX0WA/91OVwdiwp8ygy8eb5o1NG4Ksw/+9aF
knsGupr3uF/vqUHGT2tuhzYbKK6d4lMdVYdv/0pcd6XGQMIPkzs9Iu9j/ZDv
+LnFBpbOPlO3oLcZJ39uLS3bY2DlCrfukA1t2J0WHnZ4kYHq/GnxuXUd2OTz
XI7dtOPag/jsxhlduNjZMMf3gB2Tv7rhlbO2BxUpVU3HPe3A1n0rz6T04ccM
2y9Z/n3Iyr1t21hiR1F25ekNrr3I27RrRc4pA20HI+p7f+tG/c3pe4dS+7E1
021a9MddKAp1aTi2eAAR4wJqvOsfIPTcPstlJwccc/548eqCDrR6x1TlWRyo
MF9d15XRhg+GP7lfMnUQcXf858/7vQVRk0aHJn0/iIM2Dh3uaMKW6Z/6BA0z
MeH4ML9bZiPMW89nN4U83U/F7K5pr0NWzKzwh9tMpBffbKq01iLPee7p8CwT
k9w9YsrSbDhmaXH+84SJgc0ngh7OrMSoa4GlaekmjugOcf/GxLjCg0mx50sx
8MmB7bm+JjJ2j3LDsDNwjlq3MaVqEJYuv9fyy3eyL+fKe8vXDCJ1TOT+PUnn
OMKvZW5qmwNLLs/K/u51K28n9mzLDHNg/EOPXzNHVvDvnWmp3icHEB2fetzy
WRXjDpXsrGnvx8XlLm80FlZzyNWTSe79WNxW2zmj8y4TP4y+Yp1lYNW1qbFh
Ixrokph/ouhdO7wCXqncm3yfXo/TS5KTelHfciwPCc3cMf3yR7aF3dg6ZebA
0qBWBr8dvjnTqRPR5qriFtd2VndfCBtnaccLW+5Z/S508NCS7rOFvq1InVK0
KiWkkxH+X+4yjjZhflSwU6C1i0UBuYeu9jfA2xg55tGEHr4zdrNj/f67CB7x
0rz3V/fywCOfUv+XbciYNtas297Hse4PIlePvIEn1olhy+bZebFkR+PjMiuq
gx1rQwrs9Pz6+hcL6wqQl3DJJ260wYLZ5s2m5Ew6vslMDIw2OOnzijtBRy5R
PtTllA/KB+WD8kH5oHxQPigflA/KB+WD8kH5oHxQPigflA/KB+WD8kH5oHxQ
PigflA/KB+WD8kH5oHxQPigflA/KB+WD8kH5oHxQPigflA/KB+WD8kH5oHxQ
PigflA/KB+WD8kH5oHxQPiAflA/IB+UD8kH5gHxQPiAflA/IB+UD8kH5gHxQ
PiAflA/IB+UD8kH5gHxQPiAflA/IB+UD8kH5gHxQPiAflA/IB+UD8kH5gHxQ
PiAfkA/IB/7/P/4BQreEVA==
     "]]}, 
   {GrayLevel[0.5], Arrowheads[0.02], ArrowBox[{{1, 0}, {1.1, 0.2}}], 
    ArrowBox[NCache[{{Cos[Rational[1, 50] Pi], Sin[Rational[1, 50] Pi]}, {
       1.1103875051769614`, 0.287512073026693}}, {{0.9980267284282716, 
      0.06279051952931337}, {1.1103875051769614`, 0.287512073026693}}]], 
    ArrowBox[NCache[{{Cos[Rational[1, 25] Pi], Sin[Rational[1, 25] Pi]}, {
       1.1163928181587865`, 0.37388946725292155`}}, {{0.9921147013144779, 
      0.12533323356430426`}, {1.1163928181587865`, 0.37388946725292155`}}]], 
    ArrowBox[NCache[{{Cos[Rational[3, 50] Pi], Sin[Rational[3, 50] Pi]}, {
       1.1179922387187027`, 0.4587912905657522}}, {{0.9822872507286887, 
      0.1873813145857246}, {1.1179922387187027`, 0.4587912905657522}}]], 
    ArrowBox[NCache[{{Cos[Rational[2, 25] Pi], Sin[Rational[2, 25] Pi]}, {
       1.115179454674465, 0.5418824742565229}}, {{0.9685831611286311, 
      0.2486898871648548}, {1.115179454674465, 0.5418824742565229}}]], 
    ArrowBox[NCache[{{(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
        Rational[1, 2], Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
       1.1079655667996584`, 0.6228350953839571}}, {{0.9510565162951535, 
      0.30901699437494745`}, {1.1079655667996584`, 0.6228350953839571}}]], 
    ArrowBox[NCache[{{Cos[Rational[3, 25] Pi], Sin[Rational[3, 25] Pi]}, {
       1.0963790450140123`, 0.7013296709361994}}, {{0.9297764858882515, 
      0.3681245526846779}, {1.0963790450140123`, 0.7013296709361994}}]], 
    ArrowBox[NCache[{{Cos[Rational[7, 50] Pi], Sin[Rational[7, 50] Pi]}, {
       1.080465616025636, 0.7770564186843056}}, {{0.9048270524660195, 
      0.4257792915650727}, {1.080465616025636, 0.7770564186843056}}]], 
    ArrowBox[NCache[{{Cos[Rational[4, 25] Pi], Sin[Rational[4, 25] Pi]}, {
       1.060288082868593, 0.8497164797511741}}, {{0.8763066800438636, 
      0.4817536741017153}, {1.060288082868593, 0.8497164797511741}}]], 
    ArrowBox[NCache[{{Cos[Rational[9, 50] Pi], Sin[Rational[9, 50] Pi]}, {
       1.0359260770480159`, 0.9190230980709984}}, {{0.8443279255020151, 
      0.5358267949789967}, {1.0359260770480159`, 0.9190230980709984}}]], 
    ArrowBox[NCache[{{
       Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       1.0074757442709368`, 0.9847027520844519}}, {{0.8090169943749475, 
      0.5877852522924731}, {1.0074757442709368`, 0.9847027520844519}}]], 
    ArrowBox[NCache[{{Cos[Rational[11, 50] Pi], Sin[Rational[11, 50] Pi]}, {
       0.9750493650031061, 1.0464962342033233`}}, {{0.7705132427757893, 
      0.6374239897486896}, {0.9750493650031061, 1.0464962342033233`}}]], 
    ArrowBox[NCache[{{Cos[Rational[6, 25] Pi], Sin[Rational[6, 25] Pi]}, {
       0.9387749113492905, 1.1041596737844463`}}, {{0.7289686274214116, 
      0.6845471059286886}, {0.9387749113492905, 1.1041596737844463`}}]], 
    ArrowBox[NCache[{{Sin[Rational[6, 25] Pi], Cos[Rational[6, 25] Pi]}, {
       0.8987955420058398, 1.1574654995757139`}}, {{0.6845471059286886, 
      0.7289686274214116}, {0.8987955420058398, 1.1574654995757139`}}]], 
    ArrowBox[NCache[{{Sin[Rational[11, 50] Pi], Cos[Rational[11, 50] Pi]}, {
       0.8552690372787164, 1.2062033378358428`}}, {{0.6374239897486896, 
      0.7705132427757893}, {0.8552690372787164, 1.2062033378358428`}}]], 
    ArrowBox[NCache[{{(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
        Rational[1, 2], Rational[1, 4] (1 + 5^Rational[1, 2])}, {
       0.80836717639671, 1.2501808425834209`}}, {{0.5877852522924731, 
      0.8090169943749475}, {0.80836717639671, 1.2501808425834209`}}]], 
    ArrowBox[NCache[{{Sin[Rational[9, 50] Pi], Cos[Rational[9, 50] Pi]}, {
       0.7582750595772993, 1.2892244546986202`}}, {{0.5358267949789967, 
      0.8443279255020151}, {0.7582750595772993, 1.2892244546986202`}}]], 
    ArrowBox[NCache[{{Sin[Rational[4, 25] Pi], Cos[Rational[4, 25] Pi]}, {
       0.7051903775206596, 1.3231800868817518`}}, {{0.4817536741017153, 
      0.8763066800438636}, {0.7051903775206596, 1.3231800868817518`}}]], 
    ArrowBox[NCache[{{Sin[Rational[7, 50] Pi], Cos[Rational[7, 50] Pi]}, {
       0.649322631214784, 1.3519137317654417`}}, {{0.4257792915650727, 
      0.9048270524660195}, {0.649322631214784, 1.3519137317654417`}}]], 
    ArrowBox[NCache[{{Sin[Rational[3, 25] Pi], Cos[Rational[3, 25] Pi]}, {
       0.5908923051307959, 1.3753119907804876`}}, {{0.3681245526846779, 
      0.9297764858882515}, {0.5908923051307959, 1.3753119907804876`}}]], 
    ArrowBox[NCache[{{
       Rational[1, 4] (-1 + 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       0.5301299970714729, 1.3932825216882043`}}, {{0.30901699437494745`, 
      0.9510565162951535}, {0.5301299970714729, 1.3932825216882043`}}]], 
    ArrowBox[NCache[{{Sin[Rational[2, 25] Pi], Cos[Rational[2, 25] Pi]}, {
       0.4672755081070665, 1.4057544030130544`}}, {{0.2486898871648548, 
      0.9685831611286311}, {0.4672755081070665, 1.4057544030130544`}}]], 
    ArrowBox[NCache[{{Sin[Rational[3, 50] Pi], Cos[Rational[3, 50] Pi]}, {
       0.4025768961900348, 1.4126784139373092`}}, {{0.1873813145857246, 
      0.9822872507286887}, {0.4025768961900348, 1.4126784139373092`}}]], 
    ArrowBox[NCache[{{Sin[Rational[1, 25] Pi], Cos[Rational[1, 25] Pi]}, {
       0.3362894971836302, 1.41402722855313}}, {{0.12533323356430426`, 
      0.9921147013144779}, {0.3362894971836302, 1.41402722855313}}]], 
    ArrowBox[NCache[{{Sin[Rational[1, 50] Pi], Cos[Rational[1, 50] Pi]}, {
       0.268674917167899, 1.4097955237054427`}}, {{0.06279051952931337, 
      0.9980267284282716}, {0.268674917167899, 1.4097955237054427`}}]], 
    ArrowBox[{{0, 1}, {0.19999999999999996`, 1.4}}], 
    ArrowBox[NCache[{{-Sin[Rational[1, 50] Pi], Cos[Rational[1, 50] Pi]}, {
       0.13053577420340956`, 1.3846793158937174`}}, {{-0.06279051952931337, 
      0.9980267284282716}, {0.13053577420340956`, 1.3846793158937174`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[1, 25] Pi], Cos[Rational[1, 25] Pi]}, {
       0.06055638334216085, 1.3638939351274082`}}, {{-0.12533323356430426`, 
      0.9921147013144779}, {0.06055638334216085, 1.3638939351274082`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[3, 50] Pi], Cos[
        Rational[3, 50] Pi]}, {-0.009661995898559372, 
       1.3377258881030192`}}, {{-0.1873813145857246, 
      0.9822872507286887}, {-0.009661995898559372, 1.3377258881030192`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[2, 25] Pi], Cos[
        Rational[2, 25] Pi]}, {-0.07984224365561415, 
       1.3062784481471126`}}, {{-0.2486898871648548, 
      0.9685831611286311}, {-0.07984224365561415, 1.3062784481471126`}}]], 
    ArrowBox[NCache[{{
       Rational[1, 4] (1 - 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^
        Rational[1, 2]}, {-0.14970739055341156`, 
       1.2696757239382253`}}, {{-0.30901699437494745`, 
      0.9510565162951535}, {-0.14970739055341156`, 1.2696757239382253`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[3, 25] Pi], Cos[
        Rational[3, 25] Pi]}, {-0.2189817107754955, 
       1.2280621697066165`}}, {{-0.3681245526846779, 
      0.9297764858882515}, {-0.2189817107754955, 1.2280621697066165`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[7, 50] Pi], Cos[
        Rational[7, 50] Pi]}, {-0.2873918102283762, 
       1.1816020151394127`}}, {{-0.4257792915650727, 
      0.9048270524660195}, {-0.2873918102283762, 1.1816020151394127`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[4, 25] Pi], Cos[
        Rational[4, 25] Pi]}, {-0.3546677055031142, 
       1.130478617241066}}, {{-0.4817536741017153, 
      0.8763066800438636}, {-0.3546677055031142, 1.130478617241066}}]], 
    ArrowBox[
     NCache[{{-Sin[Rational[9, 50] Pi], Cos[
        Rational[9, 50] Pi]}, {-0.42054388937649345`, 
       1.0748937367070217`}}, {{-0.5358267949789967, 
      0.8443279255020151}, {-0.42054388937649345`, 1.0748937367070217`}}]], 
    ArrowBox[NCache[{{-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
         Rational[1, 2], 
        Rational[1, 4] (1 + 5^Rational[1, 2])}, {-0.484760378646731, 
       1.0150667416664316`}}, {{-0.5877852522924731, 
      0.8090169943749475}, {-0.484760378646731, 1.0150667416664316`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[11, 50] Pi], Cos[
        Rational[11, 50] Pi]}, {-0.5470637401684009, 
       0.9512337419363668}}, {{-0.6374239897486896, 
      0.7705132427757893}, {-0.5470637401684009, 0.9512337419363668}}]], 
    ArrowBox[NCache[{{-Sin[Rational[6, 25] Pi], Cos[
        Rational[6, 25] Pi]}, {-0.6072080910372752, 
       0.8836466572042383}}, {{-0.6845471059286886, 
      0.7289686274214116}, {-0.6072080910372752, 0.8836466572042383}}]], 
    ArrowBox[NCache[{{-Cos[Rational[6, 25] Pi], Sin[
        Rational[6, 25] Pi]}, {-0.6649560689778151, 
       0.8125722228158816}}, {{-0.7289686274214116, 
      0.6845471059286886}, {-0.6649560689778151, 0.8125722228158816}}]], 
    ArrowBox[NCache[{{-Cos[Rational[11, 50] Pi], Sin[
        Rational[11, 50] Pi]}, {-0.7200797691036304, 
       0.7382909370930075}}, {{-0.7705132427757893, 
      0.6374239897486896}, {-0.7200797691036304, 0.7382909370930075}}]], 
    ArrowBox[NCache[{{
       Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^
        Rational[1, 2]}, {-0.7723616433539476, 
       0.6610959543344729}}, {{-0.8090169943749475, 
      0.5877852522924731}, {-0.7723616433539476, 0.6610959543344729}}]], 
    ArrowBox[NCache[{{-Cos[Rational[9, 50] Pi], Sin[
        Rational[9, 50] Pi]}, {-0.8215953590564173, 
       0.5812919278701922}}, {{-0.8443279255020151, 
      0.5358267949789967}, {-0.8215953590564173, 0.5812919278701922}}]], 
    ArrowBox[NCache[{{-Cos[Rational[4, 25] Pi], Sin[
        Rational[4, 25] Pi]}, {-0.867586613227907, 
       0.49919380773362876`}}, {{-0.8763066800438636, 
      0.4817536741017153}, {-0.867586613227907, 0.49919380773362876`}}]], 
    ArrowBox[NCache[{{-Cos[Rational[7, 50] Pi], Sin[
        Rational[7, 50] Pi]}, {-0.910153899399607, 
       0.4151255976978978}}, {{-0.9048270524660195, 
      0.4257792915650727}, {-0.910153899399607, 0.4151255976978978}}]], 
    ArrowBox[NCache[{{-Cos[Rational[3, 25] Pi], Sin[
        Rational[3, 25] Pi]}, {-0.9491292239401412, 
       0.3294190765808988}}, {{-0.9297764858882515, 
      0.3681245526846779}, {-0.9491292239401412, 0.3294190765808988}}]], 
    ArrowBox[NCache[{{-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[1, 2], 
        Rational[1, 4] (-1 + 5^Rational[1, 2])}, {-0.9843587690496793, 
       0.2424124888658957}}, {{-0.9510565162951535, 
      0.30901699437494745`}, {-0.9843587690496793, 0.2424124888658957}}]], 
    ArrowBox[NCache[{{-Cos[Rational[2, 25] Pi], Sin[
        Rational[2, 25] Pi]}, {-1.0157034998085233`, 
       0.1544492098050705}}, {{-0.9685831611286311, 
      0.2486898871648548}, {-1.0157034998085233`, 0.1544492098050705}}]], 
    ArrowBox[NCache[{{-Cos[Rational[3, 50] Pi], Sin[
        Rational[3, 50] Pi]}, {-1.0430397128844127`, 
       0.06587639027427669}}, {{-0.9822872507286887, 
      0.1873813145857246}, {-1.0430397128844127`, 0.06587639027427669}}]], 
    ArrowBox[NCache[{{-Cos[Rational[1, 25] Pi], Sin[
        Rational[1, 25] 
         Pi]}, {-1.0662595247330648`, -0.022956413272869625`}}, \
{{-0.9921147013144779, 
      0.12533323356430426`}, {-1.0662595247330648`, \
-0.022956413272869625`}}]], 
    ArrowBox[NCache[{{-Cos[Rational[1, 50] Pi], Sin[
        Rational[1, 50] 
         Pi]}, {-1.085271297365236, -0.11169861834461561`}}, \
{{-0.9980267284282716, 
      0.06279051952931337}, {-1.085271297365236, -0.11169861834461561`}}]], 
    ArrowBox[{{-1, 0}, {-1.1, -0.2}}], 
    ArrowBox[NCache[{{-Cos[Rational[1, 50] Pi], -
        Sin[Rational[1, 50] 
          Pi]}, {-1.1103875051769614`, -0.287512073026693}}, \
{{-0.9980267284282716, -0.06279051952931337}, {-1.1103875051769614`, \
-0.287512073026693}}]], 
    ArrowBox[NCache[{{-Cos[Rational[1, 25] Pi], -
        Sin[
         Rational[1, 25] 
          Pi]}, {-1.1163928181587865`, -0.37388946725292155`}}, \
{{-0.9921147013144779, -0.12533323356430426`}, {-1.1163928181587865`, \
-0.37388946725292155`}}]], 
    ArrowBox[NCache[{{-Cos[Rational[3, 50] Pi], -
        Sin[Rational[3, 50] 
          Pi]}, {-1.1179922387187027`, -0.4587912905657522}}, \
{{-0.9822872507286887, -0.1873813145857246}, {-1.1179922387187027`, \
-0.4587912905657522}}]], 
    ArrowBox[NCache[{{-Cos[Rational[2, 25] Pi], -
        Sin[Rational[2, 25] 
          Pi]}, {-1.115179454674465, -0.5418824742565229}}, \
{{-0.9685831611286311, -0.2486898871648548}, {-1.115179454674465, \
-0.5418824742565229}}]], 
    ArrowBox[NCache[{{-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[1, 2], 
        Rational[1, 4] (1 - 5^
         Rational[
          1, 2])}, {-1.1079655667996584`, -0.6228350953839571}}, \
{{-0.9510565162951535, -0.30901699437494745`}, {-1.1079655667996584`, \
-0.6228350953839571}}]], 
    ArrowBox[NCache[{{-Cos[Rational[3, 25] Pi], -
        Sin[Rational[3, 25] 
          Pi]}, {-1.0963790450140123`, -0.7013296709361994}}, \
{{-0.9297764858882515, -0.3681245526846779}, {-1.0963790450140123`, \
-0.7013296709361994}}]], 
    ArrowBox[NCache[{{-Cos[Rational[7, 50] Pi], -
        Sin[Rational[7, 50] 
          Pi]}, {-1.080465616025636, -0.7770564186843056}}, \
{{-0.9048270524660195, -0.4257792915650727}, {-1.080465616025636, \
-0.7770564186843056}}]], 
    ArrowBox[NCache[{{-Cos[Rational[4, 25] Pi], -
        Sin[Rational[4, 25] 
          Pi]}, {-1.060288082868593, -0.8497164797511741}}, \
{{-0.8763066800438636, -0.4817536741017153}, {-1.060288082868593, \
-0.8497164797511741}}]], 
    ArrowBox[NCache[{{-Cos[Rational[9, 50] Pi], -
        Sin[Rational[9, 50] 
          Pi]}, {-1.0359260770480159`, -0.9190230980709984}}, \
{{-0.8443279255020151, -0.5358267949789967}, {-1.0359260770480159`, \
-0.9190230980709984}}]], 
    ArrowBox[NCache[{{
       Rational[1, 4] (-1 - 5^
         Rational[1, 2]), -(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^
         Rational[
          1, 2]}, {-1.0074757442709368`, -0.9847027520844519}}, \
{{-0.8090169943749475, -0.5877852522924731}, {-1.0074757442709368`, \
-0.9847027520844519}}]], 
    ArrowBox[NCache[{{-Cos[Rational[11, 50] Pi], -
        Sin[Rational[11, 50] 
          Pi]}, {-0.9750493650031061, -1.0464962342033233`}}, \
{{-0.7705132427757893, -0.6374239897486896}, {-0.9750493650031061, \
-1.0464962342033233`}}]], 
    ArrowBox[NCache[{{-Cos[Rational[6, 25] Pi], -
        Sin[Rational[6, 25] 
          Pi]}, {-0.9387749113492905, -1.1041596737844463`}}, \
{{-0.7289686274214116, -0.6845471059286886}, {-0.9387749113492905, \
-1.1041596737844463`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[6, 25] Pi], -
        Cos[Rational[6, 25] 
          Pi]}, {-0.8987955420058398, -1.1574654995757139`}}, \
{{-0.6845471059286886, -0.7289686274214116}, {-0.8987955420058398, \
-1.1574654995757139`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[11, 50] Pi], -
        Cos[Rational[11, 50] 
          Pi]}, {-0.8552690372787164, -1.2062033378358428`}}, \
{{-0.6374239897486896, -0.7705132427757893}, {-0.8552690372787164, \
-1.2062033378358428`}}]], 
    ArrowBox[NCache[{{-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
         Rational[1, 2], 
        Rational[1, 4] (-1 - 5^
         Rational[
          1, 2])}, {-0.80836717639671, -1.2501808425834209`}}, \
{{-0.5877852522924731, -0.8090169943749475}, {-0.80836717639671, \
-1.2501808425834209`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[9, 50] Pi], -
        Cos[Rational[9, 50] 
          Pi]}, {-0.7582750595772993, -1.2892244546986202`}}, \
{{-0.5358267949789967, -0.8443279255020151}, {-0.7582750595772993, \
-1.2892244546986202`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[4, 25] Pi], -
        Cos[Rational[4, 25] 
          Pi]}, {-0.7051903775206596, -1.3231800868817518`}}, \
{{-0.4817536741017153, -0.8763066800438636}, {-0.7051903775206596, \
-1.3231800868817518`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[7, 50] Pi], -
        Cos[Rational[7, 50] 
          Pi]}, {-0.649322631214784, -1.3519137317654417`}}, \
{{-0.4257792915650727, -0.9048270524660195}, {-0.649322631214784, \
-1.3519137317654417`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[3, 25] Pi], -
        Cos[
         Rational[3, 25] 
          Pi]}, {-0.5908923051307959, -1.3753119907804876`}}, \
{{-0.3681245526846779, -0.9297764858882515}, {-0.5908923051307959, \
-1.3753119907804876`}}]], 
    ArrowBox[NCache[{{
       Rational[1, 4] (1 - 5^
         Rational[1, 2]), -(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[
          1, 2]}, {-0.5301299970714729, -1.3932825216882043`}}, \
{{-0.30901699437494745`, -0.9510565162951535}, {-0.5301299970714729, \
-1.3932825216882043`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[2, 25] Pi], -
        Cos[Rational[2, 25] 
          Pi]}, {-0.4672755081070665, -1.4057544030130544`}}, \
{{-0.2486898871648548, -0.9685831611286311}, {-0.4672755081070665, \
-1.4057544030130544`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[3, 50] Pi], -
        Cos[Rational[3, 50] 
          Pi]}, {-0.4025768961900348, -1.4126784139373092`}}, \
{{-0.1873813145857246, -0.9822872507286887}, {-0.4025768961900348, \
-1.4126784139373092`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[1, 25] Pi], -
        Cos[Rational[1, 25] 
          Pi]}, {-0.3362894971836302, -1.41402722855313}}, \
{{-0.12533323356430426`, -0.9921147013144779}, {-0.3362894971836302, \
-1.41402722855313}}]], 
    ArrowBox[NCache[{{-Sin[Rational[1, 50] Pi], -
        Cos[Rational[1, 50] 
          Pi]}, {-0.268674917167899, -1.4097955237054427`}}, \
{{-0.06279051952931337, -0.9980267284282716}, {-0.268674917167899, \
-1.4097955237054427`}}]], ArrowBox[{{0, -1}, {-0.19999999999999996`, -1.4}}], 
    ArrowBox[NCache[{{
       Sin[Rational[1, 50] Pi], -
        Cos[Rational[1, 50] 
          Pi]}, {-0.13053577420340956`, -1.3846793158937174`}}, {{
      0.06279051952931337, -0.9980267284282716}, {-0.13053577420340956`, \
-1.3846793158937174`}}]], 
    ArrowBox[NCache[{{
       Sin[Rational[1, 25] Pi], -
        Cos[Rational[1, 25] 
          Pi]}, {-0.06055638334216085, -1.3638939351274082`}}, {{
      0.12533323356430426`, -0.9921147013144779}, {-0.06055638334216085, \
-1.3638939351274082`}}]], 
    ArrowBox[NCache[{{Sin[Rational[3, 50] Pi], -Cos[Rational[3, 50] Pi]}, {
       0.009661995898559372, -1.3377258881030192`}}, {{
      0.1873813145857246, -0.9822872507286887}, {
      0.009661995898559372, -1.3377258881030192`}}]], 
    ArrowBox[NCache[{{Sin[Rational[2, 25] Pi], -Cos[Rational[2, 25] Pi]}, {
       0.07984224365561415, -1.3062784481471126`}}, {{
      0.2486898871648548, -0.9685831611286311}, {
      0.07984224365561415, -1.3062784481471126`}}]], 
    ArrowBox[NCache[{{
       Rational[1, 4] (-1 + 
         5^Rational[1, 2]), -(Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       0.14970739055341156`, -1.2696757239382253`}}, {{
      0.30901699437494745`, -0.9510565162951535}, {
      0.14970739055341156`, -1.2696757239382253`}}]], 
    ArrowBox[NCache[{{Sin[Rational[3, 25] Pi], -Cos[Rational[3, 25] Pi]}, {
       0.2189817107754955, -1.2280621697066165`}}, {{
      0.3681245526846779, -0.9297764858882515}, {
      0.2189817107754955, -1.2280621697066165`}}]], 
    ArrowBox[NCache[{{Sin[Rational[7, 50] Pi], -Cos[Rational[7, 50] Pi]}, {
       0.2873918102283762, -1.1816020151394127`}}, {{
      0.4257792915650727, -0.9048270524660195}, {
      0.2873918102283762, -1.1816020151394127`}}]], 
    ArrowBox[NCache[{{Sin[Rational[4, 25] Pi], -Cos[Rational[4, 25] Pi]}, {
       0.3546677055031142, -1.130478617241066}}, {{
      0.4817536741017153, -0.8763066800438636}, {
      0.3546677055031142, -1.130478617241066}}]], 
    ArrowBox[NCache[{{Sin[Rational[9, 50] Pi], -Cos[Rational[9, 50] Pi]}, {
       0.42054388937649345`, -1.0748937367070217`}}, {{
      0.5358267949789967, -0.8443279255020151}, {
      0.42054388937649345`, -1.0748937367070217`}}]], 
    ArrowBox[NCache[{{(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
        Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
       0.484760378646731, -1.0150667416664316`}}, {{
      0.5877852522924731, -0.8090169943749475}, {
      0.484760378646731, -1.0150667416664316`}}]], 
    ArrowBox[NCache[{{Sin[Rational[11, 50] Pi], -Cos[Rational[11, 50] Pi]}, {
       0.5470637401684009, -0.9512337419363668}}, {{
      0.6374239897486896, -0.7705132427757893}, {
      0.5470637401684009, -0.9512337419363668}}]], 
    ArrowBox[
     NCache[{{Sin[Rational[6, 25] Pi], -Cos[Rational[6, 25] Pi]}, {
       0.6072080910372752, -0.8836466572042383}}, {{
      0.6845471059286886, -0.7289686274214116}, {
      0.6072080910372752, -0.8836466572042383}}]], 
    ArrowBox[NCache[{{Cos[Rational[6, 25] Pi], -Sin[Rational[6, 25] Pi]}, {
       0.6649560689778151, -0.8125722228158816}}, {{
      0.7289686274214116, -0.6845471059286886}, {
      0.6649560689778151, -0.8125722228158816}}]], 
    ArrowBox[NCache[{{Cos[Rational[11, 50] Pi], -Sin[Rational[11, 50] Pi]}, {
       0.7200797691036304, -0.7382909370930075}}, {{
      0.7705132427757893, -0.6374239897486896}, {
      0.7200797691036304, -0.7382909370930075}}]], 
    ArrowBox[NCache[{{
       Rational[1, 4] (1 + 
         5^Rational[1, 2]), -(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       0.7723616433539476, -0.6610959543344729}}, {{
      0.8090169943749475, -0.5877852522924731}, {
      0.7723616433539476, -0.6610959543344729}}]], 
    ArrowBox[NCache[{{Cos[Rational[9, 50] Pi], -Sin[Rational[9, 50] Pi]}, {
       0.8215953590564173, -0.5812919278701922}}, {{
      0.8443279255020151, -0.5358267949789967}, {
      0.8215953590564173, -0.5812919278701922}}]], 
    ArrowBox[NCache[{{Cos[Rational[4, 25] Pi], -Sin[Rational[4, 25] Pi]}, {
       0.867586613227907, -0.49919380773362876`}}, {{
      0.8763066800438636, -0.4817536741017153}, {
      0.867586613227907, -0.49919380773362876`}}]], 
    ArrowBox[NCache[{{Cos[Rational[7, 50] Pi], -Sin[Rational[7, 50] Pi]}, {
       0.910153899399607, -0.4151255976978978}}, {{
      0.9048270524660195, -0.4257792915650727}, {
      0.910153899399607, -0.4151255976978978}}]], 
    ArrowBox[NCache[{{Cos[Rational[3, 25] Pi], -Sin[Rational[3, 25] Pi]}, {
       0.9491292239401412, -0.3294190765808988}}, {{
      0.9297764858882515, -0.3681245526846779}, {
      0.9491292239401412, -0.3294190765808988}}]], 
    ArrowBox[NCache[{{(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
        Rational[1, 2], Rational[1, 4] (1 - 5^Rational[1, 2])}, {
       0.9843587690496793, -0.2424124888658957}}, {{
      0.9510565162951535, -0.30901699437494745`}, {
      0.9843587690496793, -0.2424124888658957}}]], 
    ArrowBox[NCache[{{Cos[Rational[2, 25] Pi], -Sin[Rational[2, 25] Pi]}, {
       1.0157034998085233`, -0.1544492098050705}}, {{
      0.9685831611286311, -0.2486898871648548}, {
      1.0157034998085233`, -0.1544492098050705}}]], 
    ArrowBox[NCache[{{Cos[Rational[3, 50] Pi], -Sin[Rational[3, 50] Pi]}, {
       1.0430397128844127`, -0.06587639027427669}}, {{
      0.9822872507286887, -0.1873813145857246}, {
      1.0430397128844127`, -0.06587639027427669}}]], 
    ArrowBox[NCache[{{Cos[Rational[1, 25] Pi], -Sin[Rational[1, 25] Pi]}, {
       1.0662595247330648`, 0.022956413272869625`}}, {{
      0.9921147013144779, -0.12533323356430426`}, {1.0662595247330648`, 
      0.022956413272869625`}}]], 
    ArrowBox[NCache[{{Cos[Rational[1, 50] Pi], -Sin[Rational[1, 50] Pi]}, {
       1.085271297365236, 0.11169861834461561`}}, {{
      0.9980267284282716, -0.06279051952931337}, {1.085271297365236, 
      0.11169861834461561`}}]], ArrowBox[{{1, 0}, {1.1, 0.2}}]}},
  Axes->True,
  PlotRange->{{-3, 3}, {-3, 3}}]], "Output",
 CellChangeTimes->{{3.467258830354022*^9, 3.4672588509135027`*^9}, 
   3.4672589480482264`*^9, 3.4672595581519117`*^9, {3.467259685151226*^9, 
   3.467259705056253*^9}, 3.467259762588792*^9, 3.46725987086194*^9, 
   3.467259923174164*^9, 3.4672859845855103`*^9, 3.467286192353483*^9, {
   3.467308157828451*^9, 3.467308165475512*^9}, 3.467320405259799*^9, 
   3.467320556204679*^9, 3.467320712121594*^9, 3.467320777267631*^9, 
   3.467323299950334*^9, 3.467323419124915*^9, 3.469826732761798*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"2", 
    RowBox[{"\[Pi]", "/", "40"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cpoints", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], "-", "d"}], ",", "d"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Arrowheads", "[", ".02", "]"}], ",", "\[IndentingNewLine]", 
     "Blue", ",", "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "#1"}], "}"}], "]"}], ",", 
          
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{
            "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            RowBox[{"1.05", "#1"}]}], "]"}]}], "}"}], "&"}], ",", "cpoints"}],
       "]"}], ",", "\[IndentingNewLine]", "Red", ",", "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "#1"}], "}"}], "]"}], ",", 
          
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{
            "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            RowBox[{"#1", "+", 
             RowBox[{"0.05", 
              RowBox[{"#1", "/", 
               RowBox[{"Norm", "[", "#1", "]"}]}]}]}]}], "]"}]}], "}"}], 
        "&"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"A", ".", "#"}], "&"}], "/@", "cpoints"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "Gray", ",", "\[IndentingNewLine]", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"cpoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"A", ".", "#"}], "&"}], "/@", "cpoints"}]}], "}"}]}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.467258582135038*^9, 3.467258765939044*^9}, {
  3.467258820141706*^9, 3.467258907812311*^9}, {3.467258954525421*^9, 
  3.4672589546667213`*^9}, {3.467261344958975*^9, 3.467261607902265*^9}, {
  3.467285539645301*^9, 3.4672856560035353`*^9}, {3.467285768581883*^9, 
  3.467285782719308*^9}, {3.467285824052806*^9, 3.467285875771356*^9}, {
  3.467285910934929*^9, 3.467285924388647*^9}, {3.4672859968110533`*^9, 
  3.467286000530531*^9}, {3.467304541398273*^9, 3.467304588669086*^9}, {
  3.467308474587092*^9, 3.467308543100094*^9}, {3.4673204127597523`*^9, 
  3.467320418884883*^9}, {3.4673204571217413`*^9, 3.4673204573238153`*^9}, {
  3.467320731294388*^9, 3.467320731549357*^9}}],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0, 0, 1], Arrowheads[
   0.02], {{ArrowBox[{{0, 0}, {1, 0}}], InsetBox["1", {1.05, 0}]}, {
     ArrowBox[NCache[{{0, 0}, {
        Cos[Rational[1, 20] Pi], Sin[Rational[1, 20] Pi]}}, {{0, 0}, {
        0.9876883405951378, 0.15643446504023087`}}]], 
     InsetBox["2", {1.0370727576248946, 0.16425618829224242}]}, {
     ArrowBox[NCache[{{0, 
        0}, {(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[1, 2], Rational[1, 4] (-1 + 5^Rational[1, 2])}}, {{0, 0}, {
        0.9510565162951535, 0.30901699437494745`}}]], 
     InsetBox["3", {0.9986093421099113, 0.32446784409369483}]}, {
     ArrowBox[NCache[{{0, 0}, {
        Cos[Rational[3, 20] Pi], Sin[Rational[3, 20] Pi]}}, {{0, 0}, {
        0.8910065241883679, 0.45399049973954675`}}]], 
     InsetBox["4", {0.9355568503977864, 0.4766900247265241}]}, {
     ArrowBox[NCache[{{0, 0}, {
        Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}}, {{0, 0}, {
        0.8090169943749475, 0.5877852522924731}}]], 
     InsetBox["5", {0.8494678440936949, 0.6171745149070968}]}, {
     ArrowBox[NCache[{{0, 0}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 
        0}, {0.7071067811865475, 0.7071067811865475}}]], 
     InsetBox["6", {0.7424621202458749, 0.7424621202458749}]}, {
     ArrowBox[NCache[{{0, 
        0}, {(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
         Rational[1, 2], Rational[1, 4] (1 + 5^Rational[1, 2])}}, {{0, 0}, {
        0.5877852522924731, 0.8090169943749475}}]], 
     InsetBox["7", {0.6171745149070968, 0.8494678440936949}]}, {
     ArrowBox[NCache[{{0, 0}, {
        Sin[Rational[3, 20] Pi], Cos[Rational[3, 20] Pi]}}, {{0, 0}, {
        0.45399049973954675`, 0.8910065241883679}}]], 
     InsetBox["8", {0.4766900247265241, 0.9355568503977864}]}, {
     ArrowBox[NCache[{{0, 0}, {
        Rational[1, 4] (-1 + 5^Rational[1, 2]), (Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}}, {{0, 0}, {
        0.30901699437494745`, 0.9510565162951535}}]], 
     InsetBox["9", {0.32446784409369483, 0.9986093421099113}]}, {
     ArrowBox[
      NCache[{{0, 0}, {Sin[Rational[1, 20] Pi], Cos[Rational[1, 20] Pi]}}, {{
        0, 0}, {0.15643446504023087`, 0.9876883405951378}}]], 
     InsetBox["10", {0.16425618829224242, 1.0370727576248946}]}, {
     ArrowBox[{{0, 0}, {0, 1}}], InsetBox["11", {0, 1.05}]}, {
     ArrowBox[NCache[{{0, 
        0}, {-Sin[Rational[1, 20] Pi], Cos[Rational[1, 20] Pi]}}, {{0, 
        0}, {-0.15643446504023087`, 0.9876883405951378}}]], 
     InsetBox["12", {-0.16425618829224242, 1.0370727576248946}]}, {
     ArrowBox[NCache[{{0, 0}, {
        Rational[1, 4] (1 - 5^Rational[1, 2]), (Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}}, {{0, 
        0}, {-0.30901699437494745`, 0.9510565162951535}}]], 
     InsetBox["13", {-0.32446784409369483, 0.9986093421099113}]}, {
     ArrowBox[NCache[{{0, 
        0}, {-Sin[Rational[3, 20] Pi], Cos[Rational[3, 20] Pi]}}, {{0, 
        0}, {-0.45399049973954675`, 0.8910065241883679}}]], 
     InsetBox["14", {-0.4766900247265241, 0.9355568503977864}]}, {
     ArrowBox[NCache[{{0, 
        0}, {-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[1, 4] (1 + 5^Rational[1, 2])}}, {{0, 
        0}, {-0.5877852522924731, 0.8090169943749475}}]], 
     InsetBox["15", {-0.6171745149070968, 0.8494678440936949}]}, {
     ArrowBox[NCache[{{0, 0}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 
        0}, {-0.7071067811865475, 0.7071067811865475}}]], 
     InsetBox["16", {-0.7424621202458749, 0.7424621202458749}]}, {
     ArrowBox[NCache[{{0, 0}, {
        Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}}, {{0, 
        0}, {-0.8090169943749475, 0.5877852522924731}}]], 
     InsetBox["17", {-0.8494678440936949, 0.6171745149070968}]}, {
     ArrowBox[NCache[{{0, 
        0}, {-Cos[Rational[3, 20] Pi], Sin[Rational[3, 20] Pi]}}, {{0, 
        0}, {-0.8910065241883679, 0.45399049973954675`}}]], 
     InsetBox["18", {-0.9355568503977864, 0.4766900247265241}]}, {
     ArrowBox[NCache[{{0, 
        0}, {-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[1, 4] (-1 + 5^Rational[1, 2])}}, {{0, 
        0}, {-0.9510565162951535, 0.30901699437494745`}}]], 
     InsetBox["19", {-0.9986093421099113, 0.32446784409369483}]}, {
     ArrowBox[NCache[{{0, 
        0}, {-Cos[Rational[1, 20] Pi], Sin[Rational[1, 20] Pi]}}, {{0, 
        0}, {-0.9876883405951378, 0.15643446504023087`}}]], 
     InsetBox["20", {-1.0370727576248946, 0.16425618829224242}]}, {
     ArrowBox[{{0, 0}, {-1, 0}}], InsetBox["21", {-1.05, 0}]}, {
     ArrowBox[NCache[{{0, 
        0}, {-Cos[Rational[1, 20] Pi], -Sin[Rational[1, 20] Pi]}}, {{0, 
        0}, {-0.9876883405951378, -0.15643446504023087`}}]], 
     InsetBox["22", {-1.0370727576248946, -0.16425618829224242}]}, {
     ArrowBox[NCache[{{0, 
        0}, {-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[1, 4] (1 - 5^Rational[1, 2])}}, {{0, 
        0}, {-0.9510565162951535, -0.30901699437494745`}}]], 
     InsetBox["23", {-0.9986093421099113, -0.32446784409369483}]}, {
     ArrowBox[NCache[{{0, 
        0}, {-Cos[Rational[3, 20] Pi], -Sin[Rational[3, 20] Pi]}}, {{0, 
        0}, {-0.8910065241883679, -0.45399049973954675`}}]], 
     InsetBox["24", {-0.9355568503977864, -0.4766900247265241}]}, {
     ArrowBox[NCache[{{0, 0}, {
        Rational[1, 4] (-1 - 5^
          Rational[1, 2]), -(Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}}, {{0, 
        0}, {-0.8090169943749475, -0.5877852522924731}}]], 
     InsetBox["25", {-0.8494678440936949, -0.6171745149070968}]}, {
     ArrowBox[NCache[{{0, 0}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, 
        0}, {-0.7071067811865475, -0.7071067811865475}}]], 
     InsetBox["26", {-0.7424621202458749, -0.7424621202458749}]}, {
     ArrowBox[NCache[{{0, 
        0}, {-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{0, 
        0}, {-0.5877852522924731, -0.8090169943749475}}]], 
     InsetBox["27", {-0.6171745149070968, -0.8494678440936949}]}, {
     ArrowBox[NCache[{{0, 
        0}, {-Sin[Rational[3, 20] Pi], -Cos[Rational[3, 20] Pi]}}, {{0, 
        0}, {-0.45399049973954675`, -0.8910065241883679}}]], 
     InsetBox["28", {-0.4766900247265241, -0.9355568503977864}]}, {
     ArrowBox[NCache[{{0, 0}, {
        Rational[1, 4] (1 - 5^
          Rational[1, 2]), -(Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}}, {{0, 
        0}, {-0.30901699437494745`, -0.9510565162951535}}]], 
     InsetBox["29", {-0.32446784409369483, -0.9986093421099113}]}, {
     ArrowBox[NCache[{{0, 
        0}, {-Sin[Rational[1, 20] Pi], -Cos[Rational[1, 20] Pi]}}, {{0, 
        0}, {-0.15643446504023087`, -0.9876883405951378}}]], 
     InsetBox["30", {-0.16425618829224242, -1.0370727576248946}]}, {
     ArrowBox[{{0, 0}, {0, -1}}], InsetBox["31", {0, -1.05}]}, {
     ArrowBox[NCache[{{0, 0}, {
        Sin[Rational[1, 20] Pi], -Cos[Rational[1, 20] Pi]}}, {{0, 0}, {
        0.15643446504023087`, -0.9876883405951378}}]], 
     InsetBox["32", {0.16425618829224242, -1.0370727576248946}]}, {
     ArrowBox[NCache[{{0, 0}, {
        Rational[1, 4] (-1 + 
          5^Rational[1, 2]), -(Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}}, {{0, 0}, {
        0.30901699437494745`, -0.9510565162951535}}]], 
     InsetBox["33", {0.32446784409369483, -0.9986093421099113}]}, {
     ArrowBox[NCache[{{0, 0}, {
        Sin[Rational[3, 20] Pi], -Cos[Rational[3, 20] Pi]}}, {{0, 0}, {
        0.45399049973954675`, -0.8910065241883679}}]], 
     InsetBox["34", {0.4766900247265241, -0.9355568503977864}]}, {
     ArrowBox[NCache[{{0, 
        0}, {(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
         Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{0, 0}, {
        0.5877852522924731, -0.8090169943749475}}]], 
     InsetBox["35", {0.6171745149070968, -0.8494678440936949}]}, {
     ArrowBox[NCache[{{0, 0}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, 
        0}, {0.7071067811865475, -0.7071067811865475}}]], 
     InsetBox["36", {0.7424621202458749, -0.7424621202458749}]}, {
     ArrowBox[NCache[{{0, 0}, {
        Rational[1, 4] (1 + 
          5^Rational[1, 2]), -(Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}}, {{0, 0}, {
        0.8090169943749475, -0.5877852522924731}}]], 
     InsetBox["37", {0.8494678440936949, -0.6171745149070968}]}, {
     ArrowBox[NCache[{{0, 0}, {
        Cos[Rational[3, 20] Pi], -Sin[Rational[3, 20] Pi]}}, {{0, 0}, {
        0.8910065241883679, -0.45399049973954675`}}]], 
     InsetBox["38", {0.9355568503977864, -0.4766900247265241}]}, {
     ArrowBox[NCache[{{0, 
        0}, {(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[1, 2], Rational[1, 4] (1 - 5^Rational[1, 2])}}, {{0, 0}, {
        0.9510565162951535, -0.30901699437494745`}}]], 
     InsetBox["39", {0.9986093421099113, -0.32446784409369483}]}, {
     ArrowBox[NCache[{{0, 0}, {
        Cos[Rational[1, 20] Pi], -Sin[Rational[1, 20] Pi]}}, {{0, 0}, {
        0.9876883405951378, -0.15643446504023087`}}]], 
     InsetBox["40", {1.0370727576248946, -0.16425618829224242}]}}, 
   {RGBColor[
    1, 0, 0], {ArrowBox[{{0, 0}, {1.1, 0.2}}], 
     InsetBox["1", {1.1491934955049954, 0.20894427190999917}]}, {
     ArrowBox[{{0, 0}, {1.1177440676626977`, 0.4165459191753508}}], 
     InsetBox["2", {1.1645963704294182, 0.43400620913444254}]}, {
     ArrowBox[{{0, 0}, {1.1079655667996584`, 0.6228350953839571}}], 
     InsetBox["3", {1.1515509907042143, 0.6473363366394562}]}, {
     ArrowBox[{{0, 0}, {1.0709052765551141`, 0.813788004473039}}], 
     InsetBox["4", {1.1107151771335224, 0.8440398112940746}]}, {
     ArrowBox[{{0, 0}, {1.0074757442709368`, 0.9847027520844519}}], 
     InsetBox["5", {1.0432329011467099, 1.0196516538148546}]}, {
     ArrowBox[{{0, 0}, {0.9192388155425117, 1.1313708498984758`}}], 
     InsetBox["6", {0.950768446797235, 1.170176549904289}]}, {
     ArrowBox[{{0, 0}, {0.80836717639671, 1.2501808425834209`}}], 
     InsetBox["7", {0.8355161653474608, 1.2921681311235493}]}, {
     ArrowBox[{{0, 0}, {0.6775908545511751, 1.3382072338116244`}}], 
     InsetBox["8", {0.7001775779266696, 1.3828148556621433}]}, {
     ArrowBox[{{0, 0}, {0.5301299970714729, 1.3932825216882043`}}], 
     InsetBox["9", {0.547910890584577, 1.4400140937340455}]}, {
     ArrowBox[{{0, 0}, {0.3696155796632815, 1.414050569841239}}], 
     InsetBox["10", {0.3822601455469074, 1.4624253045031947}]}, {
     ArrowBox[{{0, 0}, {0.19999999999999996`, 1.4}}], 
     InsetBox["11", {0.20707106781186543, 1.4494974746830582}]}, {
     ArrowBox[{{0, 0}, {0.025459756574773534`, 1.3514767838251467`}}], 
     InsetBox["12", {0.026401513044454695, 1.4014679139859243}]}, {
     ArrowBox[{{0, 0}, {-0.14970739055341156`, 1.2696757239382253`}}], 
     InsetBox["13", {-0.15556232824210267, 1.319331737719655}]}, {
     ArrowBox[{{0, 0}, {-0.3211882448758279, 1.1566110339158056`}}], 
     InsetBox["14", {-0.33456685729424807, 1.2047879239125425}]}, {
     ArrowBox[{{0, 0}, {-0.484760378646731, 1.0150667416664316`}}], 
     InsetBox["15", {-0.5063075989070517, 1.0601856656236053}]}, {
     ArrowBox[{{0, 0}, {-0.6363961030678928, 0.8485281374238569}}], 
     InsetBox["16", {-0.6663961030678929, 0.888528137423857}]}, {
     ArrowBox[{{0, 0}, {-0.7723616433539476, 0.6610959543344729}}], 
     InsetBox["17", {-0.8103470233480483, 0.6936091963552831}]}, {
     ArrowBox[{{0, 0}, {-0.8893090766592955, 0.4573853947976918}}], 
     InsetBox["18", {-0.9337729290842478, 0.4802538409086995}]}, {
     ArrowBox[{{0, 0}, {-0.9843587690496793, 0.2424124888658957}}], 
     InsetBox["19", {-1.0329082673979064, 0.25436850033023856}]}, {
     ArrowBox[{{0, 0}, {-1.0551702816466055`, 0.021470582937295646`}}], 
     InsetBox["20", {-1.1051599338533646, 0.02248777134032466}]}, {
     ArrowBox[{{0, 0}, {-1.1, -0.2}}], 
     InsetBox["21", {-1.1491934955049954, -0.20894427190999917}]}, {
     ArrowBox[{{0, 0}, {-1.1177440676626977`, -0.4165459191753508}}], 
     InsetBox["22", {-1.1645963704294182, -0.43400620913444254}]}, {
     ArrowBox[{{0, 0}, {-1.1079655667996584`, -0.6228350953839571}}], 
     InsetBox["23", {-1.1515509907042143, -0.6473363366394562}]}, {
     ArrowBox[{{0, 0}, {-1.0709052765551141`, -0.813788004473039}}], 
     InsetBox["24", {-1.1107151771335224, -0.8440398112940746}]}, {
     ArrowBox[{{0, 0}, {-1.0074757442709368`, -0.9847027520844519}}], 
     InsetBox["25", {-1.0432329011467099, -1.0196516538148546}]}, {
     ArrowBox[{{0, 0}, {-0.9192388155425117, -1.1313708498984758`}}], 
     InsetBox["26", {-0.950768446797235, -1.170176549904289}]}, {
     ArrowBox[{{0, 0}, {-0.80836717639671, -1.2501808425834209`}}], 
     InsetBox["27", {-0.8355161653474608, -1.2921681311235493}]}, {
     ArrowBox[{{0, 0}, {-0.6775908545511751, -1.3382072338116244`}}], 
     InsetBox["28", {-0.7001775779266696, -1.3828148556621433}]}, {
     ArrowBox[{{0, 0}, {-0.5301299970714729, -1.3932825216882043`}}], 
     InsetBox["29", {-0.547910890584577, -1.4400140937340455}]}, {
     ArrowBox[{{0, 0}, {-0.3696155796632815, -1.414050569841239}}], 
     InsetBox["30", {-0.3822601455469074, -1.4624253045031947}]}, {
     ArrowBox[{{0, 0}, {-0.19999999999999996`, -1.4}}], 
     InsetBox["31", {-0.20707106781186543, -1.4494974746830582}]}, {
     ArrowBox[{{0, 0}, {-0.025459756574773534`, -1.3514767838251467`}}], 
     InsetBox["32", {-0.026401513044454695, -1.4014679139859243}]}, {
     ArrowBox[{{0, 0}, {0.14970739055341156`, -1.2696757239382253`}}], 
     InsetBox["33", {0.15556232824210267, -1.319331737719655}]}, {
     ArrowBox[{{0, 0}, {0.3211882448758279, -1.1566110339158056`}}], 
     InsetBox["34", {0.33456685729424807, -1.2047879239125425}]}, {
     ArrowBox[{{0, 0}, {0.484760378646731, -1.0150667416664316`}}], 
     InsetBox["35", {0.5063075989070517, -1.0601856656236053}]}, {
     ArrowBox[{{0, 0}, {0.6363961030678928, -0.8485281374238569}}], 
     InsetBox["36", {0.6663961030678929, -0.888528137423857}]}, {
     ArrowBox[{{0, 0}, {0.7723616433539476, -0.6610959543344729}}], 
     InsetBox["37", {0.8103470233480483, -0.6936091963552831}]}, {
     ArrowBox[{{0, 0}, {0.8893090766592955, -0.4573853947976918}}], 
     InsetBox["38", {0.9337729290842478, -0.4802538409086995}]}, {
     ArrowBox[{{0, 0}, {0.9843587690496793, -0.2424124888658957}}], 
     InsetBox["39", {1.0329082673979064, -0.25436850033023856}]}, {
     ArrowBox[{{0, 0}, {1.0551702816466055`, -0.021470582937295646`}}], 
     InsetBox["40", {1.1051599338533646, -0.02248777134032466}]}}, 
   {GrayLevel[0.5], ArrowBox[{{1, 0}, {1.1, 0.2}}], 
    ArrowBox[NCache[{{Cos[Rational[1, 20] Pi], Sin[Rational[1, 20] Pi]}, {
       1.1177440676626977`, 0.4165459191753508}}, {{0.9876883405951378, 
      0.15643446504023087`}, {1.1177440676626977`, 0.4165459191753508}}]], 
    ArrowBox[NCache[{{(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
        Rational[1, 2], Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
       1.1079655667996584`, 0.6228350953839571}}, {{0.9510565162951535, 
      0.30901699437494745`}, {1.1079655667996584`, 0.6228350953839571}}]], 
    ArrowBox[NCache[{{Cos[Rational[3, 20] Pi], Sin[Rational[3, 20] Pi]}, {
       1.0709052765551141`, 0.813788004473039}}, {{0.8910065241883679, 
      0.45399049973954675`}, {1.0709052765551141`, 0.813788004473039}}]], 
    ArrowBox[NCache[{{
       Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       1.0074757442709368`, 0.9847027520844519}}, {{0.8090169943749475, 
      0.5877852522924731}, {1.0074757442709368`, 0.9847027520844519}}]], 
    ArrowBox[NCache[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
       0.9192388155425117, 1.1313708498984758`}}, {{0.7071067811865475, 
      0.7071067811865475}, {0.9192388155425117, 1.1313708498984758`}}]], 
    ArrowBox[NCache[{{(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
        Rational[1, 2], Rational[1, 4] (1 + 5^Rational[1, 2])}, {
       0.80836717639671, 1.2501808425834209`}}, {{0.5877852522924731, 
      0.8090169943749475}, {0.80836717639671, 1.2501808425834209`}}]], 
    ArrowBox[NCache[{{Sin[Rational[3, 20] Pi], Cos[Rational[3, 20] Pi]}, {
       0.6775908545511751, 1.3382072338116244`}}, {{0.45399049973954675`, 
      0.8910065241883679}, {0.6775908545511751, 1.3382072338116244`}}]], 
    ArrowBox[NCache[{{
       Rational[1, 4] (-1 + 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       0.5301299970714729, 1.3932825216882043`}}, {{0.30901699437494745`, 
      0.9510565162951535}, {0.5301299970714729, 1.3932825216882043`}}]], 
    ArrowBox[
     NCache[{{Sin[Rational[1, 20] Pi], Cos[Rational[1, 20] Pi]}, {
       0.3696155796632815, 1.414050569841239}}, {{0.15643446504023087`, 
      0.9876883405951378}, {0.3696155796632815, 1.414050569841239}}]], 
    ArrowBox[{{0, 1}, {0.19999999999999996`, 1.4}}], 
    ArrowBox[NCache[{{-Sin[Rational[1, 20] Pi], Cos[Rational[1, 20] Pi]}, {
       0.025459756574773534`, 1.3514767838251467`}}, {{-0.15643446504023087`, 
      0.9876883405951378}, {0.025459756574773534`, 1.3514767838251467`}}]], 
    ArrowBox[NCache[{{
       Rational[1, 4] (1 - 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^
        Rational[1, 2]}, {-0.14970739055341156`, 
       1.2696757239382253`}}, {{-0.30901699437494745`, 
      0.9510565162951535}, {-0.14970739055341156`, 1.2696757239382253`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[3, 20] Pi], Cos[
        Rational[3, 20] Pi]}, {-0.3211882448758279, 
       1.1566110339158056`}}, {{-0.45399049973954675`, 
      0.8910065241883679}, {-0.3211882448758279, 1.1566110339158056`}}]], 
    ArrowBox[NCache[{{-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
         Rational[1, 2], 
        Rational[1, 4] (1 + 5^Rational[1, 2])}, {-0.484760378646731, 
       1.0150667416664316`}}, {{-0.5877852522924731, 
      0.8090169943749475}, {-0.484760378646731, 1.0150667416664316`}}]], 
    ArrowBox[NCache[{{-2^Rational[-1, 2], 2^
        Rational[-1, 2]}, {-0.6363961030678928, 
       0.8485281374238569}}, {{-0.7071067811865475, 
      0.7071067811865475}, {-0.6363961030678928, 0.8485281374238569}}]], 
    ArrowBox[NCache[{{
       Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^
        Rational[1, 2]}, {-0.7723616433539476, 
       0.6610959543344729}}, {{-0.8090169943749475, 
      0.5877852522924731}, {-0.7723616433539476, 0.6610959543344729}}]], 
    ArrowBox[NCache[{{-Cos[Rational[3, 20] Pi], Sin[
        Rational[3, 20] Pi]}, {-0.8893090766592955, 
       0.4573853947976918}}, {{-0.8910065241883679, 
      0.45399049973954675`}, {-0.8893090766592955, 0.4573853947976918}}]], 
    ArrowBox[
     NCache[{{-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[1, 2], 
        Rational[1, 4] (-1 + 5^Rational[1, 2])}, {-0.9843587690496793, 
       0.2424124888658957}}, {{-0.9510565162951535, 
      0.30901699437494745`}, {-0.9843587690496793, 0.2424124888658957}}]], 
    ArrowBox[NCache[{{-Cos[Rational[1, 20] Pi], Sin[
        Rational[1, 20] Pi]}, {-1.0551702816466055`, 
       0.021470582937295646`}}, {{-0.9876883405951378, 
      0.15643446504023087`}, {-1.0551702816466055`, 0.021470582937295646`}}]],
     ArrowBox[{{-1, 0}, {-1.1, -0.2}}], 
    ArrowBox[NCache[{{-Cos[Rational[1, 20] Pi], -
        Sin[Rational[1, 20] 
          Pi]}, {-1.1177440676626977`, -0.4165459191753508}}, \
{{-0.9876883405951378, -0.15643446504023087`}, {-1.1177440676626977`, \
-0.4165459191753508}}]], 
    ArrowBox[NCache[{{-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[1, 2], 
        Rational[1, 4] (1 - 5^
         Rational[
          1, 2])}, {-1.1079655667996584`, -0.6228350953839571}}, \
{{-0.9510565162951535, -0.30901699437494745`}, {-1.1079655667996584`, \
-0.6228350953839571}}]], 
    ArrowBox[NCache[{{-Cos[Rational[3, 20] Pi], -
        Sin[Rational[3, 20] 
          Pi]}, {-1.0709052765551141`, -0.813788004473039}}, \
{{-0.8910065241883679, -0.45399049973954675`}, {-1.0709052765551141`, \
-0.813788004473039}}]], 
    ArrowBox[NCache[{{
       Rational[1, 4] (-1 - 5^
         Rational[1, 2]), -(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^
         Rational[
          1, 2]}, {-1.0074757442709368`, -0.9847027520844519}}, \
{{-0.8090169943749475, -0.5877852522924731}, {-1.0074757442709368`, \
-0.9847027520844519}}]], 
    ArrowBox[NCache[{{-2^Rational[-1, 2], -2^
         Rational[-1, 
           2]}, {-0.9192388155425117, -1.1313708498984758`}}, \
{{-0.7071067811865475, -0.7071067811865475}, {-0.9192388155425117, \
-1.1313708498984758`}}]], 
    ArrowBox[NCache[{{-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
         Rational[1, 2], 
        Rational[1, 4] (-1 - 5^
         Rational[
          1, 2])}, {-0.80836717639671, -1.2501808425834209`}}, \
{{-0.5877852522924731, -0.8090169943749475}, {-0.80836717639671, \
-1.2501808425834209`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[3, 20] Pi], -
        Cos[Rational[3, 20] 
          Pi]}, {-0.6775908545511751, -1.3382072338116244`}}, \
{{-0.45399049973954675`, -0.8910065241883679}, {-0.6775908545511751, \
-1.3382072338116244`}}]], 
    ArrowBox[NCache[{{
       Rational[1, 4] (1 - 5^
         Rational[1, 2]), -(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[
          1, 2]}, {-0.5301299970714729, -1.3932825216882043`}}, \
{{-0.30901699437494745`, -0.9510565162951535}, {-0.5301299970714729, \
-1.3932825216882043`}}]], 
    ArrowBox[NCache[{{-Sin[Rational[1, 20] Pi], -
        Cos[Rational[1, 20] 
          Pi]}, {-0.3696155796632815, -1.414050569841239}}, \
{{-0.15643446504023087`, -0.9876883405951378}, {-0.3696155796632815, \
-1.414050569841239}}]], ArrowBox[{{0, -1}, {-0.19999999999999996`, -1.4}}], 
    ArrowBox[NCache[{{
       Sin[Rational[1, 20] Pi], -
        Cos[Rational[1, 20] 
          Pi]}, {-0.025459756574773534`, -1.3514767838251467`}}, {{
      0.15643446504023087`, -0.9876883405951378}, {-0.025459756574773534`, \
-1.3514767838251467`}}]], 
    ArrowBox[NCache[{{
       Rational[1, 4] (-1 + 
         5^Rational[1, 2]), -(Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       0.14970739055341156`, -1.2696757239382253`}}, {{
      0.30901699437494745`, -0.9510565162951535}, {
      0.14970739055341156`, -1.2696757239382253`}}]], 
    ArrowBox[NCache[{{Sin[Rational[3, 20] Pi], -Cos[Rational[3, 20] Pi]}, {
       0.3211882448758279, -1.1566110339158056`}}, {{
      0.45399049973954675`, -0.8910065241883679}, {
      0.3211882448758279, -1.1566110339158056`}}]], 
    ArrowBox[NCache[{{(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
        Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
       0.484760378646731, -1.0150667416664316`}}, {{
      0.5877852522924731, -0.8090169943749475}, {
      0.484760378646731, -1.0150667416664316`}}]], 
    ArrowBox[NCache[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
       0.6363961030678928, -0.8485281374238569}}, {{
      0.7071067811865475, -0.7071067811865475}, {
      0.6363961030678928, -0.8485281374238569}}]], 
    ArrowBox[NCache[{{
       Rational[1, 4] (1 + 
         5^Rational[1, 2]), -(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       0.7723616433539476, -0.6610959543344729}}, {{
      0.8090169943749475, -0.5877852522924731}, {
      0.7723616433539476, -0.6610959543344729}}]], 
    ArrowBox[NCache[{{Cos[Rational[3, 20] Pi], -Sin[Rational[3, 20] Pi]}, {
       0.8893090766592955, -0.4573853947976918}}, {{
      0.8910065241883679, -0.45399049973954675`}, {
      0.8893090766592955, -0.4573853947976918}}]], 
    ArrowBox[NCache[{{(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
        Rational[1, 2], Rational[1, 4] (1 - 5^Rational[1, 2])}, {
       0.9843587690496793, -0.2424124888658957}}, {{
      0.9510565162951535, -0.30901699437494745`}, {
      0.9843587690496793, -0.2424124888658957}}]], 
    ArrowBox[NCache[{{Cos[Rational[1, 20] Pi], -Sin[Rational[1, 20] Pi]}, {
       1.0551702816466055`, -0.021470582937295646`}}, {{
      0.9876883405951378, -0.15643446504023087`}, {
      1.0551702816466055`, -0.021470582937295646`}}]]}},
  Axes->True,
  ImageSize->{487.9999999999999, Automatic},
  PlotRange->{{-3, 3}, {-3, 3}}]], "Output",
 CellChangeTimes->{{3.467285573219542*^9, 3.467285656661982*^9}, {
   3.46728577168347*^9, 3.467285783259302*^9}, {3.467285829098752*^9, 
   3.467285876181018*^9}, {3.46728591174749*^9, 3.467285924920542*^9}, {
   3.467285986831264*^9, 3.4672860010422153`*^9}, {3.467304542959597*^9, 
   3.46730458940038*^9}, {3.4673084967025146`*^9, 3.467308543841385*^9}, {
   3.467320408004334*^9, 3.467320419841403*^9}, 3.46732045819636*^9, {
   3.467320712507309*^9, 3.467320732224173*^9}, 3.467320777541532*^9, 
   3.467323300416257*^9, 3.467323419386774*^9, 3.4698267359996233`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cpoints", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1", ",", "d"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1", ",", "d"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cpoints", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"RotationMatrix", "[", 
       RowBox[{"ArcTan", "[", "2", "]"}], "]"}], ".", "#"}], "&"}], "/@", 
    RowBox[{"Join", "[", 
     RowBox[{"cpoints", ",", 
      RowBox[{"Reverse", "/@", "cpoints"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Blue", ",", 
     RowBox[{"Point", "[", "cpoints", "]"}], ",", "Red", ",", 
     RowBox[{"Point", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"A", ".", "#"}], "&"}], "/@", "cpoints"}], "]"}], ",", "Gray",
      ",", 
     RowBox[{"Arrowheads", "[", "0.02", "]"}], ",", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"cpoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"A", ".", "#"}], "&"}], "/@", "cpoints"}]}], "}"}]}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.467259047183971*^9, {3.46725909823046*^9, 3.467259220634623*^9}, {
   3.46725925383888*^9, 3.467259303587304*^9}, {3.467259587887423*^9, 
   3.467259595099626*^9}, {3.467259931647127*^9, 3.467259940779505*^9}, {
   3.4673204977415648`*^9, 3.467320498769689*^9}, 3.467322074109535*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], PointBox[CompressedData["
1:eJx1kz9oU1EYxR/dCnVy6VAKKm2hFHHt9IGTXZTaQKEVCopxq5Nk0KWbg9Ch
iGAHFwt1cbRd5FOxDjqFtmmFl8T8Jam1/4y7Nvf8HvhKA+GRm3e/e+7vnHPp
7sPb93uiKMr8+54+v//yjaFXsd07uZW5k/vj2+v7Hj8uW+PZ+E7U2/HWx77i
xFjFHoxcmVl5eeLhWbWwfuzhvbptdfcdepjTsDB33yvT2fxao2nx5aVv85/a
Pvf+yc2LmZb9COteDOtWD3N89umbG1+v/dT8imuO5sU+PVW4vnDhwMrd/QUv
hHOt2X0/76OLC4MDj440/4u3g07b7f5+56udF8u52rFF+uheVg//2/DM2/7N
yd/WDPvhYGFO3l775+dXP3SsFs6Hm6U5olfvi0PB4ap5rvO8JL1ZcY7/1+vo
hXtLenVfr0rvtnzYk17x4vzEF/SKt/RUEp+a8lV+JT7iW0m+ye/EJ3zEl3Cf
auIDvsI95KYMl8Tn87hyD7jiC1zFER/haHCFI1zF0eEqjuQIjg5XfIQreuEq
juQYjg5XcaQHcHS4Mgeu4uhwFUeHK72EKxzgms5jmivc6T2+0HtxMXqvnhu9
x3d6r3taKi/kiHwYvecceo8u5qrn5JieG/lSz+kBPTfylvKbnif5U8/pIT1P
8qie0+Mz+fwLZYcHmQ==
     "]]}, 
   {RGBColor[1, 0, 0], PointBox[CompressedData["
1:eJxllFlIlFEUx0edBStfFCIqZNRcipAojYTgXCMiCYx0NLcs09ReCgKRqAgt
TEbBNhXMFjClCCsKNKg8N1coH0pjtBzLdDSjsZylccuovnO+gexhuNw7557l
///dL+Tw8aQjvhqNxvTn93d9P4Vd4TftGO+49zAx3iAPPT+dGGSaRL/0ZUVd
a3RyojJuQONvwx5ZGLfd4yv7ntjReuojlkf1LD56rZEf9ue/aR23YI1xz/nk
1EUcVPL1YvC0ISB++RwOKv+34G3srI6WbpxW9k0QVVUSvLZoGm3KvhsOcF2q
9xbUOu+UfFawct7CyLCMxrpR0KRRnjHl/gTY+V5W+d3dLzd9BTVuQMnzHbL5
/I679lrxmMO7jiv33BAWPhRojvZ41xspweb6k/NwUOlrFlaW5fg86PwF1/k8
ITPp2cgFH0H9/YQyl2vmaLOfukfey3qKx90ULzkfcj4MpXqoxtmoHzTyOffp
XftpHkyjeZDnxQKaF0dIDxwlPTD/n/MmVU9kPcHGcRbSG8ivbswjP0C9t4H8
AvKvBZrIT2C/gf0G8tMCdcQDDHJeM/EimCdgngTzBlriTTCPwDyKpXymJVt2
lAR8w0vr/OPPBRmkhfX4pNTVS+4TN1d05Nhb9XLyxYrhhI0OLGkzOo1mvVR1
7HOcKU3J0kvSx4khit56GZFxf1X/PheeSNvW0KbRS+YD2yuqt7j6dFLlOBCd
HZGNOpnr3GvKKv6BtOqk6ufj8GbbxQSdpL48yPPJW2ZH1Xj9DJoqC3TzU1ov
D5RXK9V343aGRORe1srh0CuvjrXP4c6Isy21eVovT1fTrbt6t2plpuL/AnOj
laufxhhmPy9gjKwpiB3yk0t5XMorx0MsxQvOx1xoBdcDries1A9wP0L1nfsV
2fxeeB7B8wLPK4gnD/D3RbBewHoJ1hNYT9HAnLHegt8HdJAfgv0C9kuwn0B5
9UJ95+y3+EI8QCnxINYz18yLYJ6AeRKpxBswb//x+RsGx8k+
     "]]}, 
   {GrayLevel[0.5], Arrowheads[0.02], 
    ArrowBox[{{
     0.4472135954999579, -1.3416407864998738`}, {-0.894427190999916, \
-2.906888370749727}}], 
    ArrowBox[{{
     0.4919349550499537, -1.2521980673998823`}, {-0.7602631123499286, \
-2.6385602134497517`}}], 
    ArrowBox[{{
     0.5366563145999494, -1.1627553482998907`}, {-0.6260990336999412, \
-2.3702320561497774`}}], 
    ArrowBox[{{
     0.5813776741499453, -1.073312629199899}, {-0.49193495504995355`, \
-2.1019038988498018`}}], 
    ArrowBox[{{
     0.6260990336999411, -0.9838699100999073}, {-0.3577708763999662, \
-1.833575741549827}}], 
    ArrowBox[{{
     0.6708203932499369, -0.8944271909999159}, {-0.22360679774997894`, \
-1.5652475842498528`}}], 
    ArrowBox[{{
     0.7155417527999327, -0.8049844718999242}, {-0.08944271909999146, \
-1.296919426949878}}], 
    ArrowBox[{{0.7602631123499285, -0.7155417527999326}, {
     0.0447213595499959, -1.0285912696499029`}}], 
    ArrowBox[{{0.8049844718999243, -0.626099033699941}, {
     0.17888543819998326`, -0.7602631123499283}}], 
    ArrowBox[{{0.8497058314499201, -0.5366563145999494}, {
     0.3130495168499706, -0.49193495504995355`}}], 
    ArrowBox[{{0.8944271909999159, -0.4472135954999579}, {
     0.4472135954999579, -0.22360679774997905`}}], 
    ArrowBox[{{0.9391485505499116, -0.35777087639996624`}, {
     0.5813776741499455, 0.04472135954999601}}], 
    ArrowBox[{{0.9838699100999075, -0.2683281572999746}, {0.7155417527999329, 
     0.31304951684997095`}}], 
    ArrowBox[{{1.0285912696499033`, -0.17888543819998315`}, {
     0.8497058314499202, 0.5813776741499455}}], 
    ArrowBox[{{1.0733126291998991`, -0.08944271909999146}, {
     0.9838699100999077, 0.8497058314499204}}], 
    ArrowBox[{{1.118033988749895, 0.}, {1.118033988749895, 
     1.118033988749895}}], 
    ArrowBox[{{1.1627553482998907`, 0.08944271909999163}, {
     1.2521980673998823`, 1.3863621460498698`}}], 
    ArrowBox[{{1.2074767078498865`, 0.17888543819998332`}, {
     1.3863621460498698`, 1.6546903033498448`}}], 
    ArrowBox[{{1.2521980673998823`, 0.2683281572999748}, {1.520526224699857, 
     1.923018460649819}}], 
    ArrowBox[{{1.296919426949878, 0.35777087639996646`}, {1.6546903033498446`,
      2.1913466179497942`}}], 
    ArrowBox[{{1.3416407864998738`, 0.4472135954999579}, {1.7888543819998317`,
      2.459674775249769}}], 
    ArrowBox[{{-1.3416407864998738`, -0.4472135954999579}, \
{-1.7888543819998317`, -2.459674775249769}}], 
    ArrowBox[{{-1.296919426949878, -0.35777087639996635`}, \
{-1.6546903033498443`, -2.191346617949794}}], 
    ArrowBox[{{-1.2521980673998823`, -0.2683281572999748}, \
{-1.520526224699857, -1.923018460649819}}], 
    ArrowBox[{{-1.2074767078498865`, -0.1788854381999831}, \
{-1.3863621460498696`, -1.6546903033498443`}}], 
    ArrowBox[{{-1.1627553482998905`, -0.08944271909999152}, \
{-1.252198067399882, -1.3863621460498692`}}], 
    ArrowBox[{{-1.118033988749895, 
     0.}, {-1.118033988749895, -1.118033988749895}}], 
    ArrowBox[{{-1.073312629199899, 
     0.08944271909999169}, {-0.9838699100999072, -0.8497058314499197}}], 
    ArrowBox[{{-1.0285912696499033`, 
     0.1788854381999832}, {-0.8497058314499202, -0.5813776741499453}}], 
    ArrowBox[{{-0.9838699100999074, 
     0.26832815729997483`}, {-0.7155417527999326, -0.3130495168499704}}], 
    ArrowBox[{{-0.9391485505499116, 
     0.35777087639996635`}, {-0.5813776741499452, -0.04472135954999579}}], 
    ArrowBox[{{-0.8944271909999159, 0.4472135954999579}, {-0.4472135954999579,
      0.22360679774997905`}}], 
    ArrowBox[{{-0.8497058314499201, 0.5366563145999496}, {-0.3130495168499705,
      0.49193495504995377`}}], 
    ArrowBox[{{-0.8049844718999242, 
     0.6260990336999412}, {-0.17888543819998293`, 0.760263112349929}}], 
    ArrowBox[{{-0.7602631123499285, 
     0.7155417527999327}, {-0.04472135954999579, 1.0285912696499033`}}], 
    ArrowBox[{{-0.7155417527999326, 0.8049844718999244}, {0.0894427190999918, 
     1.2969194269498785`}}], 
    ArrowBox[{{-0.6708203932499369, 0.8944271909999159}, {
     0.22360679774997894`, 1.5652475842498528`}}], 
    ArrowBox[{{-0.626099033699941, 0.9838699100999075}, {0.3577708763999665, 
     1.833575741549828}}], 
    ArrowBox[{{-0.5813776741499452, 1.0733126291998991`}, {0.4919349550499539,
      2.1019038988498027`}}], 
    ArrowBox[{{-0.5366563145999494, 1.1627553482998907`}, {0.6260990336999412,
      2.3702320561497774`}}], 
    ArrowBox[{{-0.49193495504995366`, 1.2521980673998823`}, {
     0.7602631123499286, 2.638560213449752}}], 
    ArrowBox[{{-0.4472135954999579, 1.3416407864998738`}, {0.894427190999916, 
     2.906888370749727}}], 
    ArrowBox[{{
     0.4472135954999579, -1.3416407864998738`}, {-0.894427190999916, \
-2.906888370749727}}], 
    ArrowBox[{{
     0.35777087639996635`, -1.296919426949878}, {-0.9391485505499118, \
-2.884527690974729}}], 
    ArrowBox[{{
     0.2683281572999748, -1.2521980673998823`}, {-0.9838699100999075, \
-2.862167011199731}}], 
    ArrowBox[{{
     0.1788854381999831, -1.2074767078498865`}, {-1.0285912696499033`, \
-2.8398063314247333`}}], 
    ArrowBox[{{
     0.08944271909999152, -1.1627553482998905`}, {-1.073312629199899, \
-2.817445651649735}}], 
    ArrowBox[{{
     0., -1.118033988749895}, {-1.118033988749895, -2.7950849718747373`}}], 
    ArrowBox[{{-0.08944271909999169, -1.073312629199899}, \
{-1.1627553482998905`, -2.772724292099739}}], 
    ArrowBox[{{-0.1788854381999832, -1.0285912696499033`}, \
{-1.2074767078498865`, -2.7503636123247412`}}], 
    ArrowBox[{{-0.26832815729997483`, -0.9838699100999074}, \
{-1.2521980673998823`, -2.7280029325497432`}}], 
    ArrowBox[{{-0.35777087639996635`, -0.9391485505499116}, \
{-1.296919426949878, -2.7056422527747452`}}], 
    ArrowBox[{{-0.4472135954999579, -0.8944271909999159}, \
{-1.3416407864998738`, -2.6832815729997477`}}], 
    ArrowBox[{{-0.5366563145999496, -0.8497058314499201}, \
{-1.3863621460498696`, -2.6609208932247497`}}], 
    ArrowBox[{{-0.6260990336999412, -0.8049844718999242}, \
{-1.4310835055998654`, -2.638560213449752}}], 
    ArrowBox[{{-0.7155417527999327, -0.7602631123499285}, \
{-1.4758048651498612`, -2.616199533674754}}], 
    ArrowBox[{{-0.8049844718999244, -0.7155417527999326}, \
{-1.520526224699857, -2.593838853899756}}], 
    ArrowBox[{{-0.8944271909999159, -0.6708203932499369}, \
{-1.5652475842498528`, -2.571478174124758}}], 
    ArrowBox[{{-0.9838699100999075, -0.626099033699941}, \
{-1.6099689437998486`, -2.54911749434976}}], 
    ArrowBox[{{-1.0733126291998991`, -0.5813776741499452}, \
{-1.6546903033498443`, -2.526756814574762}}], 
    ArrowBox[{{-1.1627553482998907`, -0.5366563145999494}, \
{-1.6994116628998401`, -2.504396134799764}}], 
    ArrowBox[{{-1.2521980673998823`, -0.49193495504995366`}, \
{-1.744133022449836, -2.482035455024766}}], 
    ArrowBox[{{-1.3416407864998738`, -0.4472135954999579}, \
{-1.7888543819998317`, -2.459674775249769}}], 
    ArrowBox[{{1.3416407864998738`, 0.4472135954999579}, {1.7888543819998317`,
      2.459674775249769}}], 
    ArrowBox[{{1.2521980673998823`, 0.4919349550499537}, {1.744133022449836, 
     2.4820354550247665`}}], 
    ArrowBox[{{1.1627553482998907`, 0.5366563145999494}, {1.6994116628998401`,
      2.504396134799764}}], 
    ArrowBox[{{1.073312629199899, 0.5813776741499453}, {1.6546903033498443`, 
     2.526756814574762}}], 
    ArrowBox[{{0.9838699100999073, 0.6260990336999411}, {1.6099689437998483`, 
     2.54911749434976}}], 
    ArrowBox[{{0.8944271909999159, 0.6708203932499369}, {1.5652475842498528`, 
     2.571478174124758}}], 
    ArrowBox[{{0.8049844718999242, 0.7155417527999327}, {1.5205262246998568`, 
     2.593838853899756}}], 
    ArrowBox[{{0.7155417527999326, 0.7602631123499285}, {1.4758048651498612`, 
     2.616199533674754}}], 
    ArrowBox[{{0.626099033699941, 0.8049844718999243}, {1.4310835055998652`, 
     2.6385602134497517`}}], 
    ArrowBox[{{0.5366563145999494, 0.8497058314499201}, {1.3863621460498696`, 
     2.6609208932247497`}}], 
    ArrowBox[{{0.4472135954999579, 0.8944271909999159}, {1.3416407864998738`, 
     2.6832815729997477`}}], 
    ArrowBox[{{0.35777087639996624`, 0.9391485505499116}, {
     1.2969194269498778`, 2.7056422527747452`}}], 
    ArrowBox[{{0.2683281572999746, 0.9838699100999075}, {1.252198067399882, 
     2.7280029325497437`}}], 
    ArrowBox[{{0.17888543819998315`, 1.0285912696499033`}, {
     1.2074767078498865`, 2.7503636123247412`}}], 
    ArrowBox[{{0.08944271909999146, 1.0733126291998991`}, {
     1.1627553482998905`, 2.7727242920997393`}}], 
    ArrowBox[{{0., 1.118033988749895}, {1.118033988749895, 
     2.7950849718747373`}}], 
    ArrowBox[{{-0.08944271909999163, 1.1627553482998907`}, {
     1.0733126291998991`, 2.8174456516497353`}}], 
    ArrowBox[{{-0.17888543819998332`, 1.2074767078498865`}, {
     1.028591269649903, 2.8398063314247333`}}], 
    ArrowBox[{{-0.2683281572999748, 1.2521980673998823`}, {0.9838699100999075,
      2.862167011199731}}], 
    ArrowBox[{{-0.35777087639996646`, 1.296919426949878}, {0.9391485505499115,
      2.884527690974729}}], 
    ArrowBox[{{-0.4472135954999579, 1.3416407864998738`}, {0.894427190999916, 
     2.906888370749727}}]}},
  Axes->True,
  PlotRange->{{-3, 3}, {-3, 3}}]], "Output",
 CellChangeTimes->{
  3.467259049165153*^9, {3.467259145952079*^9, 3.467259156734831*^9}, 
   3.467259221085483*^9, {3.467259280902668*^9, 3.467259304783622*^9}, {
   3.467259563804138*^9, 3.46725959579106*^9}, {3.4672596905883207`*^9, 
   3.4672597055833483`*^9}, 3.467259766590661*^9, 3.467259874467969*^9, {
   3.467259926805381*^9, 3.46725994132162*^9}, 3.4672860072951107`*^9, {
   3.467320476469819*^9, 3.467320499915966*^9}, 3.467320713022586*^9, 
   3.467320777885766*^9, 3.46732207449722*^9, {3.467323300660033*^9, 
   3.467323326279652*^9}, {3.4673234196177692`*^9, 3.4673234328901777`*^9}, 
   3.469826749823846*^9, {3.4698267947360353`*^9, 3.469826814483431*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cpoints", "=", 
   RowBox[{"Join", "@@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "d"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "d"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cpoints", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"RotationMatrix", "[", 
       RowBox[{"ArcTan", "[", "2", "]"}], "]"}], ".", "#"}], "&"}], "/@", 
    RowBox[{"Join", "[", 
     RowBox[{"cpoints", ",", 
      RowBox[{"Reverse", "/@", "cpoints"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Blue", ",", 
     RowBox[{"Point", "[", "cpoints", "]"}], ",", "Red", ",", 
     RowBox[{"Point", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"A", ".", "#"}], "&"}], "/@", "cpoints"}], "]"}], ",", "Gray",
      ",", 
     RowBox[{"Arrowheads", "[", "0.02", "]"}], ",", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"cpoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"A", ".", "#"}], "&"}], "/@", "cpoints"}]}], "}"}]}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.467259047183971*^9, {3.46725909823046*^9, 3.467259220634623*^9}, {
   3.46725925383888*^9, 3.467259303587304*^9}, {3.467259587887423*^9, 
   3.467259595099626*^9}, {3.467259931647127*^9, 3.467259940779505*^9}, {
   3.4673204977415648`*^9, 3.467320498769689*^9}, 3.467322074109535*^9, 
   3.469826818280604*^9, {3.4698268527172527`*^9, 3.469826879046638*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], PointBox[CompressedData["
1:eJx1mz+IpWcZxQetBK1sLERQUTGI2AoLL1hpo6jB6GbREDWJjYIgKbRJZyEo
BAlooYUO2gSr0UL5HNEh6BRudnJnZvfOnzt/7szs3nWycQULi8S55/dc3l9u
trns7M73vd/5zvO8z3vOue9/8jtf+ObbVlZWvvv2lZX/f+7eH/72oV+M29df
+9yjN579zzB57Kmbvz8dtV8Nf/3px//8cLhYf+feZz52s53+6JPbK+94OOxf
/ftG+/D1F99z6/P/HsZXf19rT33kg9d//bPXhpX8+c3DF37+7PGD4Xz+78P5
1XUeDEfz3x8e+fFz73vv914d7s6vP7zyh9kw/v4l9x8e++LoU8+9619D1pfP
WdYzGR7/4W8//fdP3BumV+s6GcYfeP4f3/7LRX5/OnztTz/47LsfPR/28/PD
/JzrzJ/3dBjlvie5zkXWOX+eo+HpPNd57gsOW1e/dzCAG+ucP8dB4bV3df/d
wmv+863GdUdXv7fZwGt6dZ/1Bl7zda828Hp1/vfCa47feuF1Z369es7cr/DK
evJ5MWznOcDrmTw3eIETn0/k/4EX1306v/flrAO8WDd48ZzgVTzKuuAdPMh1
Ci/4ynXgK+/tLHzlvvAVvA7DV/Cas/WXfwSvk/CV5zoOX8Er9VB4sU54dyfP
BV53gwN4neYTvI7ye+DFfUbB63bWBV7wFbx4btYBTid57/CQdee+xa/cp30U
vMLXra4uttqXgtdO+LqTdYV/7Xrw2glfx13drQ5fDV4X4Sv8yvWGJ4MX6wav
rKfqcSe4nAUvfg6/vkFdBy/uC16814PgBV+Pcl94Ex4VX7eyTvgaXvE+C6/0
p8LrdvgKXofhK3idh6/glf7Yat3hK3jRX8HrKHwFr8OsC1xy/eLXUZ77VvAa
w6t88v/Ai/66n99jHbwn+Ape8BW8qDvwgq8n4QH7Rp6TumnUI3zlvcFX7pt1
Fl7wte/3m416PA1fwWscvhZe4Ss40F/T17le1eM0OIDXYT7hF3UMXs/ovbAu
rktf4T3eYJ9Tn08fK76m7oqv8CR9qfgFX/t6nLS+HscNfsFX8Mp+XXgdhK9n
Hb/WGvxiHdvB6yDrvtPhtFF40aeox+P8/DQ/32GfDV7MA3dyneqzwYu+vJP7
Mg+8FLzgWfaBa/TX/4YX9MnMMS3vp2l/LLzgK+tIXyq84Gs/T2w1+teo66/U
43qDX/A17yV4rxa/8v+LX+PglOsO5/C129d2U7/rNQ/cDl617twHvs7x+sk1
5oHMJVWn2Ucb/XWW54Cv9LnUceEFX7kvfAUv5gHw2un667jmgXH3XDcb/Epd
NfAKHxv9q+frZvEVnjIPwK97+b3t/D/2YeqReQB+1XMEL+aBadbBPHA/eNHn
ct9Gf90LT/o58Cb4F17w9ZVuXqW/jnm/hRd8hV/Mr+B1HL6edfUIXzfhUevr
erXBr/y9cL0H7/h5rgNezK/TXOeA9xq8eC7mkH6u2mjMA6kD6rfONTe6c8RW
zYXwKP2h8IKv1A185b2Hx62vx0mjHplfdzt+jQov5oHzDq+N1vNwrYHjiv4E
l+DzBu65LnjRXzOHNfor/OrPW5uN/gpezAPgRX8FL/orcyT9lecOvlWP8DW8
Kr7Cr/TVxjxRfM1zMQ+wP9JfqUf668tdv99s8AscLju8+Fzj71WP+QyeG8V7
+MU8cK+b63YLL/ga3Fudt7Ju+mv6RqO/Zu6t/sq+nf0qz1/zV7uVdeV9NPbH
4mueg/76cvDiuv3+OA5ev7uW+bH9LzjBi8vgBY8ug1eP40aruSR4wdf7uQ5z
Yvap4utpVyejwou+nzm2+Ho7ePVzy6T4+q2u710w57I/NeYv+Eo9wlfmr8xR
jX4PX9kfax4IXvRX+j18pX8xvx71/Erfpx7XC/dRrgu/MrcUvzhvUY/ZN+pc
Qp+ijjhvwQPOW+Fp9Vd4Q3/NZ+vPxVPO5Y35C77+M+uEr9Qj/ZX5i+vMghf3
pR7pr/CL59oPXvQl6hHczoIXfD3u+PXGeSt4oQ/scd08B/XIPAC/6PPgxT4K
v7K+wqs/l01rHnhCcyZ1nPm+6qjn62r1V3SOnDOLX/AVfvXzwCZzV2OegK/0
UfgKrvB1r+v3m+wj9OUGv17q+saEuqi5+b76Evsk66S/wgvOW+DFeQse0V+z
z7f+vDVDV2rMq/D1brfuS9XjrNHv0z8KL9ZFPTIP0Dfh637fv4q34ApeFx1v
J/RH6jD1v8a+XLwAL/RX+EVfY5+lv8Iv5gHwYh6gTtGzMtdXfwWn6CPpbxvF
V+oRvlKP1V+DF/31JDhUHQQv+iv9HhyoR3C7K5ypR94LeNFfqUf0gePgxZzO
OtAHDoIXcwd47XT9dVZ8/Uqek3kAvOAruHDugYfR74oH8PW02x8fFG+iQ4lf
s+IXdTHq5vzpoh6DS68TTlpfj+PqG9wX3nPegl+ZO5gLqy/xnumv4MW+Ci/w
C8CL8xZ4MXeDA+cteEd/Bbfoy9Xv4WvOFcVX5i/uA79YF/zivcMv+iv8Aif4
Ba7UI+8BfvHewIv+yn2ie2R9s+pT1CP663bwYi7hOZhjwAt9gOdmHgAv5gFw
4twNL+N/FC/4OT4I1+nPQQ8KB/ja82tWuNFfJ13/mha/4Cu85j6P9/2rrst5
i/c4ZY7KOtAH6r1rX5C/xb5ReKXvFV41vwYX+is8pL8aR3wl+0n2Q6znW4+2
nmo90HqW9RjrCT4P+zzn84jnac+Dnme8H3s/cT90PRtH+5n24+wn2Q+xnm89
2nqq9UDrWdZjrCf4POzznM8jnqc9D3qe8X7s/cT90PVsP9h+pv04+0n2Q6zn
W4+2nmo90HqW9RjrCT4P+zzn84jnac+Dnme8H3s/cT+0n24/2H6m/Tj7SfZD
rOdbj7aeaj3Qepb1GOsJPg/7POfziOdpz4OeZ7wfez9xHsF+uv1g+5n24+wn
2Q+xnm892nqq9UDrWdZjrCf4POzznM8jnqc9D3qe8X7sPIfzCPbT7Qfbz7Qf
Zz/Jfoj1fOvR1lOtB1rPsh5jPcHnYZ/nfB7xPO150POM8zDOcziPYD/dfrD9
TPtx9pPsh1jPtx5tPdV6oPUs6zHWE3we9nnO5xHP054Hl+eJFj6p8xzOI8Bv
+qP9YPuZ9uPsJ9kPsZ5vPdp6qvVA61nWY6wn+Dzs85zPI56nncdynmh5HmaR
53AewX66/WD7mfbjlvtJCz9kuZ6/0KOtp1oPtJ5lPcZ6gs/DPs/5POI8m/NY
zhM5D+M8h/MI9tPtBy/3M+3HLfwk+yHW85fr0Qs91Xqg9SzrMdYTfB5+i/Nc
8dF5NuexnCdyHsZ5DucR7KfbD7afudyPs5+08EOs51uPtp5qPdB6lvUY6wk+
DztP6Tyg82zOYzlP5DyM8xzOIyz30xd+8HI/c+HH2U+yH2I933q09VTrgdaz
rMe8SU/o5sKLN+UpnQd0ns15LOeJnIdxnsN5BPvp9oPtZ9qPs59kP8R6vvVo
66nWA61nWY9xntd5VOcpnQd0ns15LOeJnIdxnsN5BPvp9oOX+5kLP85+kv2Q
5Xr+Qo+2nmo90HqW89DO8zqP6jyl84DOszmP5TyR8zDOcziPYD/dfrD9TPtx
9pPsh1jPtx69XE9d6IHOkzsP7Tyv86jOUzoP6Dyb81jOEzkP4zyH8wj20+0H
28+0H2c/yX6I9Xzr0dZTncd3ntx5aOd5nUd1ntJ5QOfZnMdynsh5GOc5nEew
n24/2H6m/Tj7SfZDrOdbj/b3GZzHd57ceWjneZ1HdZ7SeUDn2ZzHcp7IeRjn
OZxHsJ9uP9h+pv04+0n2Q6zn+/sg/j6D8/jOkzsP7Tyv86jOUzoP6Dyb81jO
EzkP4zyH8wj20+0H28+0H2c/yX6Iv0/j74P4+wzO4ztP7jy087zOozpP6Tyg
82zOYzlP5DyM8xzOI9hPtx9sP9N+nP0kfx/J36fx90H8fQbn8Z0ndx7aeV7n
Ud8iT1k6kvNszmM5T+Q8jPMcziPYT7cfbD/TftzrkUDu4A==
     "]]}, 
   {RGBColor[1, 0, 0], PointBox[CompressedData["
1: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
8Lecf1svSrz+4Y85//DPEq6/8NcS9h/4b4n6ceonqR+ier7q0aqnqh6oepbq
Maon6HlYz3N6HtH9tO4HdT+j67GuJ9oPdT5rPaqfqX6c+knqh6ief4AeLXqq
6oGqZ6keo3qCnof1PKfnEd1P635Q9zO6Hut6ov1Q57P6wepnqh+nfpL6Iarn
qx6teqrqgapnqR6jeoKeh/U8p+cR3U/rflD3M7oe63qi/VD9dPWD1c9UP079
JPVDVM9XPVr1VNUDVc9SPUb1BD0P63lOzyO6n9b9oO5ndD3W9UTzCOqnqx+s
fqb6ceonqR+ier7q0aqnqh6oepbqMaon6HlYz3N6HtH9tO4HdT+j67HmOTSP
oH66+sHqZ6of9/l+0md+iOr5qkernqp6oOpZqseonqDnYT3P6XlE99O6H9T9
jOZhNM+heQT109UPVj/zAD9O/CT1Q1TPVz1a9VTVA1XPUj1G9QQ9D+t5Ts8j
up/W/aDmiTQPo3kOzSOon65+sPqZ6sepn6R+iOr5qkernqp6oOpZqseonqDn
YT3P6XlE99Oax9I8keZhNM+heQT109UPVj9T/Tj1k9QP+Xw9/zM9WvVU1QNV
z1I9RvUEPQ/reU7PI5pn0zyW5ok0D6N5Ds0jqJ+ufrD6merHqZ+kfojq+apH
q56qeqDqWarHqJ6g5+EvOM95HlDzbJrH0jyR5mE0z6F5BPXT1Q9WP1P9OPWT
1A9RPV/1aNVTVQ9UPUv1GNUT9DyseUrNA2qeTfNYmifSPIzmOTSP8Pl++md+
sPqZ6sepn6R+iOr5qkernqp6oOpZqseonqB5VM1Tah5Q82yax9I8keZhNM+h
eQT109UPVj9T/Tj1k9QPUT1f9WjVU1UPVD1L9RjN82oeVfOUmgfUPJvmsTRP
pHkYzXNoHkH9dPWD1c9UP079JPVDVM9XPVr1VNUDVc/SPLTmeTWPqnlKzQNq
nk3zWJon0jyM5jk0j6B+uvrB6meqH6d+kvohquerHq16quqBmifXPLTmeTWP
qnlKzQNqnk3zWJon0jyM5jk0j6B++gF+sPiZ6sepn6R+iOr5qkernqp5fM2T
ax5a87yaR9U8peYBNc+meSzNE2keRvMcmkdQP/0AP1j8TPXj1E9SP0T1fNWj
9fcMmsfXPLnmoTXPq3lUzVNqHlDzbJrH0jyR5mE0z6F5BPXT1Q9WP1P9OPWT
1A9RPV9/D6K/Z9A8vubJNQ+teV7No2qeUvOAmmfTPJbmiQ7Iw0ieQ/MI6qer
H6x+pvpx6iepH6K/p9Hfg+jvGTSPr3lyzUNrnlfzqJqn1Dyg5tk0j6V5Is3D
aJ5D8wjqp6sfrH6m+nHqJ+nvkfT3NPp7EP09g+bxNU+ueWjN82oe9QvylJ4H
1Dyb5rE0T6R5GM1zaB5B/XT1g9XPVD/uf8DePus=
     "]]}, 
   {GrayLevel[0.5], Arrowheads[0.02], 
    ArrowBox[{{
     0.4472135954999579, -1.3416407864998738`}, {-0.894427190999916, \
-2.906888370749727}}], 
    ArrowBox[{{
     0.35777087639996635`, -1.296919426949878}, {-0.9391485505499118, \
-2.884527690974729}}], 
    ArrowBox[{{
     0.2683281572999748, -1.2521980673998823`}, {-0.9838699100999075, \
-2.862167011199731}}], 
    ArrowBox[{{
     0.1788854381999831, -1.2074767078498865`}, {-1.0285912696499033`, \
-2.8398063314247333`}}], 
    ArrowBox[{{
     0.08944271909999152, -1.1627553482998905`}, {-1.073312629199899, \
-2.817445651649735}}], 
    ArrowBox[{{
     0., -1.118033988749895}, {-1.118033988749895, -2.7950849718747373`}}], 
    ArrowBox[{{-0.08944271909999169, -1.073312629199899}, \
{-1.1627553482998905`, -2.772724292099739}}], 
    ArrowBox[{{-0.1788854381999832, -1.0285912696499033`}, \
{-1.2074767078498865`, -2.7503636123247412`}}], 
    ArrowBox[{{-0.26832815729997483`, -0.9838699100999074}, \
{-1.2521980673998823`, -2.7280029325497432`}}], 
    ArrowBox[{{-0.35777087639996635`, -0.9391485505499116}, \
{-1.296919426949878, -2.7056422527747452`}}], 
    ArrowBox[{{-0.4472135954999579, -0.8944271909999159}, \
{-1.3416407864998738`, -2.6832815729997477`}}], 
    ArrowBox[{{-0.5366563145999496, -0.8497058314499201}, \
{-1.3863621460498696`, -2.6609208932247497`}}], 
    ArrowBox[{{-0.6260990336999412, -0.8049844718999242}, \
{-1.4310835055998654`, -2.638560213449752}}], 
    ArrowBox[{{-0.7155417527999327, -0.7602631123499285}, \
{-1.4758048651498612`, -2.616199533674754}}], 
    ArrowBox[{{-0.8049844718999244, -0.7155417527999326}, \
{-1.520526224699857, -2.593838853899756}}], 
    ArrowBox[{{-0.8944271909999159, -0.6708203932499369}, \
{-1.5652475842498528`, -2.571478174124758}}], 
    ArrowBox[{{-0.9838699100999075, -0.626099033699941}, \
{-1.6099689437998486`, -2.54911749434976}}], 
    ArrowBox[{{-1.0733126291998991`, -0.5813776741499452}, \
{-1.6546903033498443`, -2.526756814574762}}], 
    ArrowBox[{{-1.1627553482998907`, -0.5366563145999494}, \
{-1.6994116628998401`, -2.504396134799764}}], 
    ArrowBox[{{-1.2521980673998823`, -0.49193495504995366`}, \
{-1.744133022449836, -2.482035455024766}}], 
    ArrowBox[{{-1.3416407864998738`, -0.4472135954999579}, \
{-1.7888543819998317`, -2.459674775249769}}], 
    ArrowBox[{{
     0.4919349550499537, -1.2521980673998823`}, {-0.7602631123499286, \
-2.6385602134497517`}}], 
    ArrowBox[{{
     0.40249223594996214`, -1.2074767078498865`}, {-0.8049844718999244, \
-2.616199533674754}}], 
    ArrowBox[{{
     0.31304951684997057`, -1.1627553482998907`}, {-0.8497058314499202, \
-2.593838853899756}}], 
    ArrowBox[{{
     0.22360679774997888`, -1.118033988749895}, {-0.894427190999916, \
-2.5714781741247585`}}], 
    ArrowBox[{{
     0.1341640786499873, -1.073312629199899}, {-0.9391485505499115, \
-2.54911749434976}}], 
    ArrowBox[{{
     0.04472135954999579, -1.0285912696499033`}, {-0.9838699100999075, \
-2.526756814574762}}], 
    ArrowBox[{{-0.0447213595499959, -0.9838699100999074}, \
{-1.0285912696499033`, -2.5043961347997645`}}], 
    ArrowBox[{{-0.13416407864998742`, -0.9391485505499116}, \
{-1.0733126291998991`, -2.4820354550247665`}}], 
    ArrowBox[{{-0.22360679774997902`, -0.8944271909999159}, \
{-1.118033988749895, -2.459674775249769}}], 
    ArrowBox[{{-0.31304951684997057`, -0.8497058314499201}, \
{-1.1627553482998907`, -2.437314095474771}}], 
    ArrowBox[{{-0.40249223594996214`, -0.8049844718999243}, \
{-1.2074767078498865`, -2.414953415699773}}], 
    ArrowBox[{{-0.4919349550499538, -0.7602631123499285}, \
{-1.2521980673998823`, -2.392592735924775}}], 
    ArrowBox[{{-0.5813776741499455, -0.7155417527999326}, \
{-1.296919426949878, -2.370232056149777}}], 
    ArrowBox[{{-0.6708203932499369, -0.6708203932499369}, \
{-1.3416407864998738`, -2.3478713763747794`}}], 
    ArrowBox[{{-0.7602631123499286, -0.626099033699941}, \
{-1.3863621460498696`, -2.325510696599781}}], 
    ArrowBox[{{-0.8497058314499201, -0.5813776741499453}, \
{-1.4310835055998654`, -2.3031500168247834`}}], 
    ArrowBox[{{-0.9391485505499118, -0.5366563145999494}, \
{-1.4758048651498612`, -2.2807893370497854`}}], 
    ArrowBox[{{-1.0285912696499033`, -0.49193495504995366`}, \
{-1.520526224699857, -2.2584286572747874`}}], 
    ArrowBox[{{-1.118033988749895, -0.4472135954999579}, \
{-1.5652475842498528`, -2.23606797749979}}], 
    ArrowBox[{{-1.2074767078498865`, -0.4024922359499621}, \
{-1.6099689437998486`, -2.213707297724792}}], 
    ArrowBox[{{-1.296919426949878, -0.35777087639996635`}, \
{-1.6546903033498443`, -2.191346617949794}}], 
    ArrowBox[{{
     0.5366563145999494, -1.1627553482998907`}, {-0.6260990336999412, \
-2.3702320561497774`}}], 
    ArrowBox[{{
     0.4472135954999579, -1.118033988749895}, {-0.670820393249937, \
-2.3478713763747794`}}], 
    ArrowBox[{{
     0.35777087639996635`, -1.0733126291998991`}, {-0.7155417527999328, \
-2.3255106965997814`}}], 
    ArrowBox[{{
     0.26832815729997467`, -1.0285912696499033`}, {-0.7602631123499286, \
-2.3031500168247834`}}], 
    ArrowBox[{{
     0.1788854381999831, -0.9838699100999074}, {-0.8049844718999244, \
-2.2807893370497854`}}], 
    ArrowBox[{{
     0.08944271909999157, -0.9391485505499116}, {-0.8497058314499201, \
-2.2584286572747874`}}], 
    ArrowBox[{{-1.1102230246251565`*^-16, -0.8944271909999159}, \
{-0.894427190999916, -2.23606797749979}}], 
    ArrowBox[{{-0.08944271909999163, -0.8497058314499201}, \
{-0.9391485505499118, -2.213707297724792}}], 
    ArrowBox[{{-0.17888543819998323`, -0.8049844718999243}, \
{-0.9838699100999075, -2.191346617949794}}], 
    ArrowBox[{{-0.2683281572999748, -0.7602631123499285}, \
{-1.0285912696499033`, -2.1689859381747962`}}], 
    ArrowBox[{{-0.35777087639996635`, -0.7155417527999327}, \
{-1.0733126291998991`, -2.1466252583997982`}}], 
    ArrowBox[{{-0.44721359549995804`, -0.6708203932499369}, \
{-1.118033988749895, -2.1242645786248002`}}], 
    ArrowBox[{{-0.5366563145999497, -0.626099033699941}, \
{-1.1627553482998907`, -2.101903898849802}}], 
    ArrowBox[{{-0.6260990336999411, -0.5813776741499453}, \
{-1.2074767078498865`, -2.0795432190748047`}}], 
    ArrowBox[{{-0.7155417527999328, -0.5366563145999494}, \
{-1.2521980673998823`, -2.0571825392998067`}}], 
    ArrowBox[{{-0.8049844718999243, -0.49193495504995377`}, \
{-1.296919426949878, -2.0348218595248087`}}], 
    ArrowBox[{{-0.894427190999916, -0.4472135954999579}, \
{-1.3416407864998738`, -2.0124611797498106`}}], 
    ArrowBox[{{-0.9838699100999075, -0.4024922359499621}, \
{-1.3863621460498696`, -1.9901004999748129`}}], 
    ArrowBox[{{-1.0733126291998991`, -0.35777087639996635`}, \
{-1.4310835055998654`, -1.967739820199815}}], 
    ArrowBox[{{-1.1627553482998907`, -0.3130495168499705}, \
{-1.4758048651498612`, -1.945379140424817}}], 
    ArrowBox[{{-1.2521980673998823`, -0.2683281572999748}, \
{-1.520526224699857, -1.923018460649819}}], 
    ArrowBox[{{
     0.5813776741499453, -1.073312629199899}, {-0.49193495504995355`, \
-2.1019038988498018`}}], 
    ArrowBox[{{
     0.49193495504995377`, -1.028591269649903}, {-0.5366563145999493, \
-2.0795432190748038`}}], 
    ArrowBox[{{
     0.4024922359499622, -0.9838699100999073}, {-0.5813776741499451, \
-2.0571825392998058`}}], 
    ArrowBox[{{
     0.3130495168499705, -0.9391485505499115}, {-0.626099033699941, \
-2.0348218595248087`}}], 
    ArrowBox[{{
     0.22360679774997894`, -0.8944271909999157}, {-0.6708203932499368, \
-2.0124611797498106`}}], 
    ArrowBox[{{
     0.13416407864998742`, -0.84970583144992}, {-0.7155417527999326, \
-1.9901004999748124`}}], 
    ArrowBox[{{
     0.04472135954999573, -0.8049844718999242}, {-0.7602631123499284, \
-1.9677398201998149`}}], 
    ArrowBox[{{-0.04472135954999579, -0.7602631123499284}, \
{-0.8049844718999242, -1.9453791404248169`}}], 
    ArrowBox[{{-0.1341640786499874, -0.7155417527999326}, {-0.84970583144992, \
-1.9230184606498189`}}], 
    ArrowBox[{{-0.22360679774997894`, -0.6708203932499368}, \
{-0.8944271909999157, -1.9006577808748208`}}], 
    ArrowBox[{{-0.3130495168499705, -0.626099033699941}, \
{-0.9391485505499115, -1.878297101099823}}], 
    ArrowBox[{{-0.4024922359499622, -0.5813776741499452}, \
{-0.9838699100999074, -1.8559364213248255`}}], 
    ArrowBox[{{-0.4919349550499539, -0.5366563145999493}, \
{-1.0285912696499033`, -1.8335757415498273`}}], 
    ArrowBox[{{-0.5813776741499452, -0.49193495504995366`}, \
{-1.073312629199899, -1.8112150617748293`}}], 
    ArrowBox[{{-0.670820393249937, -0.44721359549995776`}, \
{-1.118033988749895, -1.7888543819998315`}}], 
    ArrowBox[{{-0.7602631123499284, -0.4024922359499621}, \
{-1.1627553482998905`, -1.7664937022248337`}}], 
    ArrowBox[{{-0.8497058314499201, -0.35777087639996624`}, \
{-1.2074767078498863`, -1.7441330224498357`}}], 
    ArrowBox[{{-0.9391485505499118, -0.3130495168499704}, \
{-1.252198067399882, -1.7217723426748377`}}], 
    ArrowBox[{{-1.0285912696499033`, -0.26832815729997467`}, \
{-1.296919426949878, -1.69941166289984}}], 
    ArrowBox[{{-1.118033988749895, -0.22360679774997883`}, \
{-1.3416407864998736`, -1.677050983124842}}], 
    ArrowBox[{{-1.2074767078498865`, -0.1788854381999831}, \
{-1.3863621460498696`, -1.6546903033498443`}}], 
    ArrowBox[{{
     0.6260990336999411, -0.9838699100999073}, {-0.3577708763999662, \
-1.833575741549827}}], 
    ArrowBox[{{
     0.5366563145999496, -0.9391485505499115}, {-0.402492235949962, \
-1.8112150617748295`}}], 
    ArrowBox[{{
     0.447213595499958, -0.8944271909999157}, {-0.44721359549995776`, \
-1.7888543819998315`}}], 
    ArrowBox[{{
     0.3577708763999663, -0.84970583144992}, {-0.49193495504995366`, \
-1.7664937022248335`}}], 
    ArrowBox[{{
     0.2683281572999747, -0.8049844718999242}, {-0.5366563145999494, \
-1.744133022449836}}], 
    ArrowBox[{{
     0.1788854381999832, -0.7602631123499284}, {-0.5813776741499452, \
-1.721772342674838}}], 
    ArrowBox[{{
     0.08944271909999152, -0.7155417527999326}, {-0.626099033699941, \
-1.69941166289984}}], 
    ArrowBox[{{
     0., -0.6708203932499368}, {-0.6708203932499368, -1.677050983124842}}], 
    ArrowBox[{{-0.0894427190999916, -0.626099033699941}, \
{-0.7155417527999326, -1.6546903033498441`}}], 
    ArrowBox[{{-0.17888543819998315`, -0.5813776741499452}, \
{-0.7602631123499284, -1.6323296235748463`}}], 
    ArrowBox[{{-0.2683281572999747, -0.5366563145999494}, \
{-0.8049844718999242, -1.6099689437998483`}}], 
    ArrowBox[{{-0.3577708763999664, -0.4919349550499536}, {-0.84970583144992, \
-1.5876082640248503`}}], 
    ArrowBox[{{-0.4472135954999581, -0.44721359549995776`}, \
{-0.8944271909999159, -1.5652475842498526`}}], 
    ArrowBox[{{-0.5366563145999494, -0.4024922359499621}, \
{-0.9391485505499115, -1.5428869044748548`}}], 
    ArrowBox[{{-0.6260990336999412, -0.3577708763999662}, \
{-0.9838699100999074, -1.5205262246998568`}}], 
    ArrowBox[{{-0.7155417527999326, -0.3130495168499705}, \
{-1.028591269649903, -1.4981655449248588`}}], 
    ArrowBox[{{-0.8049844718999243, -0.26832815729997467`}, \
{-1.073312629199899, -1.475804865149861}}], 
    ArrowBox[{{-0.894427190999916, -0.22360679774997883`}, \
{-1.118033988749895, -1.453444185374863}}], 
    ArrowBox[{{-0.9838699100999074, -0.1788854381999831}, \
{-1.1627553482998905`, -1.4310835055998652`}}], 
    ArrowBox[{{-1.0733126291998991`, -0.13416407864998725`}, \
{-1.2074767078498865`, -1.4087228258248672`}}], 
    ArrowBox[{{-1.1627553482998905`, -0.08944271909999152}, \
{-1.252198067399882, -1.3863621460498692`}}], 
    ArrowBox[{{
     0.6708203932499369, -0.8944271909999159}, {-0.22360679774997894`, \
-1.5652475842498528`}}], 
    ArrowBox[{{
     0.5813776741499453, -0.8497058314499201}, {-0.2683281572999747, \
-1.5428869044748548`}}], 
    ArrowBox[{{
     0.49193495504995377`, -0.8049844718999243}, {-0.3130495168499705, \
-1.5205262246998568`}}], 
    ArrowBox[{{
     0.4024922359499621, -0.7602631123499284}, {-0.3577708763999663, \
-1.498165544924859}}], 
    ArrowBox[{{
     0.3130495168499705, -0.7155417527999326}, {-0.4024922359499621, \
-1.475804865149861}}], 
    ArrowBox[{{
     0.22360679774997896`, -0.6708203932499369}, {-0.447213595499958, \
-1.4534441853748634`}}], 
    ArrowBox[{{
     0.13416407864998728`, -0.626099033699941}, {-0.49193495504995377`, \
-1.4310835055998652`}}], 
    ArrowBox[{{
     0.04472135954999576, -0.5813776741499452}, {-0.5366563145999494, \
-1.4087228258248674`}}], 
    ArrowBox[{{-0.04472135954999584, -0.5366563145999494}, \
{-0.5813776741499452, -1.3863621460498694`}}], 
    ArrowBox[{{-0.13416407864998742`, -0.4919349550499537}, \
{-0.6260990336999411, -1.3640014662748716`}}], 
    ArrowBox[{{-0.22360679774997896`, -0.4472135954999579}, \
{-0.6708203932499369, -1.3416407864998738`}}], 
    ArrowBox[{{-0.3130495168499706, -0.4024922359499621}, \
{-0.7155417527999327, -1.319280106724876}}], 
    ArrowBox[{{-0.4024922359499623, -0.35777087639996624`}, \
{-0.7602631123499286, -1.296919426949878}}], 
    ArrowBox[{{-0.49193495504995377`, -0.3130495168499705}, \
{-0.8049844718999243, -1.27455874717488}}], 
    ArrowBox[{{-0.5813776741499455, -0.2683281572999747}, \
{-0.8497058314499202, -1.2521980673998823`}}], 
    ArrowBox[{{-0.6708203932499369, -0.22360679774997896`}, \
{-0.8944271909999159, -1.2298373876248845`}}], 
    ArrowBox[{{-0.7602631123499285, -0.17888543819998315`}, \
{-0.9391485505499116, -1.2074767078498865`}}], 
    ArrowBox[{{-0.8497058314499202, -0.1341640786499873}, \
{-0.9838699100999075, -1.1851160280748885`}}], 
    ArrowBox[{{-0.9391485505499116, -0.08944271909999157}, \
{-1.0285912696499033`, -1.1627553482998905`}}], 
    ArrowBox[{{-1.0285912696499033`, -0.04472135954999573}, \
{-1.0733126291998991`, -1.1403946685248927`}}], 
    ArrowBox[{{-1.118033988749895, 
     0.}, {-1.118033988749895, -1.118033988749895}}], 
    ArrowBox[{{
     0.7155417527999327, -0.8049844718999242}, {-0.08944271909999146, \
-1.296919426949878}}], 
    ArrowBox[{{
     0.6260990336999411, -0.7602631123499284}, {-0.13416407864998725`, \
-1.27455874717488}}], 
    ArrowBox[{{
     0.5366563145999496, -0.7155417527999326}, {-0.17888543819998304`, \
-1.252198067399882}}], 
    ArrowBox[{{
     0.44721359549995787`, -0.6708203932499368}, {-0.22360679774997894`, \
-1.229837387624884}}], 
    ArrowBox[{{
     0.3577708763999663, -0.626099033699941}, {-0.2683281572999747, \
-1.2074767078498863`}}], 
    ArrowBox[{{
     0.26832815729997483`, -0.5813776741499452}, {-0.3130495168499704, \
-1.1851160280748885`}}], 
    ArrowBox[{{
     0.17888543819998312`, -0.5366563145999493}, {-0.3577708763999662, \
-1.1627553482998902`}}], 
    ArrowBox[{{
     0.0894427190999916, -0.4919349550499536}, {-0.402492235949962, \
-1.1403946685248925`}}], 
    ArrowBox[{{
     0., -0.4472135954999578}, {-0.4472135954999578, -1.1180339887498945`}}], 
    ArrowBox[{{-0.08944271909999156, -0.40249223594996203`}, \
{-0.4919349550499536, -1.0956733089748967`}}], 
    ArrowBox[{{-0.17888543819998312`, -0.35777087639996624`}, \
{-0.5366563145999493, -1.0733126291998987`}}], 
    ArrowBox[{{-0.2683281572999748, -0.3130495168499704}, \
{-0.5813776741499452, -1.0509519494249007`}}], 
    ArrowBox[{{-0.35777087639996646`, -0.26832815729997456`}, \
{-0.626099033699941, -1.0285912696499029`}}], 
    ArrowBox[{{-0.44721359549995787`, -0.22360679774997885`}, \
{-0.6708203932499367, -1.0062305898749049`}}], 
    ArrowBox[{{-0.5366563145999496, -0.178885438199983}, \
{-0.7155417527999326, -0.9838699100999071}}], 
    ArrowBox[{{-0.626099033699941, -0.13416407864998728`}, \
{-0.7602631123499283, -0.9615092303249092}}], 
    ArrowBox[{{-0.7155417527999327, -0.08944271909999146}, \
{-0.8049844718999242, -0.9391485505499113}}], 
    ArrowBox[{{-0.8049844718999244, -0.04472135954999562}, \
{-0.84970583144992, -0.9167878707749134}}], 
    ArrowBox[{{-0.8944271909999159, 
     1.1102230246251565`*^-16}, {-0.8944271909999157, -0.8944271909999155}}], 
    ArrowBox[{{-0.9838699100999075, 
     0.044721359549995954`}, {-0.9391485505499115, -0.8720665112249176}}], 
    ArrowBox[{{-1.073312629199899, 
     0.08944271909999169}, {-0.9838699100999072, -0.8497058314499197}}], 
    ArrowBox[{{0.7602631123499285, -0.7155417527999326}, {
     0.0447213595499959, -1.0285912696499029`}}], 
    ArrowBox[{{0.6708203932499369, -0.6708203932499368}, {
     1.1102230246251565`*^-16, -1.0062305898749049`}}], 
    ArrowBox[{{
     0.5813776741499453, -0.626099033699941}, {-0.044721359549995676`, \
-0.9838699100999072}}], 
    ArrowBox[{{
     0.49193495504995366`, -0.5813776741499452}, {-0.08944271909999157, \
-0.9615092303249095}}], 
    ArrowBox[{{
     0.4024922359499621, -0.5366563145999494}, {-0.13416407864998736`, \
-0.9391485505499115}}], 
    ArrowBox[{{
     0.31304951684997057`, -0.49193495504995366`}, {-0.1788854381999831, \
-0.9167878707749135}}], 
    ArrowBox[{{
     0.22360679774997888`, -0.44721359549995787`}, {-0.223606797749979, \
-0.8944271909999157}}], 
    ArrowBox[{{
     0.13416407864998736`, -0.4024922359499621}, {-0.2683281572999747, \
-0.872066511224918}}], 
    ArrowBox[{{
     0.04472135954999576, -0.3577708763999663}, {-0.3130495168499705, \
-0.84970583144992}}], 
    ArrowBox[{{-0.0447213595499958, -0.3130495168499705}, \
{-0.3577708763999663, -0.8273451516749221}}], 
    ArrowBox[{{-0.13416407864998736`, -0.2683281572999747}, \
{-0.4024922359499621, -0.8049844718999242}}], 
    ArrowBox[{{-0.22360679774997905`, -0.22360679774997888`}, \
{-0.4472135954999579, -0.7826237921249263}}], 
    ArrowBox[{{-0.31304951684997073`, -0.17888543819998304`}, \
{-0.49193495504995377`, -0.7602631123499284}}], 
    ArrowBox[{{-0.40249223594996214`, -0.13416407864998733`}, \
{-0.5366563145999494, -0.7379024325749305}}], 
    ArrowBox[{{-0.4919349550499538, -0.08944271909999149}, \
{-0.5813776741499453, -0.7155417527999326}}], 
    ArrowBox[{{-0.5813776741499452, -0.04472135954999576}, \
{-0.626099033699941, -0.6931810730249346}}], 
    ArrowBox[{{-0.6708203932499369, 
     5.551115123125783*^-17}, {-0.6708203932499368, -0.6708203932499368}}], 
    ArrowBox[{{-0.7602631123499286, 
     0.0447213595499959}, {-0.7155417527999327, -0.6484597134749388}}], 
    ArrowBox[{{-0.8497058314499201, 
     0.08944271909999163}, {-0.7602631123499284, -0.626099033699941}}], 
    ArrowBox[{{-0.9391485505499118, 
     0.13416407864998747`}, {-0.8049844718999243, -0.603738353924943}}], 
    ArrowBox[{{-1.0285912696499033`, 
     0.1788854381999832}, {-0.8497058314499202, -0.5813776741499453}}], 
    ArrowBox[{{0.8049844718999243, -0.626099033699941}, {
     0.17888543819998326`, -0.7602631123499283}}], 
    ArrowBox[{{0.7155417527999327, -0.5813776741499452}, {
     0.13416407864998747`, -0.7379024325749305}}], 
    ArrowBox[{{0.6260990336999411, -0.5366563145999494}, {
     0.08944271909999169, -0.7155417527999325}}], 
    ArrowBox[{{0.5366563145999494, -0.49193495504995366`}, {
     0.04472135954999579, -0.6931810730249346}}], 
    ArrowBox[{{0.44721359549995787`, -0.44721359549995787`}, {
     0., -0.6708203932499368}}], 
    ArrowBox[{{
     0.35777087639996635`, -0.4024922359499621}, {-0.04472135954999573, \
-0.648459713474939}}], 
    ArrowBox[{{
     0.26832815729997467`, -0.35777087639996624`}, {-0.08944271909999157, \
-0.626099033699941}}], 
    ArrowBox[{{
     0.17888543819998315`, -0.3130495168499705}, {-0.13416407864998736`, \
-0.6037383539249431}}], 
    ArrowBox[{{
     0.08944271909999156, -0.26832815729997467`}, {-0.1788854381999831, \
-0.5813776741499451}}], 
    ArrowBox[{{
     0., -0.2236067977499789}, {-0.2236067977499789, -0.5590169943749472}}], 
    ArrowBox[{{-0.08944271909999156, -0.17888543819998312`}, \
{-0.26832815729997467`, -0.5366563145999493}}], 
    ArrowBox[{{-0.17888543819998323`, -0.13416407864998728`}, \
{-0.3130495168499705, -0.5142956348249514}}], 
    ArrowBox[{{-0.2683281572999749, -0.08944271909999145}, \
{-0.35777087639996635`, -0.49193495504995355`}}], 
    ArrowBox[{{-0.35777087639996635`, -0.04472135954999573}, \
{-0.4024922359499621, -0.46957427527495565`}}], 
    ArrowBox[{{-0.44721359549995804`, 
     1.1102230246251565`*^-16}, {-0.4472135954999579, \
-0.44721359549995776`}}], 
    ArrowBox[{{-0.5366563145999494, 
     0.04472135954999584}, {-0.4919349550499536, -0.42485291572495987`}}], 
    ArrowBox[{{-0.6260990336999411, 
     0.08944271909999166}, {-0.5366563145999494, -0.402492235949962}}], 
    ArrowBox[{{-0.7155417527999328, 
     0.1341640786499875}, {-0.5813776741499453, -0.3801315561749641}}], 
    ArrowBox[{{-0.8049844718999243, 
     0.17888543819998323`}, {-0.626099033699941, -0.3577708763999662}}], 
    ArrowBox[{{-0.894427190999916, 
     0.22360679774997907`}, {-0.6708203932499369, -0.3354101966249683}}], 
    ArrowBox[{{-0.9838699100999074, 
     0.26832815729997483`}, {-0.7155417527999326, -0.3130495168499704}}], 
    ArrowBox[{{0.8497058314499201, -0.5366563145999494}, {
     0.3130495168499706, -0.49193495504995355`}}], 
    ArrowBox[{{0.7602631123499285, -0.4919349550499537}, {
     0.2683281572999748, -0.46957427527495577`}}], 
    ArrowBox[{{0.6708203932499369, -0.4472135954999579}, {
     0.223606797749979, -0.447213595499958}}], 
    ArrowBox[{{0.5813776741499452, -0.4024922359499621}, {
     0.17888543819998315`, -0.4248529157249601}}], 
    ArrowBox[{{0.49193495504995366`, -0.3577708763999663}, {
     0.13416407864998736`, -0.4024922359499621}}], 
    ArrowBox[{{0.40249223594996214`, -0.3130495168499705}, {
     0.08944271909999163, -0.38013155617496414`}}], 
    ArrowBox[{{0.31304951684997046`, -0.26832815729997467`}, {
     0.04472135954999579, -0.35777087639996624`}}], 
    ArrowBox[{{0.22360679774997894`, -0.22360679774997894`}, {
     0., -0.3354101966249684}}], 
    ArrowBox[{{
     0.13416407864998733`, -0.17888543819998312`}, {-0.04472135954999579, \
-0.3130495168499705}}], 
    ArrowBox[{{
     0.04472135954999578, -0.13416407864998733`}, {-0.08944271909999155, \
-0.29068883707497256`}}], 
    ArrowBox[{{-0.04472135954999578, -0.08944271909999156}, \
{-0.13416407864998733`, -0.26832815729997467`}}], 
    ArrowBox[{{-0.13416407864998744`, -0.044721359549995725`}, \
{-0.17888543819998318`, -0.24596747752497677`}}], 
    ArrowBox[{{-0.22360679774997913`, 
     1.1102230246251565`*^-16}, {-0.22360679774997902`, \
-0.22360679774997885`}}], 
    ArrowBox[{{-0.31304951684997057`, 
     0.04472135954999583}, {-0.2683281572999747, -0.201246117974981}}], 
    ArrowBox[{{-0.40249223594996225`, 
     0.08944271909999167}, {-0.31304951684997057`, -0.17888543819998307`}}], 
    ArrowBox[{{-0.4919349550499537, 
     0.13416407864998742`}, {-0.3577708763999663, -0.1565247584249852}}], 
    ArrowBox[{{-0.5813776741499453, 
     0.1788854381999832}, {-0.40249223594996214`, -0.13416407864998736`}}], 
    ArrowBox[{{-0.670820393249937, 
     0.22360679774997905`}, {-0.447213595499958, -0.11180339887498936`}}], 
    ArrowBox[{{-0.7602631123499285, 
     0.2683281572999748}, {-0.4919349550499537, -0.08944271909999157}}], 
    ArrowBox[{{-0.8497058314499202, 
     0.3130495168499706}, {-0.5366563145999496, -0.06708203932499357}}], 
    ArrowBox[{{-0.9391485505499116, 
     0.35777087639996635`}, {-0.5813776741499452, -0.04472135954999579}}], 
    ArrowBox[{{0.8944271909999159, -0.4472135954999579}, {
     0.4472135954999579, -0.22360679774997905`}}], 
    ArrowBox[{{0.8049844718999243, -0.40249223594996214`}, {
     0.40249223594996214`, -0.20124611797498104`}}], 
    ArrowBox[{{0.7155417527999327, -0.35777087639996635`}, {
     0.35777087639996635`, -0.17888543819998315`}}], 
    ArrowBox[{{0.626099033699941, -0.3130495168499705}, {
     0.3130495168499705, -0.15652475842498526`}}], 
    ArrowBox[{{0.5366563145999494, -0.2683281572999747}, {
     0.2683281572999747, -0.13416407864998736`}}], 
    ArrowBox[{{0.4472135954999579, -0.22360679774997896`}, {
     0.22360679774997896`, -0.11180339887498952`}}], 
    ArrowBox[{{0.35777087639996624`, -0.17888543819998312`}, {
     0.17888543819998312`, -0.08944271909999157}}], 
    ArrowBox[{{0.2683281572999747, -0.13416407864998736`}, {
     0.13416407864998736`, -0.06708203932499368}}], 
    ArrowBox[{{0.17888543819998312`, -0.08944271909999156}, {
     0.08944271909999156, -0.04472135954999579}}], 
    ArrowBox[{{0.08944271909999156, -0.04472135954999578}, {
     0.04472135954999578, -0.022360679774997894`}}], 
    ArrowBox[{{0., 0.}, {0., 0.}}], 
    ArrowBox[{{-0.08944271909999167, 
     0.044721359549995836`}, {-0.044721359549995836`, 0.02236067977499792}}], 
    ArrowBox[{{-0.17888543819998334`, 
     0.08944271909999167}, {-0.08944271909999167, 0.04472135954999584}}], 
    ArrowBox[{{-0.2683281572999748, 0.1341640786499874}, {-0.1341640786499874,
      0.06708203932499368}}], 
    ArrowBox[{{-0.35777087639996646`, 
     0.17888543819998323`}, {-0.17888543819998323`, 0.08944271909999163}}], 
    ArrowBox[{{-0.4472135954999579, 
     0.22360679774997896`}, {-0.22360679774997896`, 0.11180339887498952`}}], 
    ArrowBox[{{-0.5366563145999496, 0.2683281572999748}, {-0.2683281572999748,
      0.13416407864998736`}}], 
    ArrowBox[{{-0.6260990336999412, 0.3130495168499706}, {-0.3130495168499706,
      0.15652475842498537`}}], 
    ArrowBox[{{-0.7155417527999327, 
     0.35777087639996635`}, {-0.35777087639996635`, 0.17888543819998315`}}], 
    ArrowBox[{{-0.8049844718999244, 0.4024922359499622}, {-0.4024922359499622,
      0.20124611797498115`}}], 
    ArrowBox[{{-0.8944271909999159, 0.4472135954999579}, {-0.4472135954999579,
      0.22360679774997905`}}], 
    ArrowBox[{{0.9391485505499116, -0.35777087639996624`}, {
     0.5813776741499455, 0.04472135954999601}}], 
    ArrowBox[{{0.8497058314499201, -0.31304951684997046`}, {
     0.5366563145999497, 0.0670820393249939}}], 
    ArrowBox[{{0.7602631123499285, -0.26832815729997467`}, {
     0.4919349550499538, 0.0894427190999918}}], 
    ArrowBox[{{0.6708203932499368, -0.22360679774997883`}, {0.447213595499958,
      0.1118033988749898}}], 
    ArrowBox[{{0.5813776741499452, -0.17888543819998304`}, {
     0.4024922359499622, 0.13416407864998764`}}], 
    ArrowBox[{{0.49193495504995377`, -0.1341640786499873}, {
     0.35777087639996646`, 0.15652475842498548`}}], 
    ArrowBox[{{0.4024922359499621, -0.08944271909999145}, {0.3130495168499706,
      0.17888543819998345`}}], 
    ArrowBox[{{0.31304951684997057`, -0.04472135954999569}, {
     0.2683281572999749, 0.20124611797498135`}}], 
    ArrowBox[{{0.22360679774997896`, 1.1102230246251565`*^-16}, {
     0.22360679774997907`, 0.22360679774997924`}}], 
    ArrowBox[{{0.1341640786499874, 0.04472135954999589}, {0.1788854381999833, 
     0.2459674775249771}}], 
    ArrowBox[{{0.044721359549995836`, 0.08944271909999167}, {
     0.1341640786499875, 0.268328157299975}}], 
    ArrowBox[{{-0.044721359549995836`, 0.1341640786499875}, {
     0.08944271909999166, 0.2906888370749729}}], 
    ArrowBox[{{-0.1341640786499875, 0.17888543819998334`}, {
     0.04472135954999584, 0.31304951684997084`}}], 
    ArrowBox[{{-0.22360679774997894`, 0.22360679774997905`}, {
     1.1102230246251565`*^-16, 0.33541019662496874`}}], 
    ArrowBox[{{-0.3130495168499706, 
     0.2683281572999749}, {-0.04472135954999573, 0.35777087639996663`}}], 
    ArrowBox[{{-0.4024922359499621, 
     0.3130495168499706}, {-0.08944271909999146, 0.3801315561749645}}], 
    ArrowBox[{{-0.4919349550499537, 
     0.35777087639996646`}, {-0.13416407864998725`, 0.4024922359499625}}], 
    ArrowBox[{{-0.5813776741499455, 
     0.4024922359499623}, {-0.17888543819998315`, 0.4248529157249603}}], 
    ArrowBox[{{-0.6708203932499369, 
     0.44721359549995804`}, {-0.22360679774997888`, 0.4472135954999582}}], 
    ArrowBox[{{-0.7602631123499286, 0.4919349550499539}, {-0.2683281572999747,
      0.4695742752749561}}], 
    ArrowBox[{{-0.8497058314499201, 0.5366563145999496}, {-0.3130495168499705,
      0.49193495504995377`}}], 
    ArrowBox[{{0.9838699100999075, -0.2683281572999746}, {0.7155417527999329, 
     0.31304951684997095`}}], 
    ArrowBox[{{0.894427190999916, -0.2236067977499788}, {0.6708203932499371, 
     0.33541019662496896`}}], 
    ArrowBox[{{0.8049844718999244, -0.178885438199983}, {0.6260990336999414, 
     0.35777087639996685`}}], 
    ArrowBox[{{0.7155417527999327, -0.13416407864998717`}, {
     0.5813776741499456, 0.3801315561749648}}], 
    ArrowBox[{{0.6260990336999411, -0.08944271909999138}, {0.5366563145999498,
      0.4024922359499627}}], 
    ArrowBox[{{0.5366563145999496, -0.04472135954999562}, {
     0.49193495504995394`, 0.42485291572496053`}}], 
    ArrowBox[{{0.4472135954999579, 2.220446049250313*^-16}, {
     0.44721359549995815`, 0.4472135954999585}}], 
    ArrowBox[{{0.3577708763999664, 0.04472135954999598}, {0.4024922359499624, 
     0.4695742752749564}}], 
    ArrowBox[{{0.2683281572999748, 0.08944271909999178}, {0.3577708763999666, 
     0.4919349550499542}}], 
    ArrowBox[{{0.17888543819998323`, 0.13416407864998756`}, {
     0.3130495168499708, 0.5142956348249521}}], 
    ArrowBox[{{0.08944271909999167, 0.17888543819998334`}, {0.268328157299975,
      0.53665631459995}}], 
    ArrowBox[{{0., 0.22360679774997919`}, {0.22360679774997919`, 
     0.559016994374948}}], 
    ArrowBox[{{-0.08944271909999167, 0.268328157299975}, {
     0.17888543819998332`, 0.5813776741499458}}], 
    ArrowBox[{{-0.1788854381999831, 0.31304951684997073`}, {
     0.13416407864998764`, 0.6037383539249437}}], 
    ArrowBox[{{-0.2683281572999748, 0.3577708763999666}, {0.0894427190999918, 
     0.6260990336999417}}], 
    ArrowBox[{{-0.35777087639996624`, 0.4024922359499623}, {
     0.044721359549996065`, 0.6484597134749395}}], 
    ArrowBox[{{-0.44721359549995787`, 0.4472135954999581}, {
     2.220446049250313*^-16, 0.6708203932499375}}], 
    ArrowBox[{{-0.5366563145999496, 
     0.491934955049954}, {-0.044721359549995565`, 0.6931810730249354}}], 
    ArrowBox[{{-0.626099033699941, 0.5366563145999497}, {-0.08944271909999135,
      0.715541752799933}}], 
    ArrowBox[{{-0.7155417527999327, 
     0.5813776741499456}, {-0.13416407864998714`, 0.7379024325749312}}], 
    ArrowBox[{{-0.8049844718999242, 
     0.6260990336999412}, {-0.17888543819998293`, 0.760263112349929}}], 
    ArrowBox[{{1.0285912696499033`, -0.17888543819998315`}, {
     0.8497058314499202, 0.5813776741499455}}], 
    ArrowBox[{{0.9391485505499116, -0.13416407864998736`}, {
     0.8049844718999243, 0.6037383539249432}}], 
    ArrowBox[{{0.8497058314499201, -0.08944271909999157}, {0.7602631123499285,
      0.6260990336999411}}], 
    ArrowBox[{{0.7602631123499284, -0.04472135954999573}, {0.7155417527999326,
      0.648459713474939}}], 
    ArrowBox[{{0.6708203932499368, 5.551115123125783*^-17}, {
     0.6708203932499368, 0.6708203932499369}}], 
    ArrowBox[{{0.5813776741499453, 0.044721359549995815`}, {
     0.6260990336999411, 0.6931810730249349}}], 
    ArrowBox[{{0.49193495504995366`, 0.08944271909999166}, {
     0.5813776741499453, 0.7155417527999328}}], 
    ArrowBox[{{0.4024922359499621, 0.13416407864998742`}, {0.5366563145999494,
      0.7379024325749306}}], 
    ArrowBox[{{0.3130495168499705, 0.1788854381999832}, {0.4919349550499537, 
     0.7602631123499285}}], 
    ArrowBox[{{0.22360679774997894`, 0.223606797749979}, {0.4472135954999579, 
     0.7826237921249264}}], 
    ArrowBox[{{0.1341640786499874, 0.2683281572999748}, {0.4024922359499622, 
     0.8049844718999243}}], 
    ArrowBox[{{0.04472135954999572, 0.3130495168499706}, {
     0.35777087639996635`, 0.8273451516749223}}], 
    ArrowBox[{{-0.044721359549995954`, 0.35777087639996646`}, {
     0.3130495168499705, 0.8497058314499202}}], 
    ArrowBox[{{-0.1341640786499874, 0.4024922359499622}, {
     0.26832815729997483`, 0.8720665112249182}}], 
    ArrowBox[{{-0.22360679774997907`, 0.447213595499958}, {0.2236067977499789,
      0.8944271909999159}}], 
    ArrowBox[{{-0.3130495168499705, 0.49193495504995377`}, {
     0.17888543819998326`, 0.916787870774914}}], 
    ArrowBox[{{-0.4024922359499622, 0.5366563145999496}, {
     0.13416407864998736`, 0.9391485505499116}}], 
    ArrowBox[{{-0.4919349550499539, 0.5813776741499455}, {0.08944271909999157,
      0.9615092303249098}}], 
    ArrowBox[{{-0.5813776741499453, 0.6260990336999411}, {0.04472135954999579,
      0.9838699100999074}}], 
    ArrowBox[{{-0.670820393249937, 0.670820393249937}, {0., 
     1.0062305898749055`}}], 
    ArrowBox[{{-0.7602631123499285, 
     0.7155417527999327}, {-0.04472135954999579, 1.0285912696499033`}}], 
    ArrowBox[{{1.0733126291998991`, -0.08944271909999146}, {
     0.9838699100999077, 0.8497058314499204}}], 
    ArrowBox[{{0.9838699100999075, -0.044721359549995676`}, {
     0.9391485505499119, 0.8720665112249184}}], 
    ArrowBox[{{0.894427190999916, 1.1102230246251565`*^-16}, {
     0.8944271909999161, 0.8944271909999162}}], 
    ArrowBox[{{0.8049844718999243, 0.044721359549995954`}, {
     0.8497058314499202, 0.9167878707749142}}], 
    ArrowBox[{{0.7155417527999327, 0.08944271909999174}, {0.8049844718999244, 
     0.9391485505499121}}], 
    ArrowBox[{{0.6260990336999411, 0.1341640786499875}, {0.7602631123499286, 
     0.9615092303249099}}], 
    ArrowBox[{{0.5366563145999494, 0.17888543819998334`}, {0.7155417527999328,
      0.9838699100999078}}], 
    ArrowBox[{{0.447213595499958, 0.2236067977499791}, {0.670820393249937, 
     1.0062305898749058`}}], 
    ArrowBox[{{0.35777087639996635`, 0.2683281572999749}, {0.6260990336999412,
      1.0285912696499036`}}], 
    ArrowBox[{{0.2683281572999748, 0.3130495168499707}, {0.5813776741499455, 
     1.0509519494249016`}}], 
    ArrowBox[{{0.17888543819998323`, 0.35777087639996646`}, {
     0.5366563145999497, 1.0733126291998993`}}], 
    ArrowBox[{{0.08944271909999156, 0.4024922359499623}, {0.4919349550499539, 
     1.0956733089748973`}}], 
    ArrowBox[{{-1.1102230246251565`*^-16, 0.44721359549995815`}, {
     0.44721359549995804`, 1.1180339887498953`}}], 
    ArrowBox[{{-0.08944271909999155, 0.4919349550499539}, {0.4024922359499623,
      1.1403946685248931`}}], 
    ArrowBox[{{-0.17888543819998323`, 0.5366563145999497}, {
     0.3577708763999664, 1.162755348299891}}], 
    ArrowBox[{{-0.2683281572999747, 0.5813776741499455}, {
     0.31304951684997073`, 1.185116028074889}}], 
    ArrowBox[{{-0.3577708763999663, 0.6260990336999412}, {
     0.26832815729997495`, 1.207476707849887}}], 
    ArrowBox[{{-0.447213595499958, 0.670820393249937}, {0.22360679774997905`, 
     1.2298373876248845`}}], 
    ArrowBox[{{-0.5366563145999494, 0.7155417527999328}, {
     0.17888543819998337`, 1.2521980673998825`}}], 
    ArrowBox[{{-0.6260990336999411, 0.7602631123499286}, {
     0.13416407864998747`, 1.2745587471748805`}}], 
    ArrowBox[{{-0.7155417527999326, 0.8049844718999244}, {0.0894427190999918, 
     1.2969194269498785`}}], 
    ArrowBox[{{1.118033988749895, 0.}, {1.118033988749895, 
     1.118033988749895}}], 
    ArrowBox[{{1.0285912696499033`, 0.04472135954999579}, {
     1.0733126291998991`, 1.140394668524893}}], 
    ArrowBox[{{0.9391485505499116, 0.08944271909999157}, {1.0285912696499033`,
      1.1627553482998905`}}], 
    ArrowBox[{{0.84970583144992, 0.13416407864998742`}, {0.9838699100999073, 
     1.1851160280748885`}}], 
    ArrowBox[{{0.7602631123499284, 0.1788854381999832}, {0.9391485505499115, 
     1.2074767078498865`}}], 
    ArrowBox[{{0.6708203932499369, 0.22360679774997896`}, {0.8944271909999159,
      1.2298373876248845`}}], 
    ArrowBox[{{0.5813776741499452, 0.26832815729997483`}, {0.8497058314499201,
      1.2521980673998823`}}], 
    ArrowBox[{{0.49193495504995366`, 0.31304951684997057`}, {
     0.8049844718999242, 1.27455874717488}}], 
    ArrowBox[{{0.4024922359499621, 0.35777087639996635`}, {0.7602631123499284,
      1.296919426949878}}], 
    ArrowBox[{{0.3130495168499705, 0.40249223594996214`}, {0.7155417527999326,
      1.3192801067248758`}}], 
    ArrowBox[{{0.22360679774997896`, 0.4472135954999579}, {0.6708203932499369,
      1.3416407864998738`}}], 
    ArrowBox[{{0.1341640786499873, 0.49193495504995377`}, {0.626099033699941, 
     1.3640014662748718`}}], 
    ArrowBox[{{0.04472135954999562, 0.5366563145999496}, {0.5813776741499452, 
     1.3863621460498694`}}], 
    ArrowBox[{{-0.044721359549995815`, 0.5813776741499453}, {
     0.5366563145999496, 1.4087228258248676`}}], 
    ArrowBox[{{-0.1341640786499875, 0.6260990336999411}, {
     0.49193495504995366`, 1.4310835055998652`}}], 
    ArrowBox[{{-0.22360679774997896`, 0.6708203932499369}, {0.447213595499958,
      1.4534441853748634`}}], 
    ArrowBox[{{-0.3130495168499706, 0.7155417527999327}, {0.4024922359499621, 
     1.4758048651498612`}}], 
    ArrowBox[{{-0.4024922359499623, 0.7602631123499286}, {0.3577708763999663, 
     1.4981655449248592`}}], 
    ArrowBox[{{-0.49193495504995377`, 0.8049844718999243}, {
     0.3130495168499705, 1.5205262246998568`}}], 
    ArrowBox[{{-0.5813776741499455, 0.8497058314499202}, {0.2683281572999747, 
     1.5428869044748552`}}], 
    ArrowBox[{{-0.6708203932499369, 0.8944271909999159}, {
     0.22360679774997894`, 1.5652475842498528`}}], 
    ArrowBox[{{1.1627553482998907`, 0.08944271909999163}, {
     1.2521980673998823`, 1.3863621460498698`}}], 
    ArrowBox[{{1.0733126291998991`, 0.13416407864998742`}, {
     1.2074767078498865`, 1.4087228258248676`}}], 
    ArrowBox[{{0.9838699100999075, 0.1788854381999832}, {1.1627553482998907`, 
     1.4310835055998656`}}], 
    ArrowBox[{{0.8944271909999157, 0.22360679774997905`}, {1.118033988749895, 
     1.4534441853748634`}}], 
    ArrowBox[{{0.8049844718999242, 0.26832815729997483`}, {1.073312629199899, 
     1.4758048651498612`}}], 
    ArrowBox[{{0.7155417527999327, 0.3130495168499706}, {1.0285912696499033`, 
     1.4981655449248592`}}], 
    ArrowBox[{{0.626099033699941, 0.3577708763999664}, {0.9838699100999074, 
     1.520526224699857}}], 
    ArrowBox[{{0.5366563145999494, 0.4024922359499622}, {0.9391485505499116, 
     1.542886904474855}}], 
    ArrowBox[{{0.44721359549995787`, 0.447213595499958}, {0.8944271909999159, 
     1.5652475842498528`}}], 
    ArrowBox[{{0.35777087639996635`, 0.49193495504995377`}, {
     0.8497058314499202, 1.5876082640248508`}}], 
    ArrowBox[{{0.2683281572999748, 0.5366563145999496}, {0.8049844718999244, 
     1.6099689437998486`}}], 
    ArrowBox[{{0.1788854381999831, 0.5813776741499453}, {0.7602631123499284, 
     1.6323296235748466`}}], 
    ArrowBox[{{0.08944271909999144, 0.6260990336999412}, {0.7155417527999327, 
     1.6546903033498446`}}], 
    ArrowBox[{{0., 0.6708203932499369}, {0.6708203932499369, 
     1.6770509831248424`}}], 
    ArrowBox[{{-0.08944271909999169, 0.7155417527999328}, {0.6260990336999411,
      1.6994116628998404`}}], 
    ArrowBox[{{-0.17888543819998315`, 0.7602631123499285}, {
     0.5813776741499453, 1.7217723426748381`}}], 
    ArrowBox[{{-0.2683281572999748, 0.8049844718999244}, {0.5366563145999497, 
     1.7441330224498364`}}], 
    ArrowBox[{{-0.35777087639996646`, 0.8497058314499202}, {
     0.4919349550499537, 1.7664937022248342`}}], 
    ArrowBox[{{-0.4472135954999579, 0.894427190999916}, {0.44721359549995804`,
      1.788854381999832}}], 
    ArrowBox[{{-0.5366563145999497, 0.9391485505499118}, {0.4024922359499621, 
     1.8112150617748297`}}], 
    ArrowBox[{{-0.626099033699941, 0.9838699100999075}, {0.3577708763999665, 
     1.833575741549828}}], 
    ArrowBox[{{1.2074767078498865`, 0.17888543819998332`}, {
     1.3863621460498698`, 1.6546903033498448`}}], 
    ArrowBox[{{1.118033988749895, 0.2236067977499791}, {1.341640786499874, 
     1.6770509831248428`}}], 
    ArrowBox[{{1.0285912696499033`, 0.2683281572999749}, {1.2969194269498783`,
      1.6994116628998406`}}], 
    ArrowBox[{{0.9391485505499116, 0.31304951684997073`}, {
     1.2521980673998825`, 1.7217723426748384`}}], 
    ArrowBox[{{0.8497058314499201, 0.3577708763999665}, {1.2074767078498865`, 
     1.7441330224498364`}}], 
    ArrowBox[{{0.7602631123499286, 0.4024922359499623}, {1.162755348299891, 
     1.7664937022248344`}}], 
    ArrowBox[{{0.6708203932499368, 0.4472135954999581}, {1.118033988749895, 
     1.7888543819998322`}}], 
    ArrowBox[{{0.5813776741499453, 0.4919349550499539}, {1.0733126291998993`, 
     1.81121506177483}}], 
    ArrowBox[{{0.49193495504995377`, 0.5366563145999497}, {
     1.0285912696499033`, 1.833575741549828}}], 
    ArrowBox[{{0.4024922359499622, 0.5813776741499455}, {0.9838699100999077, 
     1.855936421324826}}], 
    ArrowBox[{{0.3130495168499706, 0.6260990336999412}, {0.9391485505499119, 
     1.878297101099824}}], 
    ArrowBox[{{0.22360679774997894`, 0.670820393249937}, {0.894427190999916, 
     1.9006577808748215`}}], 
    ArrowBox[{{0.13416407864998728`, 0.7155417527999329}, {0.8497058314499202,
      1.9230184606498197`}}], 
    ArrowBox[{{0.04472135954999584, 0.7602631123499286}, {0.8049844718999244, 
     1.9453791404248173`}}], 
    ArrowBox[{{-0.04472135954999584, 0.8049844718999245}, {0.7602631123499286,
      1.9677398201998153`}}], 
    ArrowBox[{{-0.1341640786499873, 0.8497058314499202}, {0.7155417527999328, 
     1.9901004999748133`}}], 
    ArrowBox[{{-0.22360679774997894`, 0.894427190999916}, {0.670820393249937, 
     2.0124611797498106`}}], 
    ArrowBox[{{-0.3130495168499706, 0.9391485505499119}, {0.6260990336999412, 
     2.034821859524809}}], 
    ArrowBox[{{-0.4024922359499621, 0.9838699100999075}, {0.5813776741499455, 
     2.0571825392998067`}}], 
    ArrowBox[{{-0.49193495504995377`, 1.0285912696499033`}, {
     0.5366563145999496, 2.079543219074804}}], 
    ArrowBox[{{-0.5813776741499452, 1.0733126291998991`}, {0.4919349550499539,
      2.1019038988498027`}}], 
    ArrowBox[{{1.2521980673998823`, 0.2683281572999748}, {1.520526224699857, 
     1.923018460649819}}], 
    ArrowBox[{{1.1627553482998907`, 0.31304951684997057`}, {
     1.4758048651498612`, 1.945379140424817}}], 
    ArrowBox[{{1.0733126291998991`, 0.35777087639996635`}, {
     1.4310835055998654`, 1.967739820199815}}], 
    ArrowBox[{{0.9838699100999073, 0.4024922359499622}, {1.3863621460498696`, 
     1.9901004999748129`}}], 
    ArrowBox[{{0.8944271909999157, 0.447213595499958}, {1.3416407864998736`, 
     2.0124611797498106`}}], 
    ArrowBox[{{0.8049844718999243, 0.49193495504995377`}, {1.296919426949878, 
     2.0348218595248087`}}], 
    ArrowBox[{{0.7155417527999326, 0.5366563145999496}, {1.252198067399882, 
     2.0571825392998067`}}], 
    ArrowBox[{{0.626099033699941, 0.5813776741499453}, {1.2074767078498865`, 
     2.0795432190748047`}}], 
    ArrowBox[{{0.5366563145999494, 0.6260990336999411}, {1.1627553482998905`, 
     2.101903898849802}}], 
    ArrowBox[{{0.4472135954999579, 0.6708203932499369}, {1.118033988749895, 
     2.1242645786248002`}}], 
    ArrowBox[{{0.35777087639996635`, 0.7155417527999327}, {
     1.0733126291998991`, 2.1466252583997982`}}], 
    ArrowBox[{{0.26832815729997467`, 0.7602631123499285}, {1.028591269649903, 
     2.168985938174796}}], 
    ArrowBox[{{0.178885438199983, 0.8049844718999244}, {0.9838699100999074, 
     2.1913466179497942`}}], 
    ArrowBox[{{0.08944271909999157, 0.8497058314499201}, {0.9391485505499116, 
     2.213707297724792}}], 
    ArrowBox[{{-1.1102230246251565`*^-16, 0.894427190999916}, {
     0.8944271909999159, 2.23606797749979}}], 
    ArrowBox[{{-0.08944271909999157, 0.9391485505499116}, {0.8497058314499201,
      2.2584286572747874`}}], 
    ArrowBox[{{-0.1788854381999832, 0.9838699100999075}, {0.8049844718999244, 
     2.280789337049786}}], 
    ArrowBox[{{-0.2683281572999749, 1.0285912696499033`}, {0.7602631123499284,
      2.3031500168247834`}}], 
    ArrowBox[{{-0.35777087639996635`, 1.0733126291998991`}, {
     0.7155417527999328, 2.3255106965997814`}}], 
    ArrowBox[{{-0.44721359549995804`, 1.118033988749895}, {0.6708203932499368,
      2.3478713763747794`}}], 
    ArrowBox[{{-0.5366563145999494, 1.1627553482998907`}, {0.6260990336999412,
      2.3702320561497774`}}], 
    ArrowBox[{{1.296919426949878, 0.35777087639996646`}, {1.6546903033498446`,
      2.1913466179497942`}}], 
    ArrowBox[{{1.2074767078498865`, 0.40249223594996225`}, {
     1.6099689437998488`, 2.213707297724792}}], 
    ArrowBox[{{1.118033988749895, 0.44721359549995804`}, {1.565247584249853, 
     2.23606797749979}}], 
    ArrowBox[{{1.0285912696499033`, 0.4919349550499539}, {1.5205262246998572`,
      2.258428657274788}}], 
    ArrowBox[{{0.9391485505499116, 0.5366563145999497}, {1.4758048651498612`, 
     2.280789337049786}}], 
    ArrowBox[{{0.8497058314499202, 0.5813776741499455}, {1.4310835055998656`, 
     2.303150016824784}}], 
    ArrowBox[{{0.7602631123499284, 0.6260990336999412}, {1.3863621460498696`, 
     2.325510696599782}}], 
    ArrowBox[{{0.6708203932499369, 0.670820393249937}, {1.341640786499874, 
     2.3478713763747794`}}], 
    ArrowBox[{{0.5813776741499453, 0.7155417527999328}, {1.296919426949878, 
     2.3702320561497774`}}], 
    ArrowBox[{{0.49193495504995377`, 0.7602631123499286}, {
     1.2521980673998825`, 2.3925927359247754`}}], 
    ArrowBox[{{0.4024922359499622, 0.8049844718999244}, {1.2074767078498865`, 
     2.4149534156997734`}}], 
    ArrowBox[{{0.3130495168499705, 0.8497058314499202}, {1.1627553482998907`, 
     2.437314095474771}}], 
    ArrowBox[{{0.22360679774997885`, 0.8944271909999161}, {1.118033988749895, 
     2.459674775249769}}], 
    ArrowBox[{{0.13416407864998742`, 0.9391485505499118}, {
     1.0733126291998991`, 2.482035455024767}}], 
    ArrowBox[{{0.04472135954999573, 0.9838699100999077}, {1.0285912696499033`,
      2.5043961347997645`}}], 
    ArrowBox[{{-0.04472135954999573, 1.0285912696499033`}, {
     0.9838699100999075, 2.5267568145747625`}}], 
    ArrowBox[{{-0.13416407864998736`, 1.0733126291998991`}, {
     0.9391485505499118, 2.54911749434976}}], 
    ArrowBox[{{-0.22360679774997905`, 1.118033988749895}, {0.8944271909999159,
      2.571478174124758}}], 
    ArrowBox[{{-0.3130495168499705, 1.1627553482998907`}, {0.8497058314499202,
      2.593838853899756}}], 
    ArrowBox[{{-0.4024922359499622, 1.2074767078498865`}, {0.8049844718999243,
      2.616199533674754}}], 
    ArrowBox[{{-0.49193495504995366`, 1.2521980673998823`}, {
     0.7602631123499286, 2.638560213449752}}], 
    ArrowBox[{{1.3416407864998738`, 0.4472135954999579}, {1.7888543819998317`,
      2.459674775249769}}], 
    ArrowBox[{{1.2521980673998823`, 0.4919349550499537}, {1.744133022449836, 
     2.4820354550247665`}}], 
    ArrowBox[{{1.1627553482998907`, 0.5366563145999494}, {1.6994116628998401`,
      2.504396134799764}}], 
    ArrowBox[{{1.073312629199899, 0.5813776741499453}, {1.6546903033498443`, 
     2.526756814574762}}], 
    ArrowBox[{{0.9838699100999073, 0.6260990336999411}, {1.6099689437998483`, 
     2.54911749434976}}], 
    ArrowBox[{{0.8944271909999159, 0.6708203932499369}, {1.5652475842498528`, 
     2.571478174124758}}], 
    ArrowBox[{{0.8049844718999242, 0.7155417527999327}, {1.5205262246998568`, 
     2.593838853899756}}], 
    ArrowBox[{{0.7155417527999326, 0.7602631123499285}, {1.4758048651498612`, 
     2.616199533674754}}], 
    ArrowBox[{{0.626099033699941, 0.8049844718999243}, {1.4310835055998652`, 
     2.6385602134497517`}}], 
    ArrowBox[{{0.5366563145999494, 0.8497058314499201}, {1.3863621460498696`, 
     2.6609208932247497`}}], 
    ArrowBox[{{0.4472135954999579, 0.8944271909999159}, {1.3416407864998738`, 
     2.6832815729997477`}}], 
    ArrowBox[{{0.35777087639996624`, 0.9391485505499116}, {
     1.2969194269498778`, 2.7056422527747452`}}], 
    ArrowBox[{{0.2683281572999746, 0.9838699100999075}, {1.252198067399882, 
     2.7280029325497437`}}], 
    ArrowBox[{{0.17888543819998315`, 1.0285912696499033`}, {
     1.2074767078498865`, 2.7503636123247412`}}], 
    ArrowBox[{{0.08944271909999146, 1.0733126291998991`}, {
     1.1627553482998905`, 2.7727242920997393`}}], 
    ArrowBox[{{0., 1.118033988749895}, {1.118033988749895, 
     2.7950849718747373`}}], 
    ArrowBox[{{-0.08944271909999163, 1.1627553482998907`}, {
     1.0733126291998991`, 2.8174456516497353`}}], 
    ArrowBox[{{-0.17888543819998332`, 1.2074767078498865`}, {
     1.028591269649903, 2.8398063314247333`}}], 
    ArrowBox[{{-0.2683281572999748, 1.2521980673998823`}, {0.9838699100999075,
      2.862167011199731}}], 
    ArrowBox[{{-0.35777087639996646`, 1.296919426949878}, {0.9391485505499115,
      2.884527690974729}}], 
    ArrowBox[{{-0.4472135954999579, 1.3416407864998738`}, {0.894427190999916, 
     2.906888370749727}}], 
    ArrowBox[{{
     0.4472135954999579, -1.3416407864998738`}, {-0.894427190999916, \
-2.906888370749727}}], 
    ArrowBox[{{
     0.4919349550499537, -1.2521980673998823`}, {-0.7602631123499286, \
-2.6385602134497517`}}], 
    ArrowBox[{{
     0.5366563145999494, -1.1627553482998907`}, {-0.6260990336999412, \
-2.3702320561497774`}}], 
    ArrowBox[{{
     0.5813776741499453, -1.073312629199899}, {-0.49193495504995355`, \
-2.1019038988498018`}}], 
    ArrowBox[{{
     0.6260990336999411, -0.9838699100999073}, {-0.3577708763999662, \
-1.833575741549827}}], 
    ArrowBox[{{
     0.6708203932499369, -0.8944271909999159}, {-0.22360679774997894`, \
-1.5652475842498528`}}], 
    ArrowBox[{{
     0.7155417527999327, -0.8049844718999242}, {-0.08944271909999146, \
-1.296919426949878}}], 
    ArrowBox[{{0.7602631123499285, -0.7155417527999326}, {
     0.0447213595499959, -1.0285912696499029`}}], 
    ArrowBox[{{0.8049844718999243, -0.626099033699941}, {
     0.17888543819998326`, -0.7602631123499283}}], 
    ArrowBox[{{0.8497058314499201, -0.5366563145999494}, {
     0.3130495168499706, -0.49193495504995355`}}], 
    ArrowBox[{{0.8944271909999159, -0.4472135954999579}, {
     0.4472135954999579, -0.22360679774997905`}}], 
    ArrowBox[{{0.9391485505499116, -0.35777087639996624`}, {
     0.5813776741499455, 0.04472135954999601}}], 
    ArrowBox[{{0.9838699100999075, -0.2683281572999746}, {0.7155417527999329, 
     0.31304951684997095`}}], 
    ArrowBox[{{1.0285912696499033`, -0.17888543819998315`}, {
     0.8497058314499202, 0.5813776741499455}}], 
    ArrowBox[{{1.0733126291998991`, -0.08944271909999146}, {
     0.9838699100999077, 0.8497058314499204}}], 
    ArrowBox[{{1.118033988749895, 0.}, {1.118033988749895, 
     1.118033988749895}}], 
    ArrowBox[{{1.1627553482998907`, 0.08944271909999163}, {
     1.2521980673998823`, 1.3863621460498698`}}], 
    ArrowBox[{{1.2074767078498865`, 0.17888543819998332`}, {
     1.3863621460498698`, 1.6546903033498448`}}], 
    ArrowBox[{{1.2521980673998823`, 0.2683281572999748}, {1.520526224699857, 
     1.923018460649819}}], 
    ArrowBox[{{1.296919426949878, 0.35777087639996646`}, {1.6546903033498446`,
      2.1913466179497942`}}], 
    ArrowBox[{{1.3416407864998738`, 0.4472135954999579}, {1.7888543819998317`,
      2.459674775249769}}], 
    ArrowBox[{{
     0.35777087639996635`, -1.296919426949878}, {-0.9391485505499118, \
-2.884527690974729}}], 
    ArrowBox[{{
     0.40249223594996214`, -1.2074767078498865`}, {-0.8049844718999244, \
-2.616199533674754}}], 
    ArrowBox[{{
     0.4472135954999579, -1.118033988749895}, {-0.670820393249937, \
-2.3478713763747794`}}], 
    ArrowBox[{{
     0.49193495504995377`, -1.028591269649903}, {-0.5366563145999493, \
-2.0795432190748038`}}], 
    ArrowBox[{{
     0.5366563145999496, -0.9391485505499115}, {-0.402492235949962, \
-1.8112150617748295`}}], 
    ArrowBox[{{
     0.5813776741499453, -0.8497058314499201}, {-0.2683281572999747, \
-1.5428869044748548`}}], 
    ArrowBox[{{
     0.6260990336999411, -0.7602631123499284}, {-0.13416407864998725`, \
-1.27455874717488}}], 
    ArrowBox[{{0.6708203932499369, -0.6708203932499368}, {
     1.1102230246251565`*^-16, -1.0062305898749049`}}], 
    ArrowBox[{{0.7155417527999327, -0.5813776741499452}, {
     0.13416407864998747`, -0.7379024325749305}}], 
    ArrowBox[{{0.7602631123499285, -0.4919349550499537}, {
     0.2683281572999748, -0.46957427527495577`}}], 
    ArrowBox[{{0.8049844718999243, -0.40249223594996214`}, {
     0.40249223594996214`, -0.20124611797498104`}}], 
    ArrowBox[{{0.8497058314499201, -0.31304951684997046`}, {
     0.5366563145999497, 0.0670820393249939}}], 
    ArrowBox[{{0.894427190999916, -0.2236067977499788}, {0.6708203932499371, 
     0.33541019662496896`}}], 
    ArrowBox[{{0.9391485505499116, -0.13416407864998736`}, {
     0.8049844718999243, 0.6037383539249432}}], 
    ArrowBox[{{0.9838699100999075, -0.044721359549995676`}, {
     0.9391485505499119, 0.8720665112249184}}], 
    ArrowBox[{{1.0285912696499033`, 0.04472135954999579}, {
     1.0733126291998991`, 1.140394668524893}}], 
    ArrowBox[{{1.0733126291998991`, 0.13416407864998742`}, {
     1.2074767078498865`, 1.4087228258248676`}}], 
    ArrowBox[{{1.118033988749895, 0.2236067977499791}, {1.341640786499874, 
     1.6770509831248428`}}], 
    ArrowBox[{{1.1627553482998907`, 0.31304951684997057`}, {
     1.4758048651498612`, 1.945379140424817}}], 
    ArrowBox[{{1.2074767078498865`, 0.40249223594996225`}, {
     1.6099689437998488`, 2.213707297724792}}], 
    ArrowBox[{{1.2521980673998823`, 0.4919349550499537}, {1.744133022449836, 
     2.4820354550247665`}}], 
    ArrowBox[{{
     0.2683281572999748, -1.2521980673998823`}, {-0.9838699100999075, \
-2.862167011199731}}], 
    ArrowBox[{{
     0.31304951684997057`, -1.1627553482998907`}, {-0.8497058314499202, \
-2.593838853899756}}], 
    ArrowBox[{{
     0.35777087639996635`, -1.0733126291998991`}, {-0.7155417527999328, \
-2.3255106965997814`}}], 
    ArrowBox[{{
     0.4024922359499622, -0.9838699100999073}, {-0.5813776741499451, \
-2.0571825392998058`}}], 
    ArrowBox[{{
     0.447213595499958, -0.8944271909999157}, {-0.44721359549995776`, \
-1.7888543819998315`}}], 
    ArrowBox[{{
     0.49193495504995377`, -0.8049844718999243}, {-0.3130495168499705, \
-1.5205262246998568`}}], 
    ArrowBox[{{
     0.5366563145999496, -0.7155417527999326}, {-0.17888543819998304`, \
-1.252198067399882}}], 
    ArrowBox[{{
     0.5813776741499453, -0.626099033699941}, {-0.044721359549995676`, \
-0.9838699100999072}}], 
    ArrowBox[{{0.6260990336999411, -0.5366563145999494}, {
     0.08944271909999169, -0.7155417527999325}}], 
    ArrowBox[{{0.6708203932499369, -0.4472135954999579}, {
     0.223606797749979, -0.447213595499958}}], 
    ArrowBox[{{0.7155417527999327, -0.35777087639996635`}, {
     0.35777087639996635`, -0.17888543819998315`}}], 
    ArrowBox[{{0.7602631123499285, -0.26832815729997467`}, {
     0.4919349550499538, 0.0894427190999918}}], 
    ArrowBox[{{0.8049844718999244, -0.178885438199983}, {0.6260990336999414, 
     0.35777087639996685`}}], 
    ArrowBox[{{0.8497058314499201, -0.08944271909999157}, {0.7602631123499285,
      0.6260990336999411}}], 
    ArrowBox[{{0.894427190999916, 1.1102230246251565`*^-16}, {
     0.8944271909999161, 0.8944271909999162}}], 
    ArrowBox[{{0.9391485505499116, 0.08944271909999157}, {1.0285912696499033`,
      1.1627553482998905`}}], 
    ArrowBox[{{0.9838699100999075, 0.1788854381999832}, {1.1627553482998907`, 
     1.4310835055998656`}}], 
    ArrowBox[{{1.0285912696499033`, 0.2683281572999749}, {1.2969194269498783`,
      1.6994116628998406`}}], 
    ArrowBox[{{1.0733126291998991`, 0.35777087639996635`}, {
     1.4310835055998654`, 1.967739820199815}}], 
    ArrowBox[{{1.118033988749895, 0.44721359549995804`}, {1.565247584249853, 
     2.23606797749979}}], 
    ArrowBox[{{1.1627553482998907`, 0.5366563145999494}, {1.6994116628998401`,
      2.504396134799764}}], 
    ArrowBox[{{
     0.1788854381999831, -1.2074767078498865`}, {-1.0285912696499033`, \
-2.8398063314247333`}}], 
    ArrowBox[{{
     0.22360679774997888`, -1.118033988749895}, {-0.894427190999916, \
-2.5714781741247585`}}], 
    ArrowBox[{{
     0.26832815729997467`, -1.0285912696499033`}, {-0.7602631123499286, \
-2.3031500168247834`}}], 
    ArrowBox[{{
     0.3130495168499705, -0.9391485505499115}, {-0.626099033699941, \
-2.0348218595248087`}}], 
    ArrowBox[{{
     0.3577708763999663, -0.84970583144992}, {-0.49193495504995366`, \
-1.7664937022248335`}}], 
    ArrowBox[{{
     0.4024922359499621, -0.7602631123499284}, {-0.3577708763999663, \
-1.498165544924859}}], 
    ArrowBox[{{
     0.44721359549995787`, -0.6708203932499368}, {-0.22360679774997894`, \
-1.229837387624884}}], 
    ArrowBox[{{
     0.49193495504995366`, -0.5813776741499452}, {-0.08944271909999157, \
-0.9615092303249095}}], 
    ArrowBox[{{0.5366563145999494, -0.49193495504995366`}, {
     0.04472135954999579, -0.6931810730249346}}], 
    ArrowBox[{{0.5813776741499452, -0.4024922359499621}, {
     0.17888543819998315`, -0.4248529157249601}}], 
    ArrowBox[{{0.626099033699941, -0.3130495168499705}, {
     0.3130495168499705, -0.15652475842498526`}}], 
    ArrowBox[{{0.6708203932499368, -0.22360679774997883`}, {0.447213595499958,
      0.1118033988749898}}], 
    ArrowBox[{{0.7155417527999327, -0.13416407864998717`}, {
     0.5813776741499456, 0.3801315561749648}}], 
    ArrowBox[{{0.7602631123499284, -0.04472135954999573}, {0.7155417527999326,
      0.648459713474939}}], 
    ArrowBox[{{0.8049844718999243, 0.044721359549995954`}, {
     0.8497058314499202, 0.9167878707749142}}], 
    ArrowBox[{{0.84970583144992, 0.13416407864998742`}, {0.9838699100999073, 
     1.1851160280748885`}}], 
    ArrowBox[{{0.8944271909999157, 0.22360679774997905`}, {1.118033988749895, 
     1.4534441853748634`}}], 
    ArrowBox[{{0.9391485505499116, 0.31304951684997073`}, {
     1.2521980673998825`, 1.7217723426748384`}}], 
    ArrowBox[{{0.9838699100999073, 0.4024922359499622}, {1.3863621460498696`, 
     1.9901004999748129`}}], 
    ArrowBox[{{1.0285912696499033`, 0.4919349550499539}, {1.5205262246998572`,
      2.258428657274788}}], 
    ArrowBox[{{1.073312629199899, 0.5813776741499453}, {1.6546903033498443`, 
     2.526756814574762}}], 
    ArrowBox[{{
     0.08944271909999152, -1.1627553482998905`}, {-1.073312629199899, \
-2.817445651649735}}], 
    ArrowBox[{{
     0.1341640786499873, -1.073312629199899}, {-0.9391485505499115, \
-2.54911749434976}}], 
    ArrowBox[{{
     0.1788854381999831, -0.9838699100999074}, {-0.8049844718999244, \
-2.2807893370497854`}}], 
    ArrowBox[{{
     0.22360679774997894`, -0.8944271909999157}, {-0.6708203932499368, \
-2.0124611797498106`}}], 
    ArrowBox[{{
     0.2683281572999747, -0.8049844718999242}, {-0.5366563145999494, \
-1.744133022449836}}], 
    ArrowBox[{{
     0.3130495168499705, -0.7155417527999326}, {-0.4024922359499621, \
-1.475804865149861}}], 
    ArrowBox[{{
     0.3577708763999663, -0.626099033699941}, {-0.2683281572999747, \
-1.2074767078498863`}}], 
    ArrowBox[{{
     0.4024922359499621, -0.5366563145999494}, {-0.13416407864998736`, \
-0.9391485505499115}}], 
    ArrowBox[{{0.44721359549995787`, -0.44721359549995787`}, {
     0., -0.6708203932499368}}], 
    ArrowBox[{{0.49193495504995366`, -0.3577708763999663}, {
     0.13416407864998736`, -0.4024922359499621}}], 
    ArrowBox[{{0.5366563145999494, -0.2683281572999747}, {
     0.2683281572999747, -0.13416407864998736`}}], 
    ArrowBox[{{0.5813776741499452, -0.17888543819998304`}, {
     0.4024922359499622, 0.13416407864998764`}}], 
    ArrowBox[{{0.6260990336999411, -0.08944271909999138}, {0.5366563145999498,
      0.4024922359499627}}], 
    ArrowBox[{{0.6708203932499368, 5.551115123125783*^-17}, {
     0.6708203932499368, 0.6708203932499369}}], 
    ArrowBox[{{0.7155417527999327, 0.08944271909999174}, {0.8049844718999244, 
     0.9391485505499121}}], 
    ArrowBox[{{0.7602631123499284, 0.1788854381999832}, {0.9391485505499115, 
     1.2074767078498865`}}], 
    ArrowBox[{{0.8049844718999242, 0.26832815729997483`}, {1.073312629199899, 
     1.4758048651498612`}}], 
    ArrowBox[{{0.8497058314499201, 0.3577708763999665}, {1.2074767078498865`, 
     1.7441330224498364`}}], 
    ArrowBox[{{0.8944271909999157, 0.447213595499958}, {1.3416407864998736`, 
     2.0124611797498106`}}], 
    ArrowBox[{{0.9391485505499116, 0.5366563145999497}, {1.4758048651498612`, 
     2.280789337049786}}], 
    ArrowBox[{{0.9838699100999073, 0.6260990336999411}, {1.6099689437998483`, 
     2.54911749434976}}], 
    ArrowBox[{{
     0., -1.118033988749895}, {-1.118033988749895, -2.7950849718747373`}}], 
    ArrowBox[{{
     0.04472135954999579, -1.0285912696499033`}, {-0.9838699100999075, \
-2.526756814574762}}], 
    ArrowBox[{{
     0.08944271909999157, -0.9391485505499116}, {-0.8497058314499201, \
-2.2584286572747874`}}], 
    ArrowBox[{{
     0.13416407864998742`, -0.84970583144992}, {-0.7155417527999326, \
-1.9901004999748124`}}], 
    ArrowBox[{{
     0.1788854381999832, -0.7602631123499284}, {-0.5813776741499452, \
-1.721772342674838}}], 
    ArrowBox[{{
     0.22360679774997896`, -0.6708203932499369}, {-0.447213595499958, \
-1.4534441853748634`}}], 
    ArrowBox[{{
     0.26832815729997483`, -0.5813776741499452}, {-0.3130495168499704, \
-1.1851160280748885`}}], 
    ArrowBox[{{
     0.31304951684997057`, -0.49193495504995366`}, {-0.1788854381999831, \
-0.9167878707749135}}], 
    ArrowBox[{{
     0.35777087639996635`, -0.4024922359499621}, {-0.04472135954999573, \
-0.648459713474939}}], 
    ArrowBox[{{0.40249223594996214`, -0.3130495168499705}, {
     0.08944271909999163, -0.38013155617496414`}}], 
    ArrowBox[{{0.4472135954999579, -0.22360679774997896`}, {
     0.22360679774997896`, -0.11180339887498952`}}], 
    ArrowBox[{{0.49193495504995377`, -0.1341640786499873}, {
     0.35777087639996646`, 0.15652475842498548`}}], 
    ArrowBox[{{0.5366563145999496, -0.04472135954999562}, {
     0.49193495504995394`, 0.42485291572496053`}}], 
    ArrowBox[{{0.5813776741499453, 0.044721359549995815`}, {
     0.6260990336999411, 0.6931810730249349}}], 
    ArrowBox[{{0.6260990336999411, 0.1341640786499875}, {0.7602631123499286, 
     0.9615092303249099}}], 
    ArrowBox[{{0.6708203932499369, 0.22360679774997896`}, {0.8944271909999159,
      1.2298373876248845`}}], 
    ArrowBox[{{0.7155417527999327, 0.3130495168499706}, {1.0285912696499033`, 
     1.4981655449248592`}}], 
    ArrowBox[{{0.7602631123499286, 0.4024922359499623}, {1.162755348299891, 
     1.7664937022248344`}}], 
    ArrowBox[{{0.8049844718999243, 0.49193495504995377`}, {1.296919426949878, 
     2.0348218595248087`}}], 
    ArrowBox[{{0.8497058314499202, 0.5813776741499455}, {1.4310835055998656`, 
     2.303150016824784}}], 
    ArrowBox[{{0.8944271909999159, 0.6708203932499369}, {1.5652475842498528`, 
     2.571478174124758}}], 
    ArrowBox[{{-0.08944271909999169, -1.073312629199899}, \
{-1.1627553482998905`, -2.772724292099739}}], 
    ArrowBox[{{-0.0447213595499959, -0.9838699100999074}, \
{-1.0285912696499033`, -2.5043961347997645`}}], 
    ArrowBox[{{-1.1102230246251565`*^-16, -0.8944271909999159}, \
{-0.894427190999916, -2.23606797749979}}], 
    ArrowBox[{{
     0.04472135954999573, -0.8049844718999242}, {-0.7602631123499284, \
-1.9677398201998149`}}], 
    ArrowBox[{{
     0.08944271909999152, -0.7155417527999326}, {-0.626099033699941, \
-1.69941166289984}}], 
    ArrowBox[{{
     0.13416407864998728`, -0.626099033699941}, {-0.49193495504995377`, \
-1.4310835055998652`}}], 
    ArrowBox[{{
     0.17888543819998312`, -0.5366563145999493}, {-0.3577708763999662, \
-1.1627553482998902`}}], 
    ArrowBox[{{
     0.22360679774997888`, -0.44721359549995787`}, {-0.223606797749979, \
-0.8944271909999157}}], 
    ArrowBox[{{
     0.26832815729997467`, -0.35777087639996624`}, {-0.08944271909999157, \
-0.626099033699941}}], 
    ArrowBox[{{0.31304951684997046`, -0.26832815729997467`}, {
     0.04472135954999579, -0.35777087639996624`}}], 
    ArrowBox[{{0.35777087639996624`, -0.17888543819998312`}, {
     0.17888543819998312`, -0.08944271909999157}}], 
    ArrowBox[{{0.4024922359499621, -0.08944271909999145}, {0.3130495168499706,
      0.17888543819998345`}}], 
    ArrowBox[{{0.4472135954999579, 2.220446049250313*^-16}, {
     0.44721359549995815`, 0.4472135954999585}}], 
    ArrowBox[{{0.49193495504995366`, 0.08944271909999166}, {
     0.5813776741499453, 0.7155417527999328}}], 
    ArrowBox[{{0.5366563145999494, 0.17888543819998334`}, {0.7155417527999328,
      0.9838699100999078}}], 
    ArrowBox[{{0.5813776741499452, 0.26832815729997483`}, {0.8497058314499201,
      1.2521980673998823`}}], 
    ArrowBox[{{0.626099033699941, 0.3577708763999664}, {0.9838699100999074, 
     1.520526224699857}}], 
    ArrowBox[{{0.6708203932499368, 0.4472135954999581}, {1.118033988749895, 
     1.7888543819998322`}}], 
    ArrowBox[{{0.7155417527999326, 0.5366563145999496}, {1.252198067399882, 
     2.0571825392998067`}}], 
    ArrowBox[{{0.7602631123499284, 0.6260990336999412}, {1.3863621460498696`, 
     2.325510696599782}}], 
    ArrowBox[{{0.8049844718999242, 0.7155417527999327}, {1.5205262246998568`, 
     2.593838853899756}}], 
    ArrowBox[{{-0.1788854381999832, -1.0285912696499033`}, \
{-1.2074767078498865`, -2.7503636123247412`}}], 
    ArrowBox[{{-0.13416407864998742`, -0.9391485505499116}, \
{-1.0733126291998991`, -2.4820354550247665`}}], 
    ArrowBox[{{-0.08944271909999163, -0.8497058314499201}, \
{-0.9391485505499118, -2.213707297724792}}], 
    ArrowBox[{{-0.04472135954999579, -0.7602631123499284}, \
{-0.8049844718999242, -1.9453791404248169`}}], 
    ArrowBox[{{
     0., -0.6708203932499368}, {-0.6708203932499368, -1.677050983124842}}], 
    ArrowBox[{{
     0.04472135954999576, -0.5813776741499452}, {-0.5366563145999494, \
-1.4087228258248674`}}], 
    ArrowBox[{{
     0.0894427190999916, -0.4919349550499536}, {-0.402492235949962, \
-1.1403946685248925`}}], 
    ArrowBox[{{
     0.13416407864998736`, -0.4024922359499621}, {-0.2683281572999747, \
-0.872066511224918}}], 
    ArrowBox[{{
     0.17888543819998315`, -0.3130495168499705}, {-0.13416407864998736`, \
-0.6037383539249431}}], 
    ArrowBox[{{0.22360679774997894`, -0.22360679774997894`}, {
     0., -0.3354101966249684}}], 
    ArrowBox[{{0.2683281572999747, -0.13416407864998736`}, {
     0.13416407864998736`, -0.06708203932499368}}], 
    ArrowBox[{{0.31304951684997057`, -0.04472135954999569}, {
     0.2683281572999749, 0.20124611797498135`}}], 
    ArrowBox[{{0.3577708763999664, 0.04472135954999598}, {0.4024922359499624, 
     0.4695742752749564}}], 
    ArrowBox[{{0.4024922359499621, 0.13416407864998742`}, {0.5366563145999494,
      0.7379024325749306}}], 
    ArrowBox[{{0.447213595499958, 0.2236067977499791}, {0.670820393249937, 
     1.0062305898749058`}}], 
    ArrowBox[{{0.49193495504995366`, 0.31304951684997057`}, {
     0.8049844718999242, 1.27455874717488}}], 
    ArrowBox[{{0.5366563145999494, 0.4024922359499622}, {0.9391485505499116, 
     1.542886904474855}}], 
    ArrowBox[{{0.5813776741499453, 0.4919349550499539}, {1.0733126291998993`, 
     1.81121506177483}}], 
    ArrowBox[{{0.626099033699941, 0.5813776741499453}, {1.2074767078498865`, 
     2.0795432190748047`}}], 
    ArrowBox[{{0.6708203932499369, 0.670820393249937}, {1.341640786499874, 
     2.3478713763747794`}}], 
    ArrowBox[{{0.7155417527999326, 0.7602631123499285}, {1.4758048651498612`, 
     2.616199533674754}}], 
    ArrowBox[{{-0.26832815729997483`, -0.9838699100999074}, \
{-1.2521980673998823`, -2.7280029325497432`}}], 
    ArrowBox[{{-0.22360679774997902`, -0.8944271909999159}, \
{-1.118033988749895, -2.459674775249769}}], 
    ArrowBox[{{-0.17888543819998323`, -0.8049844718999243}, \
{-0.9838699100999075, -2.191346617949794}}], 
    ArrowBox[{{-0.1341640786499874, -0.7155417527999326}, {-0.84970583144992, \
-1.9230184606498189`}}], 
    ArrowBox[{{-0.0894427190999916, -0.626099033699941}, \
{-0.7155417527999326, -1.6546903033498441`}}], 
    ArrowBox[{{-0.04472135954999584, -0.5366563145999494}, \
{-0.5813776741499452, -1.3863621460498694`}}], 
    ArrowBox[{{
     0., -0.4472135954999578}, {-0.4472135954999578, -1.1180339887498945`}}], 
    ArrowBox[{{
     0.04472135954999576, -0.3577708763999663}, {-0.3130495168499705, \
-0.84970583144992}}], 
    ArrowBox[{{
     0.08944271909999156, -0.26832815729997467`}, {-0.1788854381999831, \
-0.5813776741499451}}], 
    ArrowBox[{{
     0.13416407864998733`, -0.17888543819998312`}, {-0.04472135954999579, \
-0.3130495168499705}}], 
    ArrowBox[{{0.17888543819998312`, -0.08944271909999156}, {
     0.08944271909999156, -0.04472135954999579}}], 
    ArrowBox[{{0.22360679774997896`, 1.1102230246251565`*^-16}, {
     0.22360679774997907`, 0.22360679774997924`}}], 
    ArrowBox[{{0.2683281572999748, 0.08944271909999178}, {0.3577708763999666, 
     0.4919349550499542}}], 
    ArrowBox[{{0.3130495168499705, 0.1788854381999832}, {0.4919349550499537, 
     0.7602631123499285}}], 
    ArrowBox[{{0.35777087639996635`, 0.2683281572999749}, {0.6260990336999412,
      1.0285912696499036`}}], 
    ArrowBox[{{0.4024922359499621, 0.35777087639996635`}, {0.7602631123499284,
      1.296919426949878}}], 
    ArrowBox[{{0.44721359549995787`, 0.447213595499958}, {0.8944271909999159, 
     1.5652475842498528`}}], 
    ArrowBox[{{0.49193495504995377`, 0.5366563145999497}, {
     1.0285912696499033`, 1.833575741549828}}], 
    ArrowBox[{{0.5366563145999494, 0.6260990336999411}, {1.1627553482998905`, 
     2.101903898849802}}], 
    ArrowBox[{{0.5813776741499453, 0.7155417527999328}, {1.296919426949878, 
     2.3702320561497774`}}], 
    ArrowBox[{{0.626099033699941, 0.8049844718999243}, {1.4310835055998652`, 
     2.6385602134497517`}}], 
    ArrowBox[{{-0.35777087639996635`, -0.9391485505499116}, \
{-1.296919426949878, -2.7056422527747452`}}], 
    ArrowBox[{{-0.31304951684997057`, -0.8497058314499201}, \
{-1.1627553482998907`, -2.437314095474771}}], 
    ArrowBox[{{-0.2683281572999748, -0.7602631123499285}, \
{-1.0285912696499033`, -2.1689859381747962`}}], 
    ArrowBox[{{-0.22360679774997894`, -0.6708203932499368}, \
{-0.8944271909999157, -1.9006577808748208`}}], 
    ArrowBox[{{-0.17888543819998315`, -0.5813776741499452}, \
{-0.7602631123499284, -1.6323296235748463`}}], 
    ArrowBox[{{-0.13416407864998742`, -0.4919349550499537}, \
{-0.6260990336999411, -1.3640014662748716`}}], 
    ArrowBox[{{-0.08944271909999156, -0.40249223594996203`}, \
{-0.4919349550499536, -1.0956733089748967`}}], 
    ArrowBox[{{-0.0447213595499958, -0.3130495168499705}, \
{-0.3577708763999663, -0.8273451516749221}}], 
    ArrowBox[{{
     0., -0.2236067977499789}, {-0.2236067977499789, -0.5590169943749472}}], 
    ArrowBox[{{
     0.04472135954999578, -0.13416407864998733`}, {-0.08944271909999155, \
-0.29068883707497256`}}], 
    ArrowBox[{{0.08944271909999156, -0.04472135954999578}, {
     0.04472135954999578, -0.022360679774997894`}}], 
    ArrowBox[{{0.1341640786499874, 0.04472135954999589}, {0.1788854381999833, 
     0.2459674775249771}}], 
    ArrowBox[{{0.17888543819998323`, 0.13416407864998756`}, {
     0.3130495168499708, 0.5142956348249521}}], 
    ArrowBox[{{0.22360679774997894`, 0.223606797749979}, {0.4472135954999579, 
     0.7826237921249264}}], 
    ArrowBox[{{0.2683281572999748, 0.3130495168499707}, {0.5813776741499455, 
     1.0509519494249016`}}], 
    ArrowBox[{{0.3130495168499705, 0.40249223594996214`}, {0.7155417527999326,
      1.3192801067248758`}}], 
    ArrowBox[{{0.35777087639996635`, 0.49193495504995377`}, {
     0.8497058314499202, 1.5876082640248508`}}], 
    ArrowBox[{{0.4024922359499622, 0.5813776741499455}, {0.9838699100999077, 
     1.855936421324826}}], 
    ArrowBox[{{0.4472135954999579, 0.6708203932499369}, {1.118033988749895, 
     2.1242645786248002`}}], 
    ArrowBox[{{0.49193495504995377`, 0.7602631123499286}, {
     1.2521980673998825`, 2.3925927359247754`}}], 
    ArrowBox[{{0.5366563145999494, 0.8497058314499201}, {1.3863621460498696`, 
     2.6609208932247497`}}], 
    ArrowBox[{{-0.4472135954999579, -0.8944271909999159}, \
{-1.3416407864998738`, -2.6832815729997477`}}], 
    ArrowBox[{{-0.40249223594996214`, -0.8049844718999243}, \
{-1.2074767078498865`, -2.414953415699773}}], 
    ArrowBox[{{-0.35777087639996635`, -0.7155417527999327}, \
{-1.0733126291998991`, -2.1466252583997982`}}], 
    ArrowBox[{{-0.3130495168499705, -0.626099033699941}, \
{-0.9391485505499115, -1.878297101099823}}], 
    ArrowBox[{{-0.2683281572999747, -0.5366563145999494}, \
{-0.8049844718999242, -1.6099689437998483`}}], 
    ArrowBox[{{-0.22360679774997896`, -0.4472135954999579}, \
{-0.6708203932499369, -1.3416407864998738`}}], 
    ArrowBox[{{-0.17888543819998312`, -0.35777087639996624`}, \
{-0.5366563145999493, -1.0733126291998987`}}], 
    ArrowBox[{{-0.13416407864998736`, -0.2683281572999747}, \
{-0.4024922359499621, -0.8049844718999242}}], 
    ArrowBox[{{-0.08944271909999156, -0.17888543819998312`}, \
{-0.26832815729997467`, -0.5366563145999493}}], 
    ArrowBox[{{-0.04472135954999578, -0.08944271909999156}, \
{-0.13416407864998733`, -0.26832815729997467`}}], 
    ArrowBox[{{0., 0.}, {0., 0.}}], 
    ArrowBox[{{0.044721359549995836`, 0.08944271909999167}, {
     0.1341640786499875, 0.268328157299975}}], 
    ArrowBox[{{0.08944271909999167, 0.17888543819998334`}, {0.268328157299975,
      0.53665631459995}}], 
    ArrowBox[{{0.1341640786499874, 0.2683281572999748}, {0.4024922359499622, 
     0.8049844718999243}}], 
    ArrowBox[{{0.17888543819998323`, 0.35777087639996646`}, {
     0.5366563145999497, 1.0733126291998993`}}], 
    ArrowBox[{{0.22360679774997896`, 0.4472135954999579}, {0.6708203932499369,
      1.3416407864998738`}}], 
    ArrowBox[{{0.2683281572999748, 0.5366563145999496}, {0.8049844718999244, 
     1.6099689437998486`}}], 
    ArrowBox[{{0.3130495168499706, 0.6260990336999412}, {0.9391485505499119, 
     1.878297101099824}}], 
    ArrowBox[{{0.35777087639996635`, 0.7155417527999327}, {
     1.0733126291998991`, 2.1466252583997982`}}], 
    ArrowBox[{{0.4024922359499622, 0.8049844718999244}, {1.2074767078498865`, 
     2.4149534156997734`}}], 
    ArrowBox[{{0.4472135954999579, 0.8944271909999159}, {1.3416407864998738`, 
     2.6832815729997477`}}], 
    ArrowBox[{{-0.5366563145999496, -0.8497058314499201}, \
{-1.3863621460498696`, -2.6609208932247497`}}], 
    ArrowBox[{{-0.4919349550499538, -0.7602631123499285}, \
{-1.2521980673998823`, -2.392592735924775}}], 
    ArrowBox[{{-0.44721359549995804`, -0.6708203932499369}, \
{-1.118033988749895, -2.1242645786248002`}}], 
    ArrowBox[{{-0.4024922359499622, -0.5813776741499452}, \
{-0.9838699100999074, -1.8559364213248255`}}], 
    ArrowBox[{{-0.3577708763999664, -0.4919349550499536}, {-0.84970583144992, \
-1.5876082640248503`}}], 
    ArrowBox[{{-0.3130495168499706, -0.4024922359499621}, \
{-0.7155417527999327, -1.319280106724876}}], 
    ArrowBox[{{-0.2683281572999748, -0.3130495168499704}, \
{-0.5813776741499452, -1.0509519494249007`}}], 
    ArrowBox[{{-0.22360679774997905`, -0.22360679774997888`}, \
{-0.4472135954999579, -0.7826237921249263}}], 
    ArrowBox[{{-0.17888543819998323`, -0.13416407864998728`}, \
{-0.3130495168499705, -0.5142956348249514}}], 
    ArrowBox[{{-0.13416407864998744`, -0.044721359549995725`}, \
{-0.17888543819998318`, -0.24596747752497677`}}], 
    ArrowBox[{{-0.08944271909999167, 
     0.044721359549995836`}, {-0.044721359549995836`, 0.02236067977499792}}], 
    ArrowBox[{{-0.044721359549995836`, 0.1341640786499875}, {
     0.08944271909999166, 0.2906888370749729}}], 
    ArrowBox[{{0., 0.22360679774997919`}, {0.22360679774997919`, 
     0.559016994374948}}], 
    ArrowBox[{{0.04472135954999572, 0.3130495168499706}, {
     0.35777087639996635`, 0.8273451516749223}}], 
    ArrowBox[{{0.08944271909999156, 0.4024922359499623}, {0.4919349550499539, 
     1.0956733089748973`}}], 
    ArrowBox[{{0.1341640786499873, 0.49193495504995377`}, {0.626099033699941, 
     1.3640014662748718`}}], 
    ArrowBox[{{0.1788854381999831, 0.5813776741499453}, {0.7602631123499284, 
     1.6323296235748466`}}], 
    ArrowBox[{{0.22360679774997894`, 0.670820393249937}, {0.894427190999916, 
     1.9006577808748215`}}], 
    ArrowBox[{{0.26832815729997467`, 0.7602631123499285}, {1.028591269649903, 
     2.168985938174796}}], 
    ArrowBox[{{0.3130495168499705, 0.8497058314499202}, {1.1627553482998907`, 
     2.437314095474771}}], 
    ArrowBox[{{0.35777087639996624`, 0.9391485505499116}, {
     1.2969194269498778`, 2.7056422527747452`}}], 
    ArrowBox[{{-0.6260990336999412, -0.8049844718999242}, \
{-1.4310835055998654`, -2.638560213449752}}], 
    ArrowBox[{{-0.5813776741499455, -0.7155417527999326}, \
{-1.296919426949878, -2.370232056149777}}], 
    ArrowBox[{{-0.5366563145999497, -0.626099033699941}, \
{-1.1627553482998907`, -2.101903898849802}}], 
    ArrowBox[{{-0.4919349550499539, -0.5366563145999493}, \
{-1.0285912696499033`, -1.8335757415498273`}}], 
    ArrowBox[{{-0.4472135954999581, -0.44721359549995776`}, \
{-0.8944271909999159, -1.5652475842498526`}}], 
    ArrowBox[{{-0.4024922359499623, -0.35777087639996624`}, \
{-0.7602631123499286, -1.296919426949878}}], 
    ArrowBox[{{-0.35777087639996646`, -0.26832815729997456`}, \
{-0.626099033699941, -1.0285912696499029`}}], 
    ArrowBox[{{-0.31304951684997073`, -0.17888543819998304`}, \
{-0.49193495504995377`, -0.7602631123499284}}], 
    ArrowBox[{{-0.2683281572999749, -0.08944271909999145}, \
{-0.35777087639996635`, -0.49193495504995355`}}], 
    ArrowBox[{{-0.22360679774997913`, 
     1.1102230246251565`*^-16}, {-0.22360679774997902`, \
-0.22360679774997885`}}], 
    ArrowBox[{{-0.17888543819998334`, 
     0.08944271909999167}, {-0.08944271909999167, 0.04472135954999584}}], 
    ArrowBox[{{-0.1341640786499875, 0.17888543819998334`}, {
     0.04472135954999584, 0.31304951684997084`}}], 
    ArrowBox[{{-0.08944271909999167, 0.268328157299975}, {
     0.17888543819998332`, 0.5813776741499458}}], 
    ArrowBox[{{-0.044721359549995954`, 0.35777087639996646`}, {
     0.3130495168499705, 0.8497058314499202}}], 
    ArrowBox[{{-1.1102230246251565`*^-16, 0.44721359549995815`}, {
     0.44721359549995804`, 1.1180339887498953`}}], 
    ArrowBox[{{0.04472135954999562, 0.5366563145999496}, {0.5813776741499452, 
     1.3863621460498694`}}], 
    ArrowBox[{{0.08944271909999144, 0.6260990336999412}, {0.7155417527999327, 
     1.6546903033498446`}}], 
    ArrowBox[{{0.13416407864998728`, 0.7155417527999329}, {0.8497058314499202,
      1.9230184606498197`}}], 
    ArrowBox[{{0.178885438199983, 0.8049844718999244}, {0.9838699100999074, 
     2.1913466179497942`}}], 
    ArrowBox[{{0.22360679774997885`, 0.8944271909999161}, {1.118033988749895, 
     2.459674775249769}}], 
    ArrowBox[{{0.2683281572999746, 0.9838699100999075}, {1.252198067399882, 
     2.7280029325497437`}}], 
    ArrowBox[{{-0.7155417527999327, -0.7602631123499285}, \
{-1.4758048651498612`, -2.616199533674754}}], 
    ArrowBox[{{-0.6708203932499369, -0.6708203932499369}, \
{-1.3416407864998738`, -2.3478713763747794`}}], 
    ArrowBox[{{-0.6260990336999411, -0.5813776741499453}, \
{-1.2074767078498865`, -2.0795432190748047`}}], 
    ArrowBox[{{-0.5813776741499452, -0.49193495504995366`}, \
{-1.073312629199899, -1.8112150617748293`}}], 
    ArrowBox[{{-0.5366563145999494, -0.4024922359499621}, \
{-0.9391485505499115, -1.5428869044748548`}}], 
    ArrowBox[{{-0.49193495504995377`, -0.3130495168499705}, \
{-0.8049844718999243, -1.27455874717488}}], 
    ArrowBox[{{-0.44721359549995787`, -0.22360679774997885`}, \
{-0.6708203932499367, -1.0062305898749049`}}], 
    ArrowBox[{{-0.40249223594996214`, -0.13416407864998733`}, \
{-0.5366563145999494, -0.7379024325749305}}], 
    ArrowBox[{{-0.35777087639996635`, -0.04472135954999573}, \
{-0.4024922359499621, -0.46957427527495565`}}], 
    ArrowBox[{{-0.31304951684997057`, 
     0.04472135954999583}, {-0.2683281572999747, -0.201246117974981}}], 
    ArrowBox[{{-0.2683281572999748, 0.1341640786499874}, {-0.1341640786499874,
      0.06708203932499368}}], 
    ArrowBox[{{-0.22360679774997894`, 0.22360679774997905`}, {
     1.1102230246251565`*^-16, 0.33541019662496874`}}], 
    ArrowBox[{{-0.1788854381999831, 0.31304951684997073`}, {
     0.13416407864998764`, 0.6037383539249437}}], 
    ArrowBox[{{-0.1341640786499874, 0.4024922359499622}, {
     0.26832815729997483`, 0.8720665112249182}}], 
    ArrowBox[{{-0.08944271909999155, 0.4919349550499539}, {0.4024922359499623,
      1.1403946685248931`}}], 
    ArrowBox[{{-0.044721359549995815`, 0.5813776741499453}, {
     0.5366563145999496, 1.4087228258248676`}}], 
    ArrowBox[{{0., 0.6708203932499369}, {0.6708203932499369, 
     1.6770509831248424`}}], 
    ArrowBox[{{0.04472135954999584, 0.7602631123499286}, {0.8049844718999244, 
     1.9453791404248173`}}], 
    ArrowBox[{{0.08944271909999157, 0.8497058314499201}, {0.9391485505499116, 
     2.213707297724792}}], 
    ArrowBox[{{0.13416407864998742`, 0.9391485505499118}, {
     1.0733126291998991`, 2.482035455024767}}], 
    ArrowBox[{{0.17888543819998315`, 1.0285912696499033`}, {
     1.2074767078498865`, 2.7503636123247412`}}], 
    ArrowBox[{{-0.8049844718999244, -0.7155417527999326}, \
{-1.520526224699857, -2.593838853899756}}], 
    ArrowBox[{{-0.7602631123499286, -0.626099033699941}, \
{-1.3863621460498696`, -2.325510696599781}}], 
    ArrowBox[{{-0.7155417527999328, -0.5366563145999494}, \
{-1.2521980673998823`, -2.0571825392998067`}}], 
    ArrowBox[{{-0.670820393249937, -0.44721359549995776`}, \
{-1.118033988749895, -1.7888543819998315`}}], 
    ArrowBox[{{-0.6260990336999412, -0.3577708763999662}, \
{-0.9838699100999074, -1.5205262246998568`}}], 
    ArrowBox[{{-0.5813776741499455, -0.2683281572999747}, \
{-0.8497058314499202, -1.2521980673998823`}}], 
    ArrowBox[{{-0.5366563145999496, -0.178885438199983}, \
{-0.7155417527999326, -0.9838699100999071}}], 
    ArrowBox[{{-0.4919349550499538, -0.08944271909999149}, \
{-0.5813776741499453, -0.7155417527999326}}], 
    ArrowBox[{{-0.44721359549995804`, 
     1.1102230246251565`*^-16}, {-0.4472135954999579, \
-0.44721359549995776`}}], 
    ArrowBox[{{-0.40249223594996225`, 
     0.08944271909999167}, {-0.31304951684997057`, -0.17888543819998307`}}], 
    ArrowBox[{{-0.35777087639996646`, 
     0.17888543819998323`}, {-0.17888543819998323`, 0.08944271909999163}}], 
    ArrowBox[{{-0.3130495168499706, 
     0.2683281572999749}, {-0.04472135954999573, 0.35777087639996663`}}], 
    ArrowBox[{{-0.2683281572999748, 0.3577708763999666}, {0.0894427190999918, 
     0.6260990336999417}}], 
    ArrowBox[{{-0.22360679774997907`, 0.447213595499958}, {0.2236067977499789,
      0.8944271909999159}}], 
    ArrowBox[{{-0.17888543819998323`, 0.5366563145999497}, {
     0.3577708763999664, 1.162755348299891}}], 
    ArrowBox[{{-0.1341640786499875, 0.6260990336999411}, {
     0.49193495504995366`, 1.4310835055998652`}}], 
    ArrowBox[{{-0.08944271909999169, 0.7155417527999328}, {0.6260990336999411,
      1.6994116628998404`}}], 
    ArrowBox[{{-0.04472135954999584, 0.8049844718999245}, {0.7602631123499286,
      1.9677398201998153`}}], 
    ArrowBox[{{-1.1102230246251565`*^-16, 0.894427190999916}, {
     0.8944271909999159, 2.23606797749979}}], 
    ArrowBox[{{0.04472135954999573, 0.9838699100999077}, {1.0285912696499033`,
      2.5043961347997645`}}], 
    ArrowBox[{{0.08944271909999146, 1.0733126291998991`}, {
     1.1627553482998905`, 2.7727242920997393`}}], 
    ArrowBox[{{-0.8944271909999159, -0.6708203932499369}, \
{-1.5652475842498528`, -2.571478174124758}}], 
    ArrowBox[{{-0.8497058314499201, -0.5813776741499453}, \
{-1.4310835055998654`, -2.3031500168247834`}}], 
    ArrowBox[{{-0.8049844718999243, -0.49193495504995377`}, \
{-1.296919426949878, -2.0348218595248087`}}], 
    ArrowBox[{{-0.7602631123499284, -0.4024922359499621}, \
{-1.1627553482998905`, -1.7664937022248337`}}], 
    ArrowBox[{{-0.7155417527999326, -0.3130495168499705}, \
{-1.028591269649903, -1.4981655449248588`}}], 
    ArrowBox[{{-0.6708203932499369, -0.22360679774997896`}, \
{-0.8944271909999159, -1.2298373876248845`}}], 
    ArrowBox[{{-0.626099033699941, -0.13416407864998728`}, \
{-0.7602631123499283, -0.9615092303249092}}], 
    ArrowBox[{{-0.5813776741499452, -0.04472135954999576}, \
{-0.626099033699941, -0.6931810730249346}}], 
    ArrowBox[{{-0.5366563145999494, 
     0.04472135954999584}, {-0.4919349550499536, -0.42485291572495987`}}], 
    ArrowBox[{{-0.4919349550499537, 
     0.13416407864998742`}, {-0.3577708763999663, -0.1565247584249852}}], 
    ArrowBox[{{-0.4472135954999579, 
     0.22360679774997896`}, {-0.22360679774997896`, 0.11180339887498952`}}], 
    ArrowBox[{{-0.4024922359499621, 
     0.3130495168499706}, {-0.08944271909999146, 0.3801315561749645}}], 
    ArrowBox[{{-0.35777087639996624`, 0.4024922359499623}, {
     0.044721359549996065`, 0.6484597134749395}}], 
    ArrowBox[{{-0.3130495168499705, 0.49193495504995377`}, {
     0.17888543819998326`, 0.916787870774914}}], 
    ArrowBox[{{-0.2683281572999747, 0.5813776741499455}, {
     0.31304951684997073`, 1.185116028074889}}], 
    ArrowBox[{{-0.22360679774997896`, 0.6708203932499369}, {0.447213595499958,
      1.4534441853748634`}}], 
    ArrowBox[{{-0.17888543819998315`, 0.7602631123499285}, {
     0.5813776741499453, 1.7217723426748381`}}], 
    ArrowBox[{{-0.1341640786499873, 0.8497058314499202}, {0.7155417527999328, 
     1.9901004999748133`}}], 
    ArrowBox[{{-0.08944271909999157, 0.9391485505499116}, {0.8497058314499201,
      2.2584286572747874`}}], 
    ArrowBox[{{-0.04472135954999573, 1.0285912696499033`}, {
     0.9838699100999075, 2.5267568145747625`}}], 
    ArrowBox[{{0., 1.118033988749895}, {1.118033988749895, 
     2.7950849718747373`}}], 
    ArrowBox[{{-0.9838699100999075, -0.626099033699941}, \
{-1.6099689437998486`, -2.54911749434976}}], 
    ArrowBox[{{-0.9391485505499118, -0.5366563145999494}, \
{-1.4758048651498612`, -2.2807893370497854`}}], 
    ArrowBox[{{-0.894427190999916, -0.4472135954999579}, \
{-1.3416407864998738`, -2.0124611797498106`}}], 
    ArrowBox[{{-0.8497058314499201, -0.35777087639996624`}, \
{-1.2074767078498863`, -1.7441330224498357`}}], 
    ArrowBox[{{-0.8049844718999243, -0.26832815729997467`}, \
{-1.073312629199899, -1.475804865149861}}], 
    ArrowBox[{{-0.7602631123499285, -0.17888543819998315`}, \
{-0.9391485505499116, -1.2074767078498865`}}], 
    ArrowBox[{{-0.7155417527999327, -0.08944271909999146}, \
{-0.8049844718999242, -0.9391485505499113}}], 
    ArrowBox[{{-0.6708203932499369, 
     5.551115123125783*^-17}, {-0.6708203932499368, -0.6708203932499368}}], 
    ArrowBox[{{-0.6260990336999411, 
     0.08944271909999166}, {-0.5366563145999494, -0.402492235949962}}], 
    ArrowBox[{{-0.5813776741499453, 
     0.1788854381999832}, {-0.40249223594996214`, -0.13416407864998736`}}], 
    ArrowBox[{{-0.5366563145999496, 0.2683281572999748}, {-0.2683281572999748,
      0.13416407864998736`}}], 
    ArrowBox[{{-0.4919349550499537, 
     0.35777087639996646`}, {-0.13416407864998725`, 0.4024922359499625}}], 
    ArrowBox[{{-0.44721359549995787`, 0.4472135954999581}, {
     2.220446049250313*^-16, 0.6708203932499375}}], 
    ArrowBox[{{-0.4024922359499622, 0.5366563145999496}, {
     0.13416407864998736`, 0.9391485505499116}}], 
    ArrowBox[{{-0.3577708763999663, 0.6260990336999412}, {
     0.26832815729997495`, 1.207476707849887}}], 
    ArrowBox[{{-0.3130495168499706, 0.7155417527999327}, {0.4024922359499621, 
     1.4758048651498612`}}], 
    ArrowBox[{{-0.2683281572999748, 0.8049844718999244}, {0.5366563145999497, 
     1.7441330224498364`}}], 
    ArrowBox[{{-0.22360679774997894`, 0.894427190999916}, {0.670820393249937, 
     2.0124611797498106`}}], 
    ArrowBox[{{-0.1788854381999832, 0.9838699100999075}, {0.8049844718999244, 
     2.280789337049786}}], 
    ArrowBox[{{-0.13416407864998736`, 1.0733126291998991`}, {
     0.9391485505499118, 2.54911749434976}}], 
    ArrowBox[{{-0.08944271909999163, 1.1627553482998907`}, {
     1.0733126291998991`, 2.8174456516497353`}}], 
    ArrowBox[{{-1.0733126291998991`, -0.5813776741499452}, \
{-1.6546903033498443`, -2.526756814574762}}], 
    ArrowBox[{{-1.0285912696499033`, -0.49193495504995366`}, \
{-1.520526224699857, -2.2584286572747874`}}], 
    ArrowBox[{{-0.9838699100999075, -0.4024922359499621}, \
{-1.3863621460498696`, -1.9901004999748129`}}], 
    ArrowBox[{{-0.9391485505499118, -0.3130495168499704}, \
{-1.252198067399882, -1.7217723426748377`}}], 
    ArrowBox[{{-0.894427190999916, -0.22360679774997883`}, \
{-1.118033988749895, -1.453444185374863}}], 
    ArrowBox[{{-0.8497058314499202, -0.1341640786499873}, \
{-0.9838699100999075, -1.1851160280748885`}}], 
    ArrowBox[{{-0.8049844718999244, -0.04472135954999562}, \
{-0.84970583144992, -0.9167878707749134}}], 
    ArrowBox[{{-0.7602631123499286, 
     0.0447213595499959}, {-0.7155417527999327, -0.6484597134749388}}], 
    ArrowBox[{{-0.7155417527999328, 
     0.1341640786499875}, {-0.5813776741499453, -0.3801315561749641}}], 
    ArrowBox[{{-0.670820393249937, 
     0.22360679774997905`}, {-0.447213595499958, -0.11180339887498936`}}], 
    ArrowBox[{{-0.6260990336999412, 0.3130495168499706}, {-0.3130495168499706,
      0.15652475842498537`}}], 
    ArrowBox[{{-0.5813776741499455, 
     0.4024922359499623}, {-0.17888543819998315`, 0.4248529157249603}}], 
    ArrowBox[{{-0.5366563145999496, 
     0.491934955049954}, {-0.044721359549995565`, 0.6931810730249354}}], 
    ArrowBox[{{-0.4919349550499539, 0.5813776741499455}, {0.08944271909999157,
      0.9615092303249098}}], 
    ArrowBox[{{-0.447213595499958, 0.670820393249937}, {0.22360679774997905`, 
     1.2298373876248845`}}], 
    ArrowBox[{{-0.4024922359499623, 0.7602631123499286}, {0.3577708763999663, 
     1.4981655449248592`}}], 
    ArrowBox[{{-0.35777087639996646`, 0.8497058314499202}, {
     0.4919349550499537, 1.7664937022248342`}}], 
    ArrowBox[{{-0.3130495168499706, 0.9391485505499119}, {0.6260990336999412, 
     2.034821859524809}}], 
    ArrowBox[{{-0.2683281572999749, 1.0285912696499033`}, {0.7602631123499284,
      2.3031500168247834`}}], 
    ArrowBox[{{-0.22360679774997905`, 1.118033988749895}, {0.8944271909999159,
      2.571478174124758}}], 
    ArrowBox[{{-0.17888543819998332`, 1.2074767078498865`}, {
     1.028591269649903, 2.8398063314247333`}}], 
    ArrowBox[{{-1.1627553482998907`, -0.5366563145999494}, \
{-1.6994116628998401`, -2.504396134799764}}], 
    ArrowBox[{{-1.118033988749895, -0.4472135954999579}, \
{-1.5652475842498528`, -2.23606797749979}}], 
    ArrowBox[{{-1.0733126291998991`, -0.35777087639996635`}, \
{-1.4310835055998654`, -1.967739820199815}}], 
    ArrowBox[{{-1.0285912696499033`, -0.26832815729997467`}, \
{-1.296919426949878, -1.69941166289984}}], 
    ArrowBox[{{-0.9838699100999074, -0.1788854381999831}, \
{-1.1627553482998905`, -1.4310835055998652`}}], 
    ArrowBox[{{-0.9391485505499116, -0.08944271909999157}, \
{-1.0285912696499033`, -1.1627553482998905`}}], 
    ArrowBox[{{-0.8944271909999159, 
     1.1102230246251565`*^-16}, {-0.8944271909999157, -0.8944271909999155}}], 
    ArrowBox[{{-0.8497058314499201, 
     0.08944271909999163}, {-0.7602631123499284, -0.626099033699941}}], 
    ArrowBox[{{-0.8049844718999243, 
     0.17888543819998323`}, {-0.626099033699941, -0.3577708763999662}}], 
    ArrowBox[{{-0.7602631123499285, 
     0.2683281572999748}, {-0.4919349550499537, -0.08944271909999157}}], 
    ArrowBox[{{-0.7155417527999327, 
     0.35777087639996635`}, {-0.35777087639996635`, 0.17888543819998315`}}], 
    ArrowBox[{{-0.6708203932499369, 
     0.44721359549995804`}, {-0.22360679774997888`, 0.4472135954999582}}], 
    ArrowBox[{{-0.626099033699941, 0.5366563145999497}, {-0.08944271909999135,
      0.715541752799933}}], 
    ArrowBox[{{-0.5813776741499453, 0.6260990336999411}, {0.04472135954999579,
      0.9838699100999074}}], 
    ArrowBox[{{-0.5366563145999494, 0.7155417527999328}, {
     0.17888543819998337`, 1.2521980673998825`}}], 
    ArrowBox[{{-0.49193495504995377`, 0.8049844718999243}, {
     0.3130495168499705, 1.5205262246998568`}}], 
    ArrowBox[{{-0.4472135954999579, 0.894427190999916}, {0.44721359549995804`,
      1.788854381999832}}], 
    ArrowBox[{{-0.4024922359499621, 0.9838699100999075}, {0.5813776741499455, 
     2.0571825392998067`}}], 
    ArrowBox[{{-0.35777087639996635`, 1.0733126291998991`}, {
     0.7155417527999328, 2.3255106965997814`}}], 
    ArrowBox[{{-0.3130495168499705, 1.1627553482998907`}, {0.8497058314499202,
      2.593838853899756}}], 
    ArrowBox[{{-0.2683281572999748, 1.2521980673998823`}, {0.9838699100999075,
      2.862167011199731}}], 
    ArrowBox[{{-1.2521980673998823`, -0.49193495504995366`}, \
{-1.744133022449836, -2.482035455024766}}], 
    ArrowBox[{{-1.2074767078498865`, -0.4024922359499621}, \
{-1.6099689437998486`, -2.213707297724792}}], 
    ArrowBox[{{-1.1627553482998907`, -0.3130495168499705}, \
{-1.4758048651498612`, -1.945379140424817}}], 
    ArrowBox[{{-1.118033988749895, -0.22360679774997883`}, \
{-1.3416407864998736`, -1.677050983124842}}], 
    ArrowBox[{{-1.0733126291998991`, -0.13416407864998725`}, \
{-1.2074767078498865`, -1.4087228258248672`}}], 
    ArrowBox[{{-1.0285912696499033`, -0.04472135954999573}, \
{-1.0733126291998991`, -1.1403946685248927`}}], 
    ArrowBox[{{-0.9838699100999075, 
     0.044721359549995954`}, {-0.9391485505499115, -0.8720665112249176}}], 
    ArrowBox[{{-0.9391485505499118, 
     0.13416407864998747`}, {-0.8049844718999243, -0.603738353924943}}], 
    ArrowBox[{{-0.894427190999916, 
     0.22360679774997907`}, {-0.6708203932499369, -0.3354101966249683}}], 
    ArrowBox[{{-0.8497058314499202, 
     0.3130495168499706}, {-0.5366563145999496, -0.06708203932499357}}], 
    ArrowBox[{{-0.8049844718999244, 0.4024922359499622}, {-0.4024922359499622,
      0.20124611797498115`}}], 
    ArrowBox[{{-0.7602631123499286, 0.4919349550499539}, {-0.2683281572999747,
      0.4695742752749561}}], 
    ArrowBox[{{-0.7155417527999327, 
     0.5813776741499456}, {-0.13416407864998714`, 0.7379024325749312}}], 
    ArrowBox[{{-0.670820393249937, 0.670820393249937}, {0., 
     1.0062305898749055`}}], 
    ArrowBox[{{-0.6260990336999411, 0.7602631123499286}, {
     0.13416407864998747`, 1.2745587471748805`}}], 
    ArrowBox[{{-0.5813776741499455, 0.8497058314499202}, {0.2683281572999747, 
     1.5428869044748552`}}], 
    ArrowBox[{{-0.5366563145999497, 0.9391485505499118}, {0.4024922359499621, 
     1.8112150617748297`}}], 
    ArrowBox[{{-0.49193495504995377`, 1.0285912696499033`}, {
     0.5366563145999496, 2.079543219074804}}], 
    ArrowBox[{{-0.44721359549995804`, 1.118033988749895}, {0.6708203932499368,
      2.3478713763747794`}}], 
    ArrowBox[{{-0.4024922359499622, 1.2074767078498865`}, {0.8049844718999243,
      2.616199533674754}}], 
    ArrowBox[{{-0.35777087639996646`, 1.296919426949878}, {0.9391485505499115,
      2.884527690974729}}], 
    ArrowBox[{{-1.3416407864998738`, -0.4472135954999579}, \
{-1.7888543819998317`, -2.459674775249769}}], 
    ArrowBox[{{-1.296919426949878, -0.35777087639996635`}, \
{-1.6546903033498443`, -2.191346617949794}}], 
    ArrowBox[{{-1.2521980673998823`, -0.2683281572999748}, \
{-1.520526224699857, -1.923018460649819}}], 
    ArrowBox[{{-1.2074767078498865`, -0.1788854381999831}, \
{-1.3863621460498696`, -1.6546903033498443`}}], 
    ArrowBox[{{-1.1627553482998905`, -0.08944271909999152}, \
{-1.252198067399882, -1.3863621460498692`}}], 
    ArrowBox[{{-1.118033988749895, 
     0.}, {-1.118033988749895, -1.118033988749895}}], 
    ArrowBox[{{-1.073312629199899, 
     0.08944271909999169}, {-0.9838699100999072, -0.8497058314499197}}], 
    ArrowBox[{{-1.0285912696499033`, 
     0.1788854381999832}, {-0.8497058314499202, -0.5813776741499453}}], 
    ArrowBox[{{-0.9838699100999074, 
     0.26832815729997483`}, {-0.7155417527999326, -0.3130495168499704}}], 
    ArrowBox[{{-0.9391485505499116, 
     0.35777087639996635`}, {-0.5813776741499452, -0.04472135954999579}}], 
    ArrowBox[{{-0.8944271909999159, 0.4472135954999579}, {-0.4472135954999579,
      0.22360679774997905`}}], 
    ArrowBox[{{-0.8497058314499201, 0.5366563145999496}, {-0.3130495168499705,
      0.49193495504995377`}}], 
    ArrowBox[{{-0.8049844718999242, 
     0.6260990336999412}, {-0.17888543819998293`, 0.760263112349929}}], 
    ArrowBox[{{-0.7602631123499285, 
     0.7155417527999327}, {-0.04472135954999579, 1.0285912696499033`}}], 
    ArrowBox[{{-0.7155417527999326, 0.8049844718999244}, {0.0894427190999918, 
     1.2969194269498785`}}], 
    ArrowBox[{{-0.6708203932499369, 0.8944271909999159}, {
     0.22360679774997894`, 1.5652475842498528`}}], 
    ArrowBox[{{-0.626099033699941, 0.9838699100999075}, {0.3577708763999665, 
     1.833575741549828}}], 
    ArrowBox[{{-0.5813776741499452, 1.0733126291998991`}, {0.4919349550499539,
      2.1019038988498027`}}], 
    ArrowBox[{{-0.5366563145999494, 1.1627553482998907`}, {0.6260990336999412,
      2.3702320561497774`}}], 
    ArrowBox[{{-0.49193495504995366`, 1.2521980673998823`}, {
     0.7602631123499286, 2.638560213449752}}], 
    ArrowBox[{{-0.4472135954999579, 1.3416407864998738`}, {0.894427190999916, 
     2.906888370749727}}]}},
  Axes->True,
  ImageSize->{496., Automatic},
  PlotRange->{{-3, 3}, {-3, 3}}]], "Output",
 CellChangeTimes->{3.469826882203639*^9}]
}, Closed]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"initVec", "=", 
   RowBox[{"{", 
    RowBox[{"1.", ",", "0."}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vecs", "=", 
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"A", ".", "#"}], "/", 
       RowBox[{"Norm", "[", 
        RowBox[{"A", ".", "#"}], "]"}]}], "&"}], ",", "initVec", ",", "20"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4672601475736303`*^9, 3.467260169650272*^9}, {
   3.467260284480137*^9, 3.467260284879469*^9}, {3.467261038858684*^9, 
   3.4672610620487947`*^9}, {3.4672611022647943`*^9, 3.467261182190789*^9}, {
   3.4672612438767757`*^9, 3.467261257048332*^9}, 3.4673206508541927`*^9, {
   3.467323333767935*^9, 3.467323393385305*^9}, {3.467323425568017*^9, 
   3.467323426107779*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Point", "[", "cpoints", "]"}], ",", "Red", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Point", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"A", ".", "#"}], "&"}], "/@", "cpoints"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Arrowheads", "[", "0.02", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "/", "6"}], ",", "0", ",", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{
              "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "/", "6"}]}]}], "]"}], ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "#1"}], "}"}], "]"}], ",", 
          "Black", ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{
            "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            RowBox[{"Mean", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "#1"}], "}"}], "]"}]}], 
           "]"}]}], "}"}], "&"}], ",", "vecs"}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.467260173939291*^9, 3.467260266037025*^9}, {
  3.467260575367304*^9, 3.467260792377851*^9}, {3.4672608440217533`*^9, 
  3.467260863658143*^9}, {3.46726090601469*^9, 3.4672609524477177`*^9}, {
  3.467261091281211*^9, 3.467261117466981*^9}, {3.4672861604102373`*^9, 
  3.467286204410602*^9}, {3.4673205878744392`*^9, 3.4673206334791327`*^9}, {
  3.467320795108128*^9, 3.467320807013006*^9}}],

Cell[BoxData[
 GraphicsBox[{PointBox[CompressedData["
1:eJx1kz9oU1EYxR/dCnVy6VAKKm2hFHHt9IGTXZTaQKEVCopxq5Nk0KWbg9Ch
iGAHFwt1cbRd5FOxDjqFtmmFl8T8Jam1/4y7Nvf8HvhKA+GRm3e/e+7vnHPp
7sPb93uiKMr8+54+v//yjaFXsd07uZW5k/vj2+v7Hj8uW+PZ+E7U2/HWx77i
xFjFHoxcmVl5eeLhWbWwfuzhvbptdfcdepjTsDB33yvT2fxao2nx5aVv85/a
Pvf+yc2LmZb9COteDOtWD3N89umbG1+v/dT8imuO5sU+PVW4vnDhwMrd/QUv
hHOt2X0/76OLC4MDj440/4u3g07b7f5+56udF8u52rFF+uheVg//2/DM2/7N
yd/WDPvhYGFO3l775+dXP3SsFs6Hm6U5olfvi0PB4ap5rvO8JL1ZcY7/1+vo
hXtLenVfr0rvtnzYk17x4vzEF/SKt/RUEp+a8lV+JT7iW0m+ye/EJ3zEl3Cf
auIDvsI95KYMl8Tn87hyD7jiC1zFER/haHCFI1zF0eEqjuQIjg5XfIQreuEq
juQYjg5XcaQHcHS4Mgeu4uhwFUeHK72EKxzgms5jmivc6T2+0HtxMXqvnhu9
x3d6r3taKi/kiHwYvecceo8u5qrn5JieG/lSz+kBPTfylvKbnif5U8/pIT1P
8qie0+Mz+fwLZYcHmQ==
    "]], 
   {RGBColor[1, 0, 0], PointBox[CompressedData["
1:eJxlVE9sy2EYLpdF2IUEERk2I/5kkZCI0xNOdiFmLLYZJpvtYidZxC67jJRk
B1kkNkEYdsANCfJsjAO7qOrWrbOta6uhpl27f+aA73u+JubQvPl+eb/3ff59
3VDdUFKz2OPxlP75/a2h73xTeLMPQVN/sX5zQXnndR/aj+R5O87/ZLis9sPT
aAAnXjYdWFE6y6pLXfvf7RjC+sKh5d6iaQ48SzB0YQSRK3v6PUsy7Mpca28c
H8N9U1OMme8R+EzfDxaYezEcM3O+8aSZG8eI2RPjDbP3K2oMjjAHDa4EBkwN
cVXLqUWPeycwZub6ua21OW/tuSQGzP23LK4oeTF6MaXzPdaZOZNImvMTtKTT
M/UP0xgU77vsbSvqzsDx7L3ctjPtm0JQvOz3aUTFw7Nxd0PT7Awc7nXJnNy9
S+eEL+HO1Jnqdzyl5zQ1j6/tPvrtPt6xePjZ4qHwSoc+nrF8GLB8HF+OWr7Y
avXguNUDK61e2ucX74TwhSC9NTeMqn9wxiC/WGH9ks8R9ls/Ib8pv/FJPOy+
DMptXphv8+J0pvIEu9dH5Q3KI5VHLMxnomfZcPH2Hqx5vitn9ss8k+Jt98wz
It87lN+47Wco/+r7s6+cL33Mk0/ShceV72HTF+Qtb6o12jHDgPiMybda5VJ8
eHryYGllY5TVpk5lfXY+Virn7n2UHQ7sa86d4KbyR6s/HkrT+VUrXx/o3bjq
+iyPFDs1d4vuORx+vS+H+6j2LMzjwrzetv0QLjifNC/7PoQThRYPhAfCma3C
JV8nIRwQD/nkcpTR/0oc0gvSE9IT0juLy6d3Oap3aX0NQrwRVs5dvuQ35Ddi
yo/1eQ7dyo/Ln/JE5QlJ5Ud5+y+fvwE/oP9P
     "]], 
    {Arrowheads[0.02], {
      {RGBColor[
        NCache[
         Rational[1, 6], 0.16666666666666666`], 0, 
        NCache[
         Rational[5, 6], 0.8333333333333334]], 
       ArrowBox[{{0, 0}, {1., 0.}}]}, 
      {GrayLevel[0], InsetBox["1", {0.5, 0.}]}}, {
      {RGBColor[
        NCache[
         Rational[1, 3], 0.3333333333333333], 0, 
        NCache[
         Rational[2, 3], 0.6666666666666666]], 
       ArrowBox[{{0, 0}, {0.9838699100999075, 0.17888543819998318`}}]}, 
      {GrayLevel[0], 
       InsetBox["2", {0.49193495504995377, 0.08944271909999159}]}}, {
      {RGBColor[
        NCache[
         Rational[1, 2], 0.5], 0, 
        NCache[
         Rational[1, 2], 0.5]], 
       ArrowBox[{{0, 0}, {0.9284766908852591, 0.37139067635410367`}}]}, 
      {GrayLevel[0], 
       InsetBox["3", {0.46423834544262954, 0.18569533817705183}]}}, {
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 
        NCache[
         Rational[1, 3], 0.3333333333333333]], 
       ArrowBox[{{0, 0}, {0.8407151898573338, 0.5414775799081133}}]}, 
      {GrayLevel[0], 
       InsetBox["4", {0.4203575949286669, 0.27073878995405665}]}}, {
      {RGBColor[
        NCache[
         Rational[5, 6], 0.8333333333333334], 0, 
        NCache[
         Rational[1, 6], 0.16666666666666666`]], 
       ArrowBox[{{0, 0}, {0.7445694406464904, 0.6675450157520257}}]}, 
      {GrayLevel[0], 
       InsetBox["5", {0.3722847203232452, 0.33377250787601287}]}}, {
      {RGBColor[1, 0, 0], 
       ArrowBox[{{0, 0}, {0.6602667442547522, 0.7510311754056748}}]}, 
      {GrayLevel[0], 
       InsetBox["6", {0.3301333721273761, 0.3755155877028374}]}}, {
      {RGBColor[
        NCache[
         Rational[7, 6], 1.1666666666666667`], 0, 
        NCache[
         Rational[-1, 6], -0.16666666666666666`]], 
       ArrowBox[{{0, 0}, {0.5951552988770312, 0.8036107081283769}}]}, 
      {GrayLevel[0], 
       InsetBox["7", {0.2975776494385156, 0.40180535406418844}]}}, {
      {RGBColor[
        NCache[
         Rational[4, 3], 1.3333333333333333`], 0, 
        NCache[
         Rational[-1, 3], -0.3333333333333333]], 
       ArrowBox[{{0, 0}, {0.5481683521916383, 0.8363680156817955}}]}, 
      {GrayLevel[0], 
       InsetBox["8", {0.27408417609581914, 0.41818400784089776}]}}, {
      {RGBColor[
        NCache[
         Rational[3, 2], 1.5], 0, 
        NCache[
         Rational[-1, 2], -0.5]], 
       ArrowBox[{{0, 0}, {0.5154448227384918, 0.8569227705645853}}]}, 
      {GrayLevel[0], 
       InsetBox["9", {0.2577224113692459, 0.42846138528229266}]}}, {
      {RGBColor[
        NCache[
         Rational[5, 3], 1.6666666666666667`], 0, 
        NCache[
         Rational[-2, 3], -0.6666666666666666]], 
       ArrowBox[{{0, 0}, {0.4930789806496297, 0.8699845509211771}}]}, 
      {GrayLevel[0], 
       InsetBox["10", {0.24653949032481484, 0.43499227546058855}]}}, {
      {RGBColor[
        NCache[
         Rational[11, 6], 1.8333333333333333`], 0, 
        NCache[
         Rational[-5, 6], -0.8333333333333334]], 
       ArrowBox[{{0, 0}, {0.47794768854184483`, 0.8783883008200346}}]}, 
      {GrayLevel[0], 
       InsetBox["11", {0.23897384427092241, 0.4391941504100173}]}}, {
      {RGBColor[2, 0, -1], 
       ArrowBox[{{0, 0}, {0.4677695518748096, 0.8838504660511527}}]}, 
      {GrayLevel[0], 
       InsetBox["12", {0.2338847759374048, 0.44192523302557635}]}}, {
      {RGBColor[
        NCache[
         Rational[13, 6], 2.1666666666666665`], 0, 
        NCache[
         Rational[-7, 6], -1.1666666666666667`]], 
       ArrowBox[{{0, 0}, {0.4609461561979355, 0.8874281047422087}}]}, 
      {GrayLevel[0], 
       InsetBox["13", {0.23047307809896775, 0.44371405237110434}]}}, {
      {RGBColor[
        NCache[
         Rational[7, 3], 2.3333333333333335`], 0, 
        NCache[
         Rational[-4, 3], -1.3333333333333333`]], 
       ArrowBox[{{0, 0}, {0.45638104511626604`, 0.8897844355002984}}]}, 
      {GrayLevel[0], 
       InsetBox["14", {0.22819052255813302, 0.4448922177501492}]}}, {
      {RGBColor[
        NCache[
         Rational[5, 2], 2.5], 0, 
        NCache[
         Rational[-3, 2], -1.5]], 
       ArrowBox[{{0, 0}, {0.45333065502322534`, 0.8913424242210248}}]}, 
      {GrayLevel[0], 
       InsetBox["15", {0.22666532751161267, 0.4456712121105124}]}}, {
      {RGBColor[
        NCache[
         Rational[8, 3], 2.6666666666666665`], 0, 
        NCache[
         Rational[-5, 3], -1.6666666666666667`]], 
       ArrowBox[{{0, 0}, {0.45129402052840323`, 0.8923753173610918}}]}, 
      {GrayLevel[0], 
       InsetBox["16", {0.22564701026420161, 0.4461876586805459}]}}, {
      {RGBColor[
        NCache[
         Rational[17, 6], 2.8333333333333335`], 0, 
        NCache[
         Rational[-11, 6], -1.8333333333333333`]], 
       ArrowBox[{{0, 0}, {0.44993493115929006`, 0.8930613404031579}}]}, 
      {GrayLevel[0], 
       InsetBox["17", {0.22496746557964503, 0.44653067020157894}]}}, {
      {RGBColor[3, 0, -2], 
       ArrowBox[{{0, 0}, {0.44902828463550026`, 0.8935175429712056}}]}, 
      {GrayLevel[0], 
       InsetBox["18", {0.22451414231775013, 0.4467587714856028}]}}, {
      {RGBColor[
        NCache[
         Rational[19, 6], 3.1666666666666665`], 0, 
        NCache[
         Rational[-13, 6], -2.1666666666666665`]], 
       ArrowBox[{{0, 0}, {0.44842359439379814`, 0.8938211677908207}}]}, 
      {GrayLevel[0], 
       InsetBox["19", {0.22421179719689907, 0.44691058389541033}]}}, {
      {RGBColor[
        NCache[
         Rational[10, 3], 3.3333333333333335`], 0, 
        NCache[
         Rational[-7, 3], -2.3333333333333335`]], 
       ArrowBox[{{0, 0}, {0.4480203528406273, 0.8940233573238228}}]}, 
      {GrayLevel[0], 
       InsetBox["20", {0.22401017642031365, 0.4470116786619114}]}}, {
      {RGBColor[
        NCache[
         Rational[7, 2], 3.5], 0, 
        NCache[
         Rational[-5, 2], -2.5]], 
       ArrowBox[{{0, 0}, {0.44775147429362927`, 0.8941580493782301}}]}, 
      {GrayLevel[0], 
       InsetBox["21", {0.22387573714681464, 0.44707902468911503}]}}}}},
  Axes->True,
  ImageSize->{417.9999999999997, Automatic},
  PlotRange->{{-3, 3}, {-3, 3}}]], "Output",
 CellChangeTimes->{{3.467260202084659*^9, 3.467260296869069*^9}, {
   3.467260671111*^9, 3.467260758923236*^9}, 3.4672607929769993`*^9, 
   3.467260864736655*^9, {3.467260926674575*^9, 3.467260953096423*^9}, {
   3.467261008911194*^9, 3.467261092027485*^9}, {3.467261179218158*^9, 
   3.467261184155703*^9}, {3.467261246141923*^9, 3.467261258970675*^9}, 
   3.467286121288108*^9, 3.467286175412417*^9, 3.467286205828455*^9, {
   3.4673205475878477`*^9, 3.467320563006755*^9}, {3.467320634090439*^9, 
   3.4673206529270287`*^9}, 3.467320713216051*^9, {3.467320778195307*^9, 
   3.4673208073878317`*^9}, {3.467323302964163*^9, 3.4673234366620827`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Norm", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"vecs", "\[LeftDoubleBracket]", 
     RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], 
    RowBox[{"Norm", "[", 
     RowBox[{"vecs", "\[LeftDoubleBracket]", 
      RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}]], "-", 
   FractionBox[
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], 
    RowBox[{"Norm", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "]"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.467261187416423*^9, 3.467261228144195*^9}, {
  3.46732067297288*^9, 3.4673206785639887`*^9}}],

Cell[BoxData["0.0006014572380518782`"], "Output",
 CellChangeTimes->{{3.467261191230603*^9, 3.467261260501285*^9}, {
   3.4673206444121647`*^9, 3.467320679000264*^9}, 3.46732071333145*^9, 
   3.467320778315784*^9, 3.467323303138001*^9, {3.467323368946884*^9, 
   3.4673234401312027`*^9}}]
}, Closed]],

Cell["The power method for finding eigenvectors and", "Text",
 CellChangeTimes->{{3.4672546762879066`*^9, 3.46725469857294*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "2"}], ";", 
  RowBox[{"d", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cpoints", "=", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "+", "i"}], ",", "j"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "n"}], ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"-", "n"}], ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "1"}], ",", "1", ",", "d"}], "}"}]}], "]"}], ",", 
       "2"}], "]"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"j", "+", "y"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "n"}], ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"-", "n"}], ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"-", "1"}], ",", "1", ",", "d"}], "}"}]}], "]"}], ",", 
       "2"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cpoints", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"RotationMatrix", "[", 
       RowBox[{"ArcTan", "[", "2", "]"}], "]"}], ".", "#"}], "&"}], "/@", 
    RowBox[{"Join", "[", 
     RowBox[{"cpoints", ",", 
      RowBox[{"Reverse", "/@", "cpoints"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Blue", ",", 
     RowBox[{"Point", "[", "cpoints", "]"}], ",", "Red", ",", 
     RowBox[{"Point", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"A", ".", "#"}], "&"}], "/@", "cpoints"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", "\[Lambda]"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.467259047183971*^9, {3.46725909823046*^9, 3.467259220634623*^9}, {
   3.46725925383888*^9, 3.467259303587304*^9}, {3.467259587887423*^9, 
   3.467259595099626*^9}, {3.467259931647127*^9, 3.467259940779505*^9}, {
   3.4673204977415648`*^9, 3.467320498769689*^9}, 3.467321399287024*^9, {
   3.467321451578464*^9, 3.467321774696347*^9}, {3.46732181252343*^9, 
   3.467321816185357*^9}, {3.4673218628056383`*^9, 3.467321903907214*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], PointBox[CompressedData["
1:eJztnV+MXVUVxm8L7RQoPmhi/BeCKKhEiYkkhmiyD8YHjAlGwLZ2GloRO/oi
T4SoJIZE/FONPBiCURJI0MY/UYwPaKJyThuoCfbBamds8d6ZueXe6Z2xSqct
wyADGO/5fmu69unJ6TCn83T6ctOZO/eutff6vvXttdY555133HXLF9a3Wq3r
N7Va/3898u/06asfaYejw9fN2eHfn0jbX5sKb/vD9SOLxy/L5vZt7nzi/d2w
/ds/v+mZD16W7X7Pu7b/9EfHwsOfuWLPw1+5NOt974Z/tC7phc5VP/jLl/df
kt1x6lO37binH644OXL5jZddkh3buvvQ7/oz4fY/3Xvzm27blO0avg7CI3vm
H+g/PJK1h383G7rD923MRoff869w1dX/fOOe6zZmuV0nwueHn7sh23rrxMfu
u/w/4SfpUw9el12cTQztfT7kdlycXfvAfVe84+6T4Zrtv37L3z99UTY7tH8+
5Havz3525qEf3/PcfMhf12Vjw5+fCoPh+9Zl+d+dDu8bfk4r6w8/90zI1+W1
NP/eM2HL0I5X09yuF7R+S+mz+Xqm+D859O9oulP+Tw79nEjxf2b4+YdT/M/X
+1CK/+3h5x1M8b89fN+B9DH53xu+f1+K/4Ph759I8X96+P+96Zj8b+kf/uv3
YVb+6+/N/3xd9oVx+d/Lv9/8z+PnoPkv+xUvL6fyL+T7/FKax8OE4mEx1fqE
3I6F9KjiUeua+tcNmdY/Zf9zv8+Y/9o/81/7a/5r/1P8z/2bT9n/3O+TKf4r
vtIJ+a/40+ursvdEiv+KX72+nCq+U/zP42Cg18U093smxf/cz775LXyl+Cn8
6fWU7O6m+CH86vV51tPsxG9ebxq95Y/T31qX2f67dWhl33nvn1/57V9Zh9fS
a/XzbfL/mRc+Eu5/ayt7Vv6DE/b/zd/83LrHn3rV/Ofvdsn/H175yW/cuuUV
xf+CrSP+5zz0cioc2ufif85D/02Fc/se/M9x+JJweSIl7tiXR4c4fLGwD6x7
jsMFW2fsOhrhHP+f3LL/A794fFO2Q3bCe9jVeveH77p3cSTD/0fFA8f0vcn8
L39z840j2Z36nmnxAvt/35NXnrpyz8YM/+GJOfm//7sPfuj03zZk4/If3LD/
F3320ruffvuGrCP/wdGU/P/4NV9/4qE7Lxbv9QxXx+X//adPv/ilX12UwXPg
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
BytuOCeCd86RUX63cyfnUPBOfoOfyG/EMed8j/flujd1EvBDfvP9/UWre1Mf
A+++ftFPfb2jZ/kN/FAHAj/kN5/f43mwcnupe3RK7CUfd2uy19eLivaS38AP
500/z9Szuo2vjx2yfMGcAPmN/j/nN+bC6PMwD8B5k7mwuF8U2+vrZ0ejvsbq
7dX7wqDEXt+vKtqr+YXUzzUcSJlrYE6APhf5mLkGH0cH6T9Z3iW/+TrTjOVp
8ht4j/P6uftx+LU3+LmNor1+fqTaXj9HVrTXz0cW7fXz9lP04Wy+IZ4LIr9R
d/A6sW/9FuJmlzt3DkwHEmfkN+q0cb+oyl5/PUHRXn+9woW3l/xGXZn8Bk8w
90xdmfyGbo7ObzZXjc4mv1FXtvwm3iK/UVcmv8Fzvv/Rtjoh181YHdXFodVd
U9+/OWR1Sq6beYw6ruLc8pvwTn5Dp5LfovxudWU//7DX6vDkdz9fsY/rZELP
4WeJujfnKuri1icB79TRmYcgv4H3uF9UZa+vmxftJR9P12Svn4cv2kucgB/y
25zj8eW+DPkYvPv6ZN/6XtG8k/Vl/PVqs9b/2eHwU5gHs59z3mRu0V9PUJ+9
OyvsHS2xl/wG3snH4J19ZY7liOP95bkV8N5zuDjFnCJzb5YvWBfyG3iP+0Wx
vd3IXuJqvMTe6RXae6zC3m6FvdR56MOSj32/a8bmficjncccOn1Y8oXvh83b
3C/5Ah1JfqMPe+55sHJ70Y3TJfaio29fI3vJb/SNyW/Uuagj0Tem/su5geus
6BtT14LXyG/0jf11jNYn5rq3xOc3+sWb6StxHSx9J66DpS/FdbD0rbgOlr6W
5Teui2UegH49+Q1+Ir/BC+Q38B7PM3B+Az/kN/BOfgM/zGNE+d36xqwT+CG/
gR/6kOCH/ObxszwfUGUvfcfxEnutb1uTvdsq7CW/gR/yG3gHJ+AHXIF3r2ts
rt/6/+Q38INfo66O+7zNXZx7HmzZ3tHI3s4a2zteYS9xDN45b1p/XzgB7+Q3
dAn5AryrLmU6hvwG3skX6B7yG3iP5wNiezuRvd2a7R1U2DtdYS86lTkr6UrT
rehg5qyoi4ErdDZzVpzfwKHmqrguiLkqqxNxfmPOKp4PqLIXHb67xN7JNbaX
ujNzYeQ3eJe6NnNhmgOzcwjX6TIXxnW8jzpeX+S6X+bAuC6YOTCuG2Z+IY3n
wpp5hnrmGZp+3IXoxzX15LrqyU09pN56SKPn69XzzTxYjuO65sGaeYZ8f+qd
Z2j6cXX145p68oWoJzf1kLrqITHfN/O0dczTNvNg9c6DNfMMdc0zNP0439+q
px/X1JNrricbrzbXI9RxPUIzT1vXfGr8r5kHq2MerJlnqHeeoenH1dXfquL7
5nqulV3P1VyPUO/1CM08bb3ztM08WL3zYFV838wzrGyeoXnexNn1idU/b6LK
3uZ+6Su7X3qZvc39fs8+B670fr/N/Srrun9Zc7+1eu+31jyvJ4+Lup7XU2Vv
87yJHCcre95Ec7/0eu+X3tzvt677P1bZ29yvMtcf53u/ymiutnnemep0r/d5
Z1X2Ns/rObv/c77P62meN1HX8ybO3Y9r7pe+uvulN/f7ret+v83zIs8+R6z+
eZFV9jbPO8v9Wtnzzprn9dT1vJ4ye+HN5nkTeZys7HkTzf3S67pfevO83Xqf
t3u+9nZL7G2eF+n7cM3zzs79/JtVPu+sYG/zvJ7X9/yGKnub503kPHa+z5v4
Hy6yBwY=
     "]]}, 
   {RGBColor[1, 0, 0], PointBox[CompressedData["
1:eJztnWmQHlUVhr+ZZLJNEibEDVGYBJIAKqXihmLdi4hAqagIWYZICNmIpfLD
wgVRxFKEiLiyCJE9QbQU0QIUA/cmQHBJlZJMJhMymS2zJkOYyTJZSSz7Pm9b
01NdHU1nfnX+3Jov39d9+t5z3nvO+57unnTVNZcsKC+VSu8ZVSr9Z1z7inth
yn1r3Hd37tyz+LcTffOtZ28ojX7eXfvDykdHnjrR+xkLX3qq/Um3YNopNcvu
Pp6/73AzVn6w8rwJx/ve6O/l5sLLL1nR/P0Jvjk63gpz9u7FX/zWoSr+f7U5
/Uc3nvSWa6t82596XMM3/mnOuuTd9315w3G+IzpfrXnjTXPLHnt+vL/qmesv
nnhpvdnz5x/P2/r4ON8QHa/BbIzGsf5t0XGazV8mvTpt7q2V/vORXa3m7stO
WrL062P8cvf87Wf6NvPNWz7Zs2HhaN8Wnb/DXBEdd5Sv7h057tzKbmP7fvP7
i88d6a+4+dEL//7ObaZ6yqbjl5w5wi+t/vh3Pzv9FVM+a8y1L5xY4esje181
bZGdw/2S01587Q//6jUv+KvPPqe/3D+66857vrqlzzwSjWX+V+FvF8YJ/pbw
fXfXbY994vU1E/zacDx3c/R5lb8rnM9dt6rxd5++oMpfHuxx66PvHedPCva6
p3pOnPymxeN9Y7ged0f0u3H+gXC97muXXtdx23lj/aIwHy4cp9KHeW9256yo
/3XFSWN8fZhPF4472od5qXelU99/zfV7R7L+ta4pOs8I7P2nW/WD28/aubbC
bwjr6R6KzjvcB/9Zgf8Mwz+W4y/lvnpm5C/mgsg/yvCHJ/GHku8J/mZeF63/
IRfWew3rfdD9ffeHzPdOKPkwVvmvnPxI8/nVh10Yj/PTP1v3kRvHHXKXReN4
f/b3K5at2H/QfSAax/o3/+U9I/d2HnBhrPQHt89bfNb6/S6MY3zD5J/940ur
9rlN0TjaPzN91Tt+/dheF8ZR/v4lfT9qX7rHhXGkv/HZ6h3VS/pdGEf4eTs+
densr+52V0Vjhf/o1BuevHP+LhfG4X5Kze/etO4zO92p0TjMj7xt83XjzQ4X
xnLftXLs5ove3ufCWMZ19sbXHa5vO9d3yJ0QXcc2xgMu2N+N/fvcfZGdnYx7
XLCvHft2u3Pxe8XTu37w3Nyep0Z4xdNk4kDxNNHteG7asgqveBpOXMwhnnbt
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
     "]]}},
  Axes->True,
  PlotRange->{{-3, 3}, {-3, 3}}]], "Output",
 CellChangeTimes->{{3.4673216040468884`*^9, 3.467321661856571*^9}, {
   3.467321722635364*^9, 3.467321731066822*^9}, {3.4673217657763567`*^9, 
   3.467321781205142*^9}, 3.467321823874258*^9, {3.467321865018812*^9, 
   3.467321906079968*^9}, 3.4673233025553703`*^9, 3.467323422471065*^9}]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computation", "Section",
 CellChangeTimes->{{3.441484408117955*^9, 3.441484421085724*^9}}],

Cell[TextData[{
 "So far all the computations are done in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". The connectivity matrix is stored in sparse matrix data structure. The \
eigenvectors are computed with the function ",
 StyleBox["Eigenvector", "Program"],
 ". "
}], "Text",
 CellChangeTimes->{{3.445011477898875*^9, 3.445011604857414*^9}}],

Cell[CellGroupData[{

Cell["Power method for eigenvector finding", "Subsection",
 CellChangeTimes->{{3.469928648765616*^9, 3.469928660721108*^9}}],

Cell["\<\
We are interested in the eigenvector with the largest eigenvalue that solves \
the equation \
\>", "Text",
 CellChangeTimes->{{3.470178921429957*^9, 3.470178930071774*^9}, {
  3.4701789611887608`*^9, 3.470178972388373*^9}, {3.4723336165879087`*^9, 
  3.4723336166034927`*^9}, {3.472333700091254*^9, 3.472333752616322*^9}, {
  3.4723337868582497`*^9, 3.4723337953777246`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]", " ", "x"}], " ", "=", " ", 
    RowBox[{"A", " ", "x"}]}], ","}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.472333829976077*^9, 3.4723338839309*^9}, {
  3.472333955507333*^9, 3.4723339560282516`*^9}, {3.472334555340707*^9, 
  3.472334564116333*^9}, {3.472672491691942*^9, 3.472672493340362*^9}}],

Cell[TextData[{
 "where the matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]]],
 " \[Element] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", 
    RowBox[{"n", "\[Times]", "n"}]], TraditionalForm]]],
 " is given, and the vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]]],
 " and scalar ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "\[Element]", "\[DoubleStruckCapitalR]"}], 
   TraditionalForm]]],
 " are unknown."
}], "Text",
 CellChangeTimes->{{3.472333957933302*^9, 3.4723340817619267`*^9}, 
   3.472334436561513*^9, 3.4726724996258307`*^9, 3.625310716571486*^9}],

Cell[TextData[{
 "At first, let us assume the matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]]],
 " is a diagonal matrix, i.e. "
}], "Text",
 CellChangeTimes->{{3.4723338865775957`*^9, 3.472333914761862*^9}, {
  3.4723339476575527`*^9, 3.472333951042*^9}, {3.472334152580689*^9, 
  3.47233417352159*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"A", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       SubscriptBox["d", "1"], "0", "0", "\[Ellipsis]", "0"},
      {"0", 
       SubscriptBox["d", "2"], "0", "\[Ellipsis]", "0"},
      {"0", "0", 
       SubscriptBox["d", "3"], "\[Ellipsis]", "\[VerticalEllipsis]"},
      {"\[VerticalEllipsis]", "\[VerticalEllipsis]", "\[VerticalEllipsis]", 
       "\[DescendingEllipsis]", "0"},
      {"0", "0", "0", "\[Ellipsis]", 
       SubscriptBox["d", "n"]}
     },
     GridBoxDividers->{
      "Columns" -> {False, {False}, False}, "ColumnsIndexed" -> {}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.472334185068694*^9, 3.472334305987545*^9}, {
   3.472334354404804*^9, 3.472334363196885*^9}, 3.472676660639737*^9}],

Cell[TextData[{
 "and let us further assume that the numbers  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["d", "i"], "\[Element]", "\[DoubleStruckCapitalR]"}], ",", 
    " ", 
    RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", "n"}], 
   TraditionalForm]]],
 " are different. Then when we multiply the matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]]],
 " with a vector ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[Cell[""], TraditionalForm]]],
 "the result is"
}], "Text",
 CellChangeTimes->{{3.4723343725724783`*^9, 3.4723344003378563`*^9}, {
   3.472334441237588*^9, 3.472334477971431*^9}, {3.472334512586358*^9, 
   3.472334592929881*^9}, {3.472335426817966*^9, 3.4723354302807007`*^9}, {
   3.472673323590065*^9, 3.472673335584406*^9}, {3.4726734049063587`*^9, 
   3.4726734183653584`*^9}, 3.472673475995248*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"A", " ", "v"}], "=", 
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         SubscriptBox["d", "1"], 
         SubscriptBox["v", "1"]}]},
       {
        RowBox[{
         SubscriptBox["d", "2"], 
         SubscriptBox["v", "2"]}]},
       {
        RowBox[{
         SubscriptBox["d", 
          RowBox[{"3", " "}]], 
         SubscriptBox["v", "3"]}]},
       {"\[VerticalEllipsis]"},
       {
        RowBox[{
         SubscriptBox["d", "n"], 
         SubscriptBox["v", "n"]}]}
      },
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
    "."}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.4723346036447268`*^9, 3.472334707494644*^9}, {
  3.472673311788187*^9, 3.472673317689478*^9}, {3.472673478942437*^9, 
  3.472673480749988*^9}}],

Cell["Consider the sequence of vectors", "Text",
 CellChangeTimes->{{3.472334739202731*^9, 3.4723347570070963`*^9}, {
  3.472334794077849*^9, 3.472334796413436*^9}, {3.472335091383524*^9, 
  3.472335098185796*^9}, {3.47233555011819*^9, 3.47233558201517*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"v", ",", 
   RowBox[{"A", " ", "v"}], ",", 
   RowBox[{
    SuperscriptBox["A", "2"], "v"}], ",", 
   RowBox[{
    SuperscriptBox["A", "3"], " ", "v"}], ",", "\[Ellipsis]", ",", 
   RowBox[{
    SuperscriptBox["A", "k"], " ", "v"}], ",", "\[Ellipsis]", ","}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{
  3.472334470062249*^9, {3.4723345100546627`*^9, 3.4723345108499327`*^9}, {
   3.472334824516436*^9, 3.472334835404572*^9}, 3.472334873713628*^9, {
   3.472334906255072*^9, 3.4723349191651897`*^9}, {3.472335126216017*^9, 
   3.472335199801709*^9}, 3.472335586254714*^9, {3.472352698131811*^9, 
   3.472352713589519*^9}, {3.472673486151618*^9, 3.472673494903586*^9}}],

Cell[TextData[{
 "derived by iterative multiplications with the matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]]],
 ". From the equation (11) we can deduce that"
}], "Text",
 CellChangeTimes->{{3.472335590727099*^9, 3.472335598806134*^9}, {
  3.4726740231399517`*^9, 3.472674026424308*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["v", "k"], "=", 
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "k"], "v"}], "=", 
    RowBox[{
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          SuperscriptBox[
           SubscriptBox["d", "1"], "k"], 
          SubscriptBox["v", "1"]}]},
        {
         RowBox[{
          SuperscriptBox[
           SubscriptBox["d", "2"], "k"], 
          SubscriptBox["v", "2"]}]},
        {
         RowBox[{
          SuperscriptBox[
           SubscriptBox["d", 
            RowBox[{"3", " "}]], "k"], 
          SubscriptBox["v", "3"]}]},
        {"\[VerticalEllipsis]"},
        {
         RowBox[{
          SuperscriptBox[
           SubscriptBox["d", "n"], "k"], 
          SubscriptBox["v", "n"]}]}
       },
       GridBoxDividers->{
        "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{False}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
     "."}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.472335254877411*^9, 3.47233529166073*^9}, {
   3.4723353767929697`*^9, 3.472335379142717*^9}, {3.472335514711783*^9, 
   3.472335530846808*^9}, {3.4723519919347486`*^9, 3.4723520037208223`*^9}, 
   3.472352727201652*^9, {3.472674031602275*^9, 3.4726740340582247`*^9}}],

Cell[TextData[{
 "We can see from the equation (13) that for a given vector ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 " there is a large enough natural number ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "\[Element]", "\[DoubleStruckCapitalN]"}], 
   TraditionalForm]]],
 " for which the absolute value of one of the coordinates of ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 " is much, say ",
 Cell[BoxData[
  FormBox["100", TraditionalForm]]],
 " times, larger than any other coordinate of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "k"], TraditionalForm]]],
 ". We can write this formally as  "
}], "Text",
 CellChangeTimes->{{3.472335421344817*^9, 3.472335459815884*^9}, {
   3.472335494841506*^9, 3.472335511548451*^9}, {3.472335607464286*^9, 
   3.4723358234523983`*^9}, {3.472335862675157*^9, 3.472335874602735*^9}, {
   3.472336019622154*^9, 3.4723361010007067`*^9}, {3.472674038652972*^9, 
   3.4726740525857687`*^9}, 3.472674210484804*^9, {3.47267668103436*^9, 
   3.472676681034483*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[ForAll]", " ", 
    RowBox[{"v", "\[Element]", 
     SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}]}], " ", ",", 
   RowBox[{"\[ForAll]", " ", 
    RowBox[{"m", "\[Element]", "\[DoubleStruckCapitalN]"}]}], ",", " ", 
   RowBox[{"\[Exists]", 
    RowBox[{"k", "\[Element]", "\[DoubleStruckCapitalN]"}]}], ",", " ", 
   RowBox[{"\[Exists]", "i"}], ",", 
   RowBox[{"j", "\[Element]", 
    RowBox[{"[", 
     RowBox[{"1", ",", "\[Ellipsis]", ",", "n"}], "]"}]}], ",", " ", 
   RowBox[{
    RowBox[{"i", "\[NotEqual]", 
     RowBox[{"j", " ", ":"}]}], "\[VerticalSeparator]", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["d", "i"], "k"], 
     SubscriptBox["v", "i"]}], "\[VerticalSeparator]", 
    RowBox[{">", 
     SuperscriptBox["10", "m"]}], "\[VerticalSeparator]", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["d", "j"], "k"], 
     SubscriptBox["v", "j"]}], "\[VerticalSeparator]", "."}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.4723358896216097`*^9, 3.4723360119011993`*^9}, {
   3.472336121445053*^9, 3.472336185133438*^9}, {3.4723362249181013`*^9, 
   3.4723362254837303`*^9}, {3.472336255711185*^9, 3.472336278446825*^9}, {
   3.4723527871894073`*^9, 3.4723527931410933`*^9}, {3.47235284141995*^9, 
   3.472352845156695*^9}, 3.472674534572895*^9}],

Cell[TextData[{
 "Now let us divide all coordinates of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["A", "k"], "v"}], TraditionalForm]]],
 " by the ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 "-th coordinate which has the largest absolute value:"
}], "Text",
 CellChangeTimes->{{3.472352771220551*^9, 3.472352777938118*^9}, {
  3.472352815746314*^9, 3.472352946563467*^9}, {3.472352986939817*^9, 
  3.4723529877554207`*^9}, {3.472353223726701*^9, 3.472353293298967*^9}, {
  3.472676621633791*^9, 3.472676621633911*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"v", "/"}], "\[VerticalSeparator]", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["d", "i"], "k"], 
    SubscriptBox["v", "i"]}], "\[VerticalSeparator]", "."}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.472352959812182*^9, 3.472352982782895*^9}, 
   3.472674619412608*^9}],

Cell[TextData[{
 "From Formula (14) we can deduce that the unit vector along the ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 "-th axis is the eigenvector of ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "i"], TraditionalForm]]],
 " is the eigenvector."
}], "Text",
 CellChangeTimes->{{3.4723518678449717`*^9, 3.4723518751376657`*^9}, {
  3.472352206352022*^9, 3.472352222866296*^9}, {3.472352307014254*^9, 
  3.472352326303576*^9}, {3.4723524125175047`*^9, 3.472352424276939*^9}, {
  3.472352570242568*^9, 3.472352595626626*^9}, {3.472352627268414*^9, 
  3.472352683146257*^9}}],

Cell["\<\
With the last statement we can conclude that using any initial vector \
\[Ellipsis]\
\>", "Text",
 CellChangeTimes->{{3.472351240312211*^9, 3.4723512564500723`*^9}, {
  3.4723515035319357`*^9, 3.472351517977723*^9}, {3.472351645546752*^9, 
  3.47235168035391*^9}, {3.4723518208261538`*^9, 3.472351847114235*^9}, {
  3.6251802621119556`*^9, 3.6251802626835527`*^9}}]
}, Open  ]],

Cell["Parallel implementation of the power method", "Subsection",
 CellChangeTimes->{{3.466738582864521*^9, 3.4667385933276978`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises", "Section",
 CellChangeTimes->{{3.466738604559718*^9, 3.4667386068307543`*^9}}],

Cell[TextData[{
 "1. In Equation 6 why ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SubscriptBox[
      SuperscriptBox["A", "T"], 
      RowBox[{"i", " ", "j"}]]}], " ", "=", " ", 
    SubscriptBox["L", "j"]}], TraditionalForm]],
  CellChangeTimes->{{3.467063130133788*^9, 3.467063259220907*^9}, {
   3.4670634799211903`*^9, 3.4670635481571817`*^9}, {3.467063579068261*^9, 
   3.467063603841855*^9}}],
 "?"
}], "Text",
 CellChangeTimes->{{3.467062293384038*^9, 3.467062305412982*^9}, {
   3.467062346359435*^9, 3.4670623842385406`*^9}, 3.467062448648384*^9, {
   3.467063649896757*^9, 3.467063706829217*^9}}],

Cell[TextData[{
 "2. Show that ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"A", " ", "[", 
     RowBox[{"0", ",", "0", ",", "...", ",", " ", 
      SubscriptBox["x", "k"], ",", "...", ",", "0", ",", "...", ",", " ", 
      SubscriptBox["x", "l"], ",", "0", ",", "...", ",", "0"}], "]"}], "T"], 
   TraditionalForm]]],
 " is the same as ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "k"], "A", " ", 
      SubscriptBox[
       OverscriptBox["e", "\[Rule]"], "k"]}], "+", 
     RowBox[{
      SubscriptBox["x", "l"], "A", "  ", 
      SubscriptBox[
       OverscriptBox["e", "\[Rule]"], "l"]}]}]}], TraditionalForm]]],
 " and use that equality to prove statement in paragraph rationalizing the \
multiplication."
}], "Text",
 CellChangeTimes->{{3.469825541042589*^9, 3.469825608303178*^9}, {
   3.4698256671765137`*^9, 3.4698256818334303`*^9}, {3.469825744980318*^9, 
   3.4698257630825367`*^9}, {3.469825794746608*^9, 3.469825942476254*^9}, 
   3.469825973012616*^9, {3.4698261075375147`*^9, 3.4698261297649183`*^9}}],

Cell["3. Prove the statement given in Formula (14).", "Text",
 CellChangeTimes->{{3.472350638478518*^9, 3.4723506712183647`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.444508564127401*^9, 3.444508566035989*^9}}],

Cell[TextData[{
 "1. Lawrence Page, Sergey Brin, Rajeev Motwani, and TerryWinograd, The \
PageRank Citation Ranking : Bringing Order to theWeb, Stanford Digital \
Library Technology Project, Stanford, University, Stanford, CA, 1998,\n ",
 ButtonBox["http://dbpubs.stanford.edu/pub/1999-66",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://dbpubs.stanford.edu/pub/1999-66"], None},
  ButtonNote->"http://dbpubs.stanford.edu/pub/1999-66"],
 " ."
}], "Text",
 CellChangeTimes->{{3.444508576020241*^9, 3.444508616562948*^9}, {
  3.4448674762477303`*^9, 3.44486747677922*^9}}],

Cell[TextData[{
 "2. Jon M.Kleinberg, Authoritative sources in a hyperlinked environment, \
J.ACM, 46 (5) : 604 \[Dash]632, 1999, \n",
 ButtonBox["http://www.cs.cornell.edu/home/kleinber/auth.ps",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.cs.cornell.edu/home/kleinber/auth.ps"], None},
  ButtonNote->"http://www.cs.cornell.edu/home/kleinber/auth.ps"],
 "."
}], "Text",
 CellChangeTimes->{
  3.444508576020241*^9, {3.444508628054718*^9, 3.444508633957623*^9}, {
   3.444508665122221*^9, 3.444508665122898*^9}}],

Cell[TextData[{
 "3. Carl D. Meyer, Matrix Theory and Applied Linear Algebra, SIAM 2000, ",
 ButtonBox["http://www.matrixanalysis.com",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.matrixanalysis.com"], None},
  ButtonNote->"http://www.matrixanalysis.com"],
 " ."
}], "Text",
 CellChangeTimes->{{3.466737473936137*^9, 3.4667374855352297`*^9}, {
  3.4667376726948223`*^9, 3.4667376941294203`*^9}, {3.4667377488710747`*^9, 
  3.466737788279299*^9}, {3.4667379608729887`*^9, 3.466737969976375*^9}, {
  3.625178536786274*^9, 3.6251785367879877`*^9}}],

Cell[TextData[{
 "4. Lars Eld\[EAcute]n",
 StyleBox[", ",
  FontColor->RGBColor[
   0.14901960784313725`, 0.14901960784313725`, 0.14901960784313725`]],
 "Matrix Methods in Data Mining and Pattern Recognition (Fundamentals of \
Algorithms), SIAM, 2007. URL: ",
 ButtonBox["http://www.amazon.com/Methods-Pattern-Recognition-Fundamentals-\
Algorithms/dp/0898716268",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.amazon.com/Methods-Pattern-Recognition-Fundamentals-\
Algorithms/dp/0898716268"], None},
  ButtonNote->
   "http://www.amazon.com/Methods-Pattern-Recognition-Fundamentals-Algorithms/\
dp/0898716268"],
 " ."
}], "Text",
 CellChangeTimes->{{3.466739302288842*^9, 3.466739315150873*^9}, {
  3.625178413625201*^9, 3.625178492866824*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1635, 1300},
WindowMargins->{{Automatic, 293}, {Automatic, 0}},
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.5, 1.5 Inherited],
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 14, \
2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Article"}, "Preprint.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Text"], MenuSortingValue -> 10000, FontSize -> 16], 
   Cell[
    StyleData["Item"], MenuSortingValue -> 10000, FontSize -> 16]}, Visible -> 
  False, FrontEndVersion -> 
  "11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 14, 2016)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 220, 3, 115, "Title"],
Cell[CellGroupData[{
Cell[812, 29, 99, 1, 55, "Author"],
Cell[914, 32, 211, 3, 19, "Institution"],
Cell[1128, 37, 113, 1, 19, "Institution"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1278, 43, 97, 1, 100, "Section"],
Cell[1378, 46, 719, 12, 45, "Text"],
Cell[2100, 60, 1418, 21, 74, "Text"],
Cell[3521, 83, 884, 24, 74, "Text"],
Cell[4408, 109, 1024, 18, 131, "Text"],
Cell[5435, 129, 507, 9, 74, "Text"],
Cell[CellGroupData[{
Cell[5967, 142, 175, 2, 37, "Subsubsection"],
Cell[6145, 146, 90, 1, 45, "Text"],
Cell[6238, 149, 89, 1, 45, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6364, 155, 124, 1, 37, "Subsubsection"],
Cell[6491, 158, 99, 1, 45, "Text"],
Cell[6593, 161, 149, 2, 45, "Text"],
Cell[6745, 165, 93, 1, 45, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6875, 171, 166, 5, 37, "Subsubsection"],
Cell[7044, 178, 227, 5, 46, "Input"],
Cell[CellGroupData[{
Cell[7296, 187, 151, 2, 46, "Input"],
Cell[7450, 191, 81, 1, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7568, 197, 100, 1, 46, "Input"],
Cell[7671, 200, 78, 1, 46, "Output"]
}, Open  ]],
Cell[7764, 204, 238, 4, 46, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8051, 214, 222, 3, 100, "Section"],
Cell[8276, 219, 305, 5, 45, "Text"],
Cell[8584, 226, 1330, 22, 131, "Text"],
Cell[9917, 250, 809, 12, 102, "Text"],
Cell[CellGroupData[{
Cell[10751, 266, 162, 2, 38, "Subsubsubsection"],
Cell[CellGroupData[{
Cell[10938, 272, 155764, 2559, 605, "Input"],
Cell[166705, 2833, 155802, 2559, 605, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[322556, 5398, 130, 1, 38, "Subsubsubsection"],
Cell[CellGroupData[{
Cell[322711, 5403, 91783, 1510, 611, "Input"],
Cell[414497, 6915, 91820, 1510, 611, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[506378, 8432, 261, 3, 100, "Section"],
Cell[506642, 8437, 860, 13, 102, "Text"],
Cell[507505, 8452, 1025, 15, 74, "Text"],
Cell[508533, 8469, 1449, 40, 131, "Text"],
Cell[509985, 8511, 551, 9, 102, "Text"],
Cell[510539, 8522, 467, 8, 45, "Text"],
Cell[511009, 8532, 339, 6, 45, "Text"],
Cell[511351, 8540, 1108, 33, 74, "Text"],
Cell[CellGroupData[{
Cell[512484, 8577, 281, 6, 76, "Input"],
Cell[512768, 8585, 495, 12, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513300, 8602, 1752, 40, 76, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[515055, 8644, 6728, 116, 468, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}]
}, Open  ]],
Cell[521798, 8763, 351, 7, 27, "FigureCaption",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[522152, 8772, 584, 10, 74, "Text"],
Cell[522739, 8784, 210, 4, 45, "Text"],
Cell[522952, 8790, 1807, 27, 102, "Text"],
Cell[524762, 8819, 2357, 49, 188, "Text"],
Cell[527122, 8870, 931, 14, 74, "Text"],
Cell[528056, 8886, 782, 15, 74, "Text"],
Cell[528841, 8903, 809, 12, 45, "Text"],
Cell[529653, 8917, 2886, 67, 221, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[532542, 8986, 1454, 36, 70, "PrintTemporary"],
Cell[533999, 9024, 169, 2, 45, "Text"],
Cell[534171, 9028, 1433, 29, 168, "Output"],
Cell[535607, 9059, 289, 6, 45, "Text"],
Cell[CellGroupData[{
Cell[535921, 9069, 872, 21, 76, "Input"],
Cell[536796, 9092, 3455, 113, 120, "Output"]
}, Open  ]],
Cell[540266, 9208, 277, 5, 74, "Text"],
Cell[540546, 9215, 641, 11, 74, "Text"],
Cell[541190, 9228, 1837, 48, 192, "Input"],
Cell[543030, 9278, 173, 2, 45, "Text"],
Cell[CellGroupData[{
Cell[543228, 9284, 168, 4, 46, "Input"],
Cell[543399, 9290, 739, 25, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544175, 9320, 190, 3, 46, "Input"],
Cell[544368, 9325, 189, 3, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544594, 9333, 190, 3, 46, "Input"],
Cell[544787, 9338, 181, 3, 64, "Output"]
}, Open  ]],
Cell[544983, 9344, 454, 12, 52, "Text"],
Cell[CellGroupData[{
Cell[545462, 9360, 1600, 29, 46, "Input"],
Cell[547065, 9391, 792, 13, 46, "Output"]
}, Open  ]],
Cell[547872, 9407, 790, 16, 81, "Text"],
Cell[CellGroupData[{
Cell[548687, 9427, 2668, 50, 105, "Input"],
Cell[551358, 9479, 5582, 100, 746, "Output"]
}, Open  ]],
Cell[556955, 9582, 305, 6, 45, "Text"],
Cell[CellGroupData[{
Cell[557285, 9592, 2113, 42, 134, "Input"],
Cell[559401, 9636, 2969, 55, 934, "Output"]
}, Open  ]],
Cell[562385, 9694, 703, 15, 102, "Text"],
Cell[563091, 9711, 237, 4, 45, "Text"],
Cell[CellGroupData[{
Cell[563353, 9719, 350, 8, 46, "Input"],
Cell[563706, 9729, 732, 13, 46, "Output"]
}, Open  ]],
Cell[564453, 9745, 344, 6, 45, "Text"],
Cell[CellGroupData[{
Cell[564822, 9755, 427, 11, 46, "Input"],
Cell[565252, 9768, 917, 22, 76, "Output"]
}, Open  ]],
Cell[566184, 9793, 439, 7, 74, "Text"],
Cell[566626, 9802, 1877, 46, 221, "Input"],
Cell[568506, 9850, 338, 4, 45, "Text"],
Cell[CellGroupData[{
Cell[568869, 9858, 1093, 28, 76, "Input"],
Cell[569965, 9888, 3618, 93, 414, "Output"]
}, Open  ]],
Cell[573598, 9984, 1258, 19, 131, "Text"],
Cell[CellGroupData[{
Cell[574881, 10007, 108, 1, 37, "Subsubsection"],
Cell[CellGroupData[{
Cell[575014, 10012, 258, 6, 135, "Input"],
Cell[575275, 10020, 90, 1, 2261947, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[575402, 10026, 889, 26, 333, "Input"],
Cell[576294, 10054, 742, 25, 2261947, "Output"],
Cell[577039, 10081, 1124, 39, 2261947, "Output"],
Cell[578166, 10122, 2502, 81, 7514196, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[580705, 10208, 166, 3, 96, "Input"],
Cell[580874, 10213, 122, 2, 2261947, "Output"]
}, Closed]],
Cell[581011, 10218, 1182, 24, 177, "Input"],
Cell[CellGroupData[{
Cell[582218, 10246, 1747, 37, 135, "Input"],
Cell[583968, 10285, 1159, 18, 3632062, "Output"]
}, Closed]],
Cell[585142, 10306, 1723, 44, 333, "Input"],
Cell[CellGroupData[{
Cell[586890, 10354, 33, 0, 135, "Input"],
Cell[586926, 10356, 378, 7, 2261947, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[587341, 10368, 2044, 42, 333, "Input"],
Cell[589388, 10412, 1010, 26, 9535636, "Output"]
}, Closed]],
Cell[590413, 10441, 1561, 39, 333, "Input"],
Cell[CellGroupData[{
Cell[591999, 10484, 588, 10, 135, "Input"],
Cell[592590, 10496, 4074, 78, 31914454, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[596701, 10579, 395, 9, 177, "Input"],
Cell[597099, 10590, 778, 12, 2261947, "Output"],
Cell[597880, 10604, 1232, 25, 3632062, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[599149, 10634, 857, 22, 177, "Input"],
Cell[600009, 10658, 1531, 36, 8846140, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[601577, 10699, 438, 11, 96, "Input"],
Cell[602018, 10712, 273, 5, 2261947, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[602328, 10722, 988, 27, 256, "Input"],
Cell[603319, 10751, 2908, 59, 16159954, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[606264, 10815, 877, 24, 256, "Input"],
Cell[607144, 10841, 942, 27, 10307373, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[608123, 10873, 660, 15, 333, "Input"],
Cell[608786, 10890, 323, 6, 2261947, "Output"],
Cell[609112, 10898, 283, 6, 2261947, "Output"],
Cell[609398, 10906, 272, 6, 2261947, "Output"],
Cell[609673, 10914, 312, 7, 2261947, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[610034, 10927, 131, 1, 26, "Subsubsection"],
Cell[610168, 10930, 1604, 39, 447, "Input"],
Cell[CellGroupData[{
Cell[611797, 10973, 246, 4, 135, "Input"],
Cell[612046, 10979, 165, 4, 18663, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[612248, 10988, 1477, 26, 96, "Input"],
Cell[613728, 11016, 544, 10, 18663, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[614309, 11031, 251, 6, 96, "Input"],
Cell[614563, 11039, 383, 7, 2261947, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[614983, 11051, 425, 11, 96, "Input"],
Cell[615411, 11064, 2572, 49, 85659, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[618020, 11118, 2817, 52, 256, "Input"],
Cell[620840, 11172, 15029, 266, 197439, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[635918, 11444, 106, 1, 26, "Subsubsection"],
Cell[CellGroupData[{
Cell[636049, 11449, 43, 0, 135, "Input"],
Cell[636095, 11451, 342, 6, 2296, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[636474, 11462, 370, 9, 96, "Input"],
Cell[636847, 11473, 838, 20, 2296, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[637722, 11498, 303, 8, 96, "Input"],
Cell[638028, 11508, 1426, 44, 3687, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[639491, 11557, 2694, 67, 643, "Input"],
Cell[642188, 11626, 783, 12, 2296, "Output"],
Cell[642974, 11640, 826, 13, 2296, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[643837, 11658, 127, 2, 96, "Input"],
Cell[643967, 11662, 2415, 68, 13468, "Output"]
}, Closed]],
Cell[646397, 11733, 825, 20, 177, "Input"],
Cell[647225, 11755, 985, 23, 216, "Input"],
Cell[CellGroupData[{
Cell[648235, 11782, 182, 4, 135, "Input"],
Cell[648420, 11788, 355, 5, 2296, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[648812, 11798, 2328, 56, 411, "Input"],
Cell[651143, 11856, 1188, 18, 2296, "Output"],
Cell[652334, 11876, 1300, 20, 2296, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[653671, 11901, 1182, 28, 256, "Input"],
Cell[654856, 11931, 662, 12, 135, "Output"],
Cell[655521, 11945, 754, 13, 135, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[656312, 11963, 247, 4, 177, "Input"],
Cell[656562, 11969, 268, 4, 135, "Output"],
Cell[656833, 11975, 310, 6, 135, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[657180, 11986, 716, 16, 256, "Input"],
Cell[657899, 12004, 469, 6, 135, "Output"],
Cell[658371, 12012, 654, 11, 135, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[659062, 12028, 1012, 28, 256, "Input"],
Cell[660077, 12058, 482, 6, 135, "Output"],
Cell[660562, 12066, 484, 6, 135, "Output"],
Cell[661049, 12074, 484, 6, 135, "Output"]
}, Closed]],
Cell[661548, 12083, 3362, 80, 567, "Input"],
Cell[664913, 12165, 7229, 166, 1302, "Input"],
Cell[672145, 12333, 625, 18, 135, "Input"],
Cell[672773, 12353, 1160, 22, 135, "Input"],
Cell[673936, 12377, 925, 14, 135, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[674910, 12397, 208, 3, 100, "Section"],
Cell[675121, 12402, 1092, 24, 102, "Text"],
Cell[676216, 12428, 2077, 59, 108, "Text"],
Cell[678296, 12489, 262, 5, 45, "Text"],
Cell[678561, 12496, 548, 9, 45, "Text"],
Cell[679112, 12507, 522, 17, 45, "Text"],
Cell[679637, 12526, 752, 19, 69, "EquationNumbered"],
Cell[680392, 12547, 422, 11, 45, "Text"],
Cell[680817, 12560, 311, 8, 45, "Text"],
Cell[681131, 12570, 512, 16, 69, "Equation"],
Cell[681646, 12588, 213, 4, 45, "Text"],
Cell[681862, 12594, 511, 12, 38, "EquationNumbered"],
Cell[682376, 12608, 1725, 48, 110, "Text"],
Cell[684104, 12658, 937, 23, 72, "EquationNumbered"],
Cell[685044, 12683, 324, 8, 45, "Text"],
Cell[685371, 12693, 763, 23, 65, "EquationNumbered"],
Cell[686137, 12718, 94, 1, 45, "Text"],
Cell[686234, 12721, 303, 9, 38, "EquationNumbered"],
Cell[686540, 12732, 627, 22, 51, "Text"],
Cell[687170, 12756, 1152, 36, 69, "EquationNumbered"],
Cell[688325, 12794, 4728, 131, 194, "Text"],
Cell[693056, 12927, 3020, 67, 147, "Text"],
Cell[696079, 12996, 1788, 29, 48, "Text"],
Cell[697870, 13027, 279, 3, 45, "Text"],
Cell[698152, 13032, 410, 11, 38, "EquationNumbered"],
Cell[698565, 13045, 736, 18, 82, "Text"],
Cell[699304, 13065, 440, 12, 45, "Text"],
Cell[699747, 13079, 662, 10, 102, "Text"],
Cell[CellGroupData[{
Cell[700434, 13093, 622, 10, 36, "Item"],
Cell[701059, 13105, 576, 7, 36, "Item"],
Cell[701638, 13114, 376, 7, 62, "Item"],
Cell[702017, 13123, 395, 7, 36, "Item"],
Cell[702415, 13132, 427, 7, 62, "Item"]
}, Open  ]],
Cell[702857, 13142, 120, 1, 45, "Text"],
Cell[702980, 13145, 122, 1, 38, "Subsubsubsection"],
Cell[703105, 13148, 117, 1, 27, "Subsubsubsection"],
Cell[703225, 13151, 111, 1, 27, "Subsubsubsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[703373, 13157, 102, 1, 100, "Section"],
Cell[703478, 13160, 2049, 32, 159, "Text"],
Cell[705530, 13194, 1423, 23, 131, "Text"],
Cell[706956, 13219, 2994, 72, 114, "Text"],
Cell[CellGroupData[{
Cell[709975, 13295, 717, 17, 76, "Input"],
Cell[710695, 13314, 1826, 55, 170, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[712558, 13374, 690, 16, 76, "Input"],
Cell[713251, 13392, 1262, 37, 114, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[714562, 13435, 187, 2, 100, "Section"],
Cell[714752, 13439, 860, 18, 102, "Text"],
Cell[715615, 13459, 542, 9, 74, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[716194, 13473, 192, 2, 100, "Section"],
Cell[716389, 13477, 226, 7, 45, "Text"],
Cell[716618, 13486, 398, 9, 38, "EquationNumbered"],
Cell[717019, 13497, 628, 12, 74, "Text"],
Cell[717650, 13511, 511, 14, 66, "Input"],
Cell[718164, 13527, 588, 22, 45, "Text"],
Cell[CellGroupData[{
Cell[718777, 13553, 164, 4, 46, "Input"],
Cell[718944, 13559, 239, 5, 135, "Output"]
}, Closed]],
Cell[719198, 13567, 1719, 52, 101, "Text"],
Cell[CellGroupData[{
Cell[720942, 13623, 233, 6, 46, "Input"],
Cell[721178, 13631, 180, 5, 211, "Output"]
}, Closed]],
Cell[721373, 13639, 1936, 51, 165, "Text"],
Cell[CellGroupData[{
Cell[723334, 13694, 2808, 76, 308, "Input"],
Cell[726145, 13772, 42375, 727, 565, "Output"]
}, Open  ]],
Cell[768535, 14502, 380, 7, 166, "Text"],
Cell[CellGroupData[{
Cell[768940, 14513, 3354, 94, 609, "Input"],
Cell[772297, 14609, 11369, 220, 1270, "Output"]
}, Open  ]],
Cell[783681, 14832, 965, 26, 240, "Text"],
Cell[CellGroupData[{
Cell[784671, 14862, 151, 2, 82, "Subsubsection"],
Cell[CellGroupData[{
Cell[784847, 14868, 898, 22, 292, "Input"],
Cell[785748, 14892, 988, 24, 135, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[786773, 14921, 786, 18, 135, "Input"],
Cell[787562, 14941, 982, 26, 211, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[788581, 14972, 1284, 32, 135, "Input"],
Cell[789868, 15006, 763, 20, 208, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[790668, 15031, 386, 7, 135, "Input"],
Cell[791057, 15040, 476, 12, 208, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[791570, 15057, 550, 8, 216, "Input"],
Cell[792123, 15067, 819, 13, 211, "Output"],
Cell[792945, 15082, 938, 18, 211, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[793920, 15105, 1322, 40, 292, "Input"],
Cell[795245, 15147, 34695, 633, 1905, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[829977, 15785, 1787, 52, 292, "Input"],
Cell[831767, 15839, 37807, 666, 1905, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[869611, 16510, 3626, 97, 913, "Input"],
Cell[873240, 16609, 25356, 437, 2551, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[898633, 17051, 2403, 72, 447, "Input"],
Cell[901039, 17125, 11773, 227, 1905, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[912849, 17357, 2304, 67, 447, "Input"],
Cell[915156, 17426, 106196, 2047, 2593, "Output"]
}, Closed]],
Cell[1021367, 19476, 815, 20, 216, "Input"],
Cell[CellGroupData[{
Cell[1022207, 19500, 2364, 62, 526, "Input"],
Cell[1024574, 19564, 8524, 199, 2196, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[1033135, 19768, 598, 16, 235, "Input"],
Cell[1033736, 19786, 288, 4, 135, "Output"]
}, Closed]],
Cell[1034039, 19793, 128, 1, 150, "Text"],
Cell[CellGroupData[{
Cell[1034192, 19798, 2813, 80, 447, "Input"],
Cell[1037008, 19880, 12328, 206, 1905, "Output"]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1049397, 20093, 96, 1, 225, "Section"],
Cell[1049496, 20096, 354, 9, 168, "Text"],
Cell[CellGroupData[{
Cell[1049875, 20109, 124, 1, 117, "Subsection"],
Cell[1050002, 20112, 385, 7, 100, "Text"],
Cell[1050390, 20121, 386, 8, 69, "EquationNumbered"],
Cell[1050779, 20131, 698, 22, 100, "Text"],
Cell[1051480, 20155, 313, 8, 100, "Text"],
Cell[1051796, 20165, 851, 20, 292, "EquationNumbered"],
Cell[1052650, 20187, 896, 25, 100, "Text"],
Cell[1053549, 20214, 957, 31, 288, "EquationNumbered"],
Cell[1054509, 20247, 258, 3, 100, "Text"],
Cell[1054770, 20252, 723, 16, 81, "EquationNumbered"],
Cell[1055496, 20270, 299, 7, 100, "Text"],
Cell[1055798, 20279, 1310, 39, 324, "EquationNumbered"],
Cell[1057111, 20320, 1027, 26, 166, "Text"],
Cell[1058141, 20348, 1349, 32, 87, "EquationNumbered"],
Cell[1059493, 20382, 544, 14, 109, "Text"],
Cell[1060040, 20398, 345, 10, 87, "EquationNumbered"],
Cell[1060388, 20410, 652, 17, 100, "Text"],
Cell[1061043, 20429, 375, 7, 100, "Text"]
}, Open  ]],
Cell[1061433, 20439, 133, 1, 117, "Subsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1061603, 20445, 96, 1, 225, "Section"],
Cell[1061702, 20448, 695, 19, 114, "Text"],
Cell[1062400, 20469, 1083, 29, 186, "Text"],
Cell[1063486, 20500, 129, 1, 100, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1063652, 20506, 95, 1, 225, "Section"],
Cell[1063750, 20509, 581, 12, 229, "Text"],
Cell[1064334, 20523, 529, 12, 166, "Text"],
Cell[1064866, 20537, 563, 12, 100, "Text"],
Cell[1065432, 20551, 759, 19, 166, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

